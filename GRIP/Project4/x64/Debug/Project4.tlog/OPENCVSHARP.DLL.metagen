ImageRuntimeVersion: v4.0.30319
Assembly OpenCvSharp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=6adad1e807fea099: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Memory, Version=4.0.1.2, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Runtime.CompilerServices.Unsafe, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Class OpenCvSharp.Cv2: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    Double PI = 3,14159265358979 : Public, Static, Literal, HasDefault
    Double LOG2 = 0,693147180559945 : Public, Static, Literal, HasDefault
    Int32 FILLED = -1 : Public, Static, Literal, HasDefault
  Methods:
    CreateSuperResolution_BTVL1(): PrivateScope, Public, Static, HideBySig
    CreateSuperResolution_BTVL1_CUDA(): PrivateScope, Public, Static, HideBySig
    CreateOptFlow_Farneback(): PrivateScope, Public, Static, HideBySig
    CreateOptFlow_Farneback_GPU(): PrivateScope, Public, Static, HideBySig
    CreateOptFlow_DualTVL1_GPU(): PrivateScope, Public, Static, HideBySig
    CreateOptFlow_Brox_GPU(): PrivateScope, Public, Static, HideBySig
    CreateOptFlow_PyrLK_GPU(): PrivateScope, Public, Static, HideBySig
    CamShift(InputArray, Rect&, TermCriteria): PrivateScope, Public, Static, HideBySig
    MeanShift(InputArray, Rect&, TermCriteria): PrivateScope, Public, Static, HideBySig
    BuildOpticalFlowPyramid(InputArray, OutputArray, Size, Int32, Boolean(Optional, HasDefault), BorderTypes(Optional, HasDefault), BorderTypes(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BuildOpticalFlowPyramid(InputArray, Mat[]&(Out), Size, Int32, Boolean(Optional, HasDefault), BorderTypes(Optional, HasDefault), BorderTypes(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalcOpticalFlowPyrLK(InputArray, InputArray, InputArray, InputOutputArray, OutputArray, OutputArray, Nullable`1(Optional, HasDefault), Int32(Optional, HasDefault), Nullable`1(Optional, HasDefault), OpticalFlowFlags(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalcOpticalFlowPyrLK(InputArray, InputArray, Point2f[], Point2f[]&, Byte[]&(Out), Single[]&(Out), Nullable`1(Optional, HasDefault), Int32(Optional, HasDefault), Nullable`1(Optional, HasDefault), OpticalFlowFlags(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalcOpticalFlowFarneback(InputArray, InputArray, InputOutputArray, Double, Int32, Int32, Int32, Int32, Double, OpticalFlowFlags): PrivateScope, Public, Static, HideBySig
    ComputeECC(InputArray, InputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindTransformECC(InputArray, InputArray, InputOutputArray, MotionTypes, TermCriteria, InputArray(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindTransformECC(InputArray, InputArray, InputOutputArray, MotionTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault), InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Moments(IEnumerable`1, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Moments(IEnumerable`1, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MatchTemplate(InputArray, InputArray, OutputArray, TemplateMatchModes, InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConnectedComponentsWithAlgorithm(InputArray, OutputArray, PixelConnectivity, MatType, ConnectedComponentsAlgorithmsTypes): PrivateScope, Public, Static, HideBySig
    ConnectedComponents(InputArray, OutputArray, PixelConnectivity(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConnectedComponents(InputArray, OutputArray, PixelConnectivity, MatType): PrivateScope, Public, Static, HideBySig
    ConnectedComponents(InputArray, Int32[,]&(Out), PixelConnectivity): PrivateScope, Public, Static, HideBySig
    ConnectedComponentsWithStatsWithAlgorithm(InputArray, OutputArray, OutputArray, OutputArray, PixelConnectivity, MatType, ConnectedComponentsAlgorithmsTypes): PrivateScope, Public, Static, HideBySig
    ConnectedComponentsWithStats(InputArray, OutputArray, OutputArray, OutputArray, PixelConnectivity(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConnectedComponentsWithStats(InputArray, OutputArray, OutputArray, OutputArray, PixelConnectivity, MatType): PrivateScope, Public, Static, HideBySig
    ConnectedComponentsEx(InputArray, PixelConnectivity(Optional, HasDefault), ConnectedComponentsAlgorithmsTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindContours(InputArray, Point[][]&(Out), HierarchyIndex[]&(Out), RetrievalModes, ContourApproximationModes, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindContours(InputArray, Mat[]&(Out), OutputArray, RetrievalModes, ContourApproximationModes, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindContoursAsArray(InputArray, RetrievalModes, ContourApproximationModes, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindContoursAsMat(InputArray, RetrievalModes, ContourApproximationModes, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ApproxPolyDP(InputArray, OutputArray, Double, Boolean): PrivateScope, Public, Static, HideBySig
    ApproxPolyDP(IEnumerable`1, Double, Boolean): PrivateScope, Public, Static, HideBySig
    ApproxPolyDP(IEnumerable`1, Double, Boolean): PrivateScope, Public, Static, HideBySig
    ArcLength(InputArray, Boolean): PrivateScope, Public, Static, HideBySig
    ArcLength(IEnumerable`1, Boolean): PrivateScope, Public, Static, HideBySig
    ArcLength(IEnumerable`1, Boolean): PrivateScope, Public, Static, HideBySig
    BoundingRect(InputArray): PrivateScope, Public, Static, HideBySig
    BoundingRect(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    BoundingRect(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ContourArea(InputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ContourArea(IEnumerable`1, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ContourArea(IEnumerable`1, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MinAreaRect(InputArray): PrivateScope, Public, Static, HideBySig
    MinAreaRect(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    MinAreaRect(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    BoxPoints(RotatedRect, OutputArray): PrivateScope, Public, Static, HideBySig
    BoxPoints(RotatedRect): PrivateScope, Public, Static, HideBySig
    MinEnclosingCircle(InputArray, Point2f&(Out), Single&(Out)): PrivateScope, Public, Static, HideBySig
    MinEnclosingCircle(IEnumerable`1, Point2f&(Out), Single&(Out)): PrivateScope, Public, Static, HideBySig
    MinEnclosingCircle(IEnumerable`1, Point2f&(Out), Single&(Out)): PrivateScope, Public, Static, HideBySig
    MinEnclosingTriangle(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    MinEnclosingTriangle(IEnumerable`1, Point2f[]&(Out)): PrivateScope, Public, Static, HideBySig
    MinEnclosingTriangle(IEnumerable`1, Point2f[]&(Out)): PrivateScope, Public, Static, HideBySig
    MatchShapes(InputArray, InputArray, ShapeMatchModes, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MatchShapes(IEnumerable`1, IEnumerable`1, ShapeMatchModes, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConvexHull(InputArray, OutputArray, Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConvexHull(IEnumerable`1, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConvexHull(IEnumerable`1, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConvexHullIndices(IEnumerable`1, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConvexHullIndices(IEnumerable`1, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConvexityDefects(InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    ConvexityDefects(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ConvexityDefects(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    IsContourConvex(InputArray): PrivateScope, Public, Static, HideBySig
    IsContourConvex(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    IsContourConvex(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    IntersectConvexConvex(InputArray, InputArray, OutputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IntersectConvexConvex(IEnumerable`1, IEnumerable`1, Point[]&(Out), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IntersectConvexConvex(IEnumerable`1, IEnumerable`1, Point2f[]&(Out), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FitEllipse(InputArray): PrivateScope, Public, Static, HideBySig
    FitEllipse(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    FitEllipse(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    FitEllipseAMS(InputArray): PrivateScope, Public, Static, HideBySig
    FitEllipseAMS(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    FitEllipseAMS(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    FitEllipseDirect(InputArray): PrivateScope, Public, Static, HideBySig
    FitEllipseDirect(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    FitEllipseDirect(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    FitLine(InputArray, OutputArray, DistanceTypes, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    FitLine(IEnumerable`1, DistanceTypes, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    FitLine(IEnumerable`1, DistanceTypes, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    FitLine(IEnumerable`1, DistanceTypes, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    FitLine(IEnumerable`1, DistanceTypes, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    PointPolygonTest(InputArray, Point2f, Boolean): PrivateScope, Public, Static, HideBySig
    PointPolygonTest(IEnumerable`1, Point2f, Boolean): PrivateScope, Public, Static, HideBySig
    PointPolygonTest(IEnumerable`1, Point2f, Boolean): PrivateScope, Public, Static, HideBySig
    RotatedRectangleIntersection(RotatedRect, RotatedRect, OutputArray): PrivateScope, Public, Static, HideBySig
    RotatedRectangleIntersection(RotatedRect, RotatedRect, Point2f[]&(Out)): PrivateScope, Public, Static, HideBySig
    ApplyColorMap(InputArray, OutputArray, ColormapTypes): PrivateScope, Public, Static, HideBySig
    ApplyColorMap(InputArray, OutputArray, InputArray): PrivateScope, Public, Static, HideBySig
    Line(InputOutputArray, Int32, Int32, Int32, Int32, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Line(InputOutputArray, Point, Point, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ArrowedLine(InputOutputArray, Point, Point, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Rectangle(InputOutputArray, Point, Point, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Rectangle(InputOutputArray, Rect, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Rectangle(Mat, Rect, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Rectangle(Mat, Point, Point, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Circle(InputOutputArray, Int32, Int32, Int32, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Circle(InputOutputArray, Point, Int32, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Ellipse(InputOutputArray, Point, Size, Double, Double, Double, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Ellipse(InputOutputArray, RotatedRect, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DrawMarker(InputOutputArray, Point, Scalar, MarkerTypes(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), LineTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FillConvexPoly(Mat, IEnumerable`1, Scalar, LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FillConvexPoly(InputOutputArray, InputArray, Scalar, LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FillPoly(Mat, IEnumerable`1, Scalar, LineTypes(Optional, HasDefault), Int32(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FillPoly(InputOutputArray, InputArray, Scalar, LineTypes(Optional, HasDefault), Int32(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Polylines(Mat, IEnumerable`1, Boolean, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Polylines(InputOutputArray, InputArray, Boolean, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DrawContours(InputOutputArray, IEnumerable`1, Int32, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), IEnumerable`1(Optional, HasDefault), Int32(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DrawContours(InputOutputArray, IEnumerable`1, Int32, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Mat(Optional, HasDefault), Int32(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ClipLine(Size, Point&, Point&): PrivateScope, Public, Static, HideBySig
    ClipLine(Rect, Point&, Point&): PrivateScope, Public, Static, HideBySig
    Ellipse2Poly(Point, Size, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Ellipse2Poly(Point2d, Size2d, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    PutText(InputOutputArray, String, Point, HersheyFonts, Double, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetTextSize(String, HersheyFonts, Double, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    GetFontScaleFromHeight(HersheyFonts, Int32, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GroupRectangles(IList`1, Int32, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GroupRectangles(IList`1, Int32[]&(Out), Int32, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GroupRectangles(IList`1, Int32, Double, Int32[]&(Out), Double[]&(Out)): PrivateScope, Public, Static, HideBySig
    GroupRectangles(IList`1, Int32[]&(Out), Double[]&(Out), Int32, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GroupRectanglesMeanshift(IList`1, Double[]&(Out), Double[]&(Out), Double(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Inpaint(InputArray, InputArray, OutputArray, Double, InpaintMethod): PrivateScope, Public, Static, HideBySig
    FastNlMeansDenoising(InputArray, OutputArray, Single(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FastNlMeansDenoisingColored(InputArray, OutputArray, Single(Optional, HasDefault), Single(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FastNlMeansDenoisingMulti(IEnumerable`1, OutputArray, Int32, Int32, Single(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FastNlMeansDenoisingColoredMulti(IEnumerable`1, OutputArray, Int32, Int32, Single(Optional, HasDefault), Single(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DenoiseTVL1(IEnumerable`1, Mat, Double(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Decolor(InputArray, OutputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    SeamlessClone(InputArray, InputArray, InputArray, Point, OutputArray, SeamlessCloneMethods): PrivateScope, Public, Static, HideBySig
    ColorChange(InputArray, InputArray, OutputArray, Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    IlluminationChange(InputArray, InputArray, OutputArray, Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    TextureFlattening(InputArray, InputArray, OutputArray, Single(Optional, HasDefault), Single(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EdgePreservingFilter(InputArray, OutputArray, EdgePreservingMethods(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DetailEnhance(InputArray, OutputArray, Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PencilSketch(InputArray, OutputArray, OutputArray, Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Stylization(InputArray, OutputArray, Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateFrameSource_Empty(): PrivateScope, Public, Static, HideBySig
    CreateFrameSource_Video(String): PrivateScope, Public, Static, HideBySig
    CreateFrameSource_Video_CUDA(String): PrivateScope, Public, Static, HideBySig
    CreateFrameSource_Camera(Int32): PrivateScope, Public, Static, HideBySig
    NamedWindow(String, WindowFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DestroyWindow(String): PrivateScope, Public, Static, HideBySig
    DestroyAllWindows(): PrivateScope, Public, Static, HideBySig
    StartWindowThread(): PrivateScope, Public, Static, HideBySig
    WaitKeyEx(Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    WaitKey(Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ImShow(String, Mat): PrivateScope, Public, Static, HideBySig
    ResizeWindow(String, Int32, Int32): PrivateScope, Public, Static, HideBySig
    ResizeWindow(String, Size): PrivateScope, Public, Static, HideBySig
    MoveWindow(String, Int32, Int32): PrivateScope, Public, Static, HideBySig
    SetWindowProperty(String, WindowPropertyFlags, Double): PrivateScope, Public, Static, HideBySig
    SetWindowTitle(String, String): PrivateScope, Public, Static, HideBySig
    GetWindowProperty(String, WindowPropertyFlags): PrivateScope, Public, Static, HideBySig
    GetWindowImageRect(String): PrivateScope, Public, Static, HideBySig
    SetMouseCallback(String, MouseCallback, IntPtr(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetMouseWheelDelta(MouseEventFlags): PrivateScope, Public, Static, HideBySig
    SelectROI(String, InputArray, Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SelectROI(InputArray, Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SelectROIs(String, InputArray, Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateTrackbar(String, String, Int32&, Int32, TrackbarCallbackNative(Optional, HasDefault), IntPtr(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateTrackbar(String, String, Int32, TrackbarCallbackNative(Optional, HasDefault), IntPtr(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetTrackbarPos(String, String): PrivateScope, Public, Static, HideBySig
    SetTrackbarPos(String, String, Int32): PrivateScope, Public, Static, HideBySig
    SetTrackbarMax(String, String, Int32): PrivateScope, Public, Static, HideBySig
    SetTrackbarMin(String, String, Int32): PrivateScope, Public, Static, HideBySig
    GetWindowHandle(String): PrivateScope, Public, Static, HideBySig
    ImRead(String, ImreadModes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ImReadMulti(String, Mat[]&(Out), ImreadModes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ImWrite(String, Mat, Int32[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ImWrite(String, Mat, ImageEncodingParam[]): PrivateScope, Public, Static, HideBySig
    ImWrite(String, IEnumerable`1, Int32[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ImWrite(String, IEnumerable`1, ImageEncodingParam[]): PrivateScope, Public, Static, HideBySig
    ImDecode(Mat, ImreadModes): PrivateScope, Public, Static, HideBySig
    ImDecode(InputArray, ImreadModes): PrivateScope, Public, Static, HideBySig
    ImDecode(Byte[], ImreadModes): PrivateScope, Public, Static, HideBySig
    ImDecode(ReadOnlySpan`1, ImreadModes): PrivateScope, Public, Static, HideBySig
    ImEncode(String, InputArray, Byte[]&(Out), Int32[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ImEncode(String, InputArray, Byte[]&(Out), ImageEncodingParam[]): PrivateScope, Public, Static, HideBySig
    HaveImageReader(String): PrivateScope, Public, Static, HideBySig
    HaveImageWriter(String): PrivateScope, Public, Static, HideBySig
    GetGaussianKernel(Int32, Double, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetDerivKernels(OutputArray, OutputArray, Int32, Int32, Int32, Boolean(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetGaborKernel(Size, Double, Double, Double, Double, Double, Int32): PrivateScope, Public, Static, HideBySig
    GetStructuringElement(MorphShapes, Size): PrivateScope, Public, Static, HideBySig
    GetStructuringElement(MorphShapes, Size, Point): PrivateScope, Public, Static, HideBySig
    MedianBlur(InputArray, OutputArray, Int32): PrivateScope, Public, Static, HideBySig
    GaussianBlur(InputArray, OutputArray, Size, Double, Double(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BilateralFilter(InputArray, OutputArray, Int32, Double, Double, BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BoxFilter(InputArray, OutputArray, MatType, Size, Nullable`1(Optional, HasDefault), Boolean(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SqrBoxFilter(InputArray, OutputArray, Int32, Size, Nullable`1(Optional, HasDefault), Boolean(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Blur(InputArray, OutputArray, Size, Nullable`1(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Filter2D(InputArray, OutputArray, MatType, InputArray, Nullable`1(Optional, HasDefault), Double(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SepFilter2D(InputArray, OutputArray, MatType, InputArray, InputArray, Nullable`1(Optional, HasDefault), Double(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Sobel(InputArray, OutputArray, MatType, Int32, Int32, Int32(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SpatialGradient(InputArray, OutputArray, OutputArray, Int32(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Scharr(InputArray, OutputArray, MatType, Int32, Int32, Double(Optional, HasDefault), Double(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Laplacian(InputArray, OutputArray, MatType, Int32(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Canny(InputArray, OutputArray, Double, Double, Int32(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Canny(InputArray, InputArray, OutputArray, Double, Double, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CornerMinEigenVal(InputArray, OutputArray, Int32, Int32(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CornerHarris(InputArray, OutputArray, Int32, Int32, Double, BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CornerEigenValsAndVecs(InputArray, OutputArray, Int32, Int32, BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PreCornerDetect(InputArray, OutputArray, Int32, BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CornerSubPix(InputArray, IEnumerable`1, Size, Size, TermCriteria): PrivateScope, Public, Static, HideBySig
    GoodFeaturesToTrack(InputArray, Int32, Double, Double, InputArray, Int32, Boolean, Double): PrivateScope, Public, Static, HideBySig
    HoughLines(InputArray, Double, Double, Int32, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    HoughLinesP(InputArray, Double, Double, Int32, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    HoughLinesPointSet(InputArray, OutputArray, Int32, Int32, Double, Double, Double, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    HoughCircles(InputArray, HoughModes, Double, Double, Double(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MorphologyDefaultBorderValue(): PrivateScope, Public, Static, HideBySig
    Dilate(InputArray, OutputArray, InputArray, Nullable`1(Optional, HasDefault), Int32(Optional, HasDefault), BorderTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Erode(InputArray, OutputArray, InputArray, Nullable`1(Optional, HasDefault), Int32(Optional, HasDefault), BorderTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MorphologyEx(InputArray, OutputArray, MorphTypes, InputArray, Nullable`1(Optional, HasDefault), Int32(Optional, HasDefault), BorderTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Resize(InputArray, OutputArray, Size, Double(Optional, HasDefault), Double(Optional, HasDefault), InterpolationFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    WarpAffine(InputArray, OutputArray, InputArray, Size, InterpolationFlags(Optional, HasDefault), BorderTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    WarpPerspective(InputArray, OutputArray, InputArray, Size, InterpolationFlags(Optional, HasDefault), BorderTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    WarpPerspective(InputArray, OutputArray, Single[,], Size, InterpolationFlags(Optional, HasDefault), BorderTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Remap(InputArray, OutputArray, InputArray, InputArray, InterpolationFlags(Optional, HasDefault), BorderTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConvertMaps(InputArray, InputArray, OutputArray, OutputArray, MatType, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetRotationMatrix2D(Point2f, Double, Double): PrivateScope, Public, Static, HideBySig
    InvertAffineTransform(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    GetPerspectiveTransform(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    GetPerspectiveTransform(InputArray, InputArray): PrivateScope, Public, Static, HideBySig
    GetAffineTransform(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    GetAffineTransform(InputArray, InputArray): PrivateScope, Public, Static, HideBySig
    GetRectSubPix(InputArray, Size, Point2f, OutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    LogPolar(InputArray, OutputArray, Point2f, Double, InterpolationFlags): PrivateScope, Public, Static, HideBySig
    LinearPolar(InputArray, OutputArray, Point2f, Double, InterpolationFlags): PrivateScope, Public, Static, HideBySig
    WarpPolar(InputArray, OutputArray, Size, Point2f, Double, InterpolationFlags, WarpPolarMode): PrivateScope, Public, Static, HideBySig
    Integral(InputArray, OutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Integral(InputArray, OutputArray, OutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Integral(InputArray, OutputArray, OutputArray, OutputArray, Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Accumulate(InputArray, InputOutputArray, InputArray): PrivateScope, Public, Static, HideBySig
    AccumulateSquare(InputArray, InputOutputArray, InputArray): PrivateScope, Public, Static, HideBySig
    AccumulateProduct(InputArray, InputArray, InputOutputArray, InputArray): PrivateScope, Public, Static, HideBySig
    AccumulateWeighted(InputArray, InputOutputArray, Double, InputArray): PrivateScope, Public, Static, HideBySig
    PhaseCorrelate(InputArray, InputArray, InputArray, Double&(Out)): PrivateScope, Public, Static, HideBySig
    CreateHanningWindow(InputOutputArray, Size, MatType): PrivateScope, Public, Static, HideBySig
    Threshold(InputArray, OutputArray, Double, Double, ThresholdTypes): PrivateScope, Public, Static, HideBySig
    AdaptiveThreshold(InputArray, OutputArray, Double, AdaptiveThresholdTypes, ThresholdTypes, Int32, Double): PrivateScope, Public, Static, HideBySig
    PyrDown(InputArray, OutputArray, Nullable`1(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BuildPyramid(InputArray, VectorOfMat, Int32, BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PyrUp(InputArray, OutputArray, Nullable`1(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalcHist(Mat[], Int32[], InputArray, OutputArray, Int32, Int32[], Rangef[], Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalcHist(Mat[], Int32[], InputArray, OutputArray, Int32, Int32[], Single[][], Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalcBackProject(Mat[], Int32[], InputArray, OutputArray, Rangef[], Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CompareHist(InputArray, InputArray, HistCompMethods): PrivateScope, Public, Static, HideBySig
    EqualizeHist(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    CreateCLAHE(Double(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EMD(InputArray, InputArray, DistanceTypes): PrivateScope, Public, Static, HideBySig
    EMD(InputArray, InputArray, DistanceTypes, InputArray): PrivateScope, Public, Static, HideBySig
    EMD(InputArray, InputArray, DistanceTypes, InputArray, Single&(Out), OutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Watershed(InputArray, InputOutputArray): PrivateScope, Public, Static, HideBySig
    PyrMeanShiftFiltering(InputArray, OutputArray, Double, Double, Int32(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GrabCut(InputArray, InputOutputArray, Rect, InputOutputArray, InputOutputArray, Int32, GrabCutModes): PrivateScope, Public, Static, HideBySig
    DistanceTransformWithLabels(InputArray, OutputArray, OutputArray, DistanceTypes, DistanceTransformMasks, DistanceTransformLabelTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DistanceTransform(InputArray, OutputArray, DistanceTypes, DistanceTransformMasks, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FloodFill(InputOutputArray, Point, Scalar): PrivateScope, Public, Static, HideBySig
    FloodFill(InputOutputArray, Point, Scalar, Rect&(Out), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), FloodFillFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FloodFill(InputOutputArray, InputOutputArray, Point, Scalar): PrivateScope, Public, Static, HideBySig
    FloodFill(InputOutputArray, InputOutputArray, Point, Scalar, Rect&(Out), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), FloodFillFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BlendLinear(InputArray, InputArray, InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    CvtColor(InputArray, OutputArray, ColorConversionCodes, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CvtColorTwoPlane(InputArray, InputArray, OutputArray, ColorConversionCodes): PrivateScope, Public, Static, HideBySig
    Demosaicing(InputArray, OutputArray, ColorConversionCodes, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Moments(InputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Moments(Byte[,], Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Moments(Single[,], Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MinMaxIdx(InputArray, Double&(Out), Double&(Out), Int32[], Int32[], InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Reduce(InputArray, OutputArray, ReduceDimension, ReduceTypes, Int32): PrivateScope, Public, Static, HideBySig
    Merge(Mat[], Mat): PrivateScope, Public, Static, HideBySig
    Split(Mat, Mat[]&(Out)): PrivateScope, Public, Static, HideBySig
    Split(Mat): PrivateScope, Public, Static, HideBySig
    MixChannels(Mat[], Mat[], Int32[]): PrivateScope, Public, Static, HideBySig
    ExtractChannel(InputArray, OutputArray, Int32): PrivateScope, Public, Static, HideBySig
    InsertChannel(InputArray, InputOutputArray, Int32): PrivateScope, Public, Static, HideBySig
    Flip(InputArray, OutputArray, FlipMode): PrivateScope, Public, Static, HideBySig
    Rotate(InputArray, OutputArray, RotateFlags): PrivateScope, Public, Static, HideBySig
    Repeat(InputArray, Int32, Int32, OutputArray): PrivateScope, Public, Static, HideBySig
    Repeat(Mat, Int32, Int32): PrivateScope, Public, Static, HideBySig
    HConcat(IEnumerable`1, OutputArray): PrivateScope, Public, Static, HideBySig
    HConcat(InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    VConcat(IEnumerable`1, OutputArray): PrivateScope, Public, Static, HideBySig
    VConcat(InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    BitwiseAnd(InputArray, InputArray, OutputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BitwiseOr(InputArray, InputArray, OutputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BitwiseXor(InputArray, InputArray, OutputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BitwiseNot(InputArray, OutputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Absdiff(InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    CopyTo(InputArray, OutputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    InRange(InputArray, InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    InRange(InputArray, Scalar, Scalar, OutputArray): PrivateScope, Public, Static, HideBySig
    Compare(InputArray, InputArray, OutputArray, CmpType): PrivateScope, Public, Static, HideBySig
    Min(InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    Min(Mat, Mat, Mat): PrivateScope, Public, Static, HideBySig
    Min(Mat, Double, Mat): PrivateScope, Public, Static, HideBySig
    Max(InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    Max(Mat, Mat, Mat): PrivateScope, Public, Static, HideBySig
    Max(Mat, Double, Mat): PrivateScope, Public, Static, HideBySig
    Sqrt(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    Pow(InputArray, Double, OutputArray): PrivateScope, Public, Static, HideBySig
    Exp(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    Log(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    PolarToCart(InputArray, InputArray, OutputArray, OutputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CartToPolar(InputArray, InputArray, OutputArray, OutputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Phase(InputArray, InputArray, OutputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Magnitude(InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    CheckRange(InputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CheckRange(InputArray, Boolean, Point&(Out), Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PatchNaNs(InputOutputArray, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Gemm(InputArray, InputArray, Double, InputArray, Double, OutputArray, GemmFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MulTransposed(InputArray, OutputArray, Boolean, InputArray(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Transpose(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    Transform(InputArray, OutputArray, InputArray): PrivateScope, Public, Static, HideBySig
    PerspectiveTransform(InputArray, OutputArray, InputArray): PrivateScope, Public, Static, HideBySig
    PerspectiveTransform(IEnumerable`1, Mat): PrivateScope, Public, Static, HideBySig
    PerspectiveTransform(IEnumerable`1, Mat): PrivateScope, Public, Static, HideBySig
    PerspectiveTransform(IEnumerable`1, Mat): PrivateScope, Public, Static, HideBySig
    PerspectiveTransform(IEnumerable`1, Mat): PrivateScope, Public, Static, HideBySig
    CompleteSymm(InputOutputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SetIdentity(InputOutputArray, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Determinant(InputArray): PrivateScope, Public, Static, HideBySig
    Trace(InputArray): PrivateScope, Public, Static, HideBySig
    Invert(InputArray, OutputArray, DecompTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Solve(InputArray, InputArray, OutputArray, DecompTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SolveLP(InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    Sort(InputArray, OutputArray, SortFlags): PrivateScope, Public, Static, HideBySig
    SortIdx(InputArray, OutputArray, SortFlags): PrivateScope, Public, Static, HideBySig
    SolveCubic(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    SolvePoly(InputArray, OutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Eigen(InputArray, OutputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    EigenNonSymmetric(InputArray, OutputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    CalcCovarMatrix(Mat[], Mat, Mat, CovarFlags, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalcCovarMatrix(InputArray, OutputArray, InputOutputArray, CovarFlags, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PCACompute(InputArray, InputOutputArray, OutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PCACompute(InputArray, InputOutputArray, OutputArray, OutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PCAComputeVar(InputArray, InputOutputArray, OutputArray, Double): PrivateScope, Public, Static, HideBySig
    PCAComputeVar(InputArray, InputOutputArray, OutputArray, OutputArray, Double): PrivateScope, Public, Static, HideBySig
    PCAProject(InputArray, InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    PCABackProject(InputArray, InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    SVDecomp(InputArray, OutputArray, OutputArray, OutputArray, Flags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SVBackSubst(InputArray, InputArray, InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    Mahalanobis(InputArray, InputArray, InputArray): PrivateScope, Public, Static, HideBySig
    Dft(InputArray, OutputArray, DftFlags(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Idft(InputArray, OutputArray, DftFlags(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Dct(InputArray, OutputArray, DctFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Idct(InputArray, OutputArray, DctFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MulSpectrums(InputArray, InputArray, OutputArray, DftFlags, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetOptimalDFTSize(Int32): PrivateScope, Public, Static, HideBySig
    GetTheRNG(): PrivateScope, Public, Static, HideBySig
    SetTheRNG(UInt64): PrivateScope, Public, Static, HideBySig
    Randu(InputOutputArray, InputArray, InputArray): PrivateScope, Public, Static, HideBySig
    Randu(InputOutputArray, Scalar, Scalar): PrivateScope, Public, Static, HideBySig
    Randn(InputOutputArray, InputArray, InputArray): PrivateScope, Public, Static, HideBySig
    Randn(InputOutputArray, Scalar, Scalar): PrivateScope, Public, Static, HideBySig
    RandShuffle(InputOutputArray, Double): PrivateScope, Public, Static, HideBySig
    RandShuffle(InputOutputArray, Double, RNG&): PrivateScope, Public, Static, HideBySig
    Kmeans(InputArray, Int32, InputOutputArray, TermCriteria, Int32, KMeansFlags, OutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FastAtan2(Single, Single): PrivateScope, Public, Static, HideBySig
    CubeRoot(Single): PrivateScope, Public, Static, HideBySig
    SetNumThreads(Int32): PrivateScope, Public, Static, HideBySig
    GetNumThreads(): PrivateScope, Public, Static, HideBySig
    GetThreadNum(): PrivateScope, Public, Static, HideBySig
    GetBuildInformation(): PrivateScope, Public, Static, HideBySig
    GetVersionString(): PrivateScope, Public, Static, HideBySig
    GetVersionMajor(): PrivateScope, Public, Static, HideBySig
    GetVersionMinor(): PrivateScope, Public, Static, HideBySig
    GetVersionRevision(): PrivateScope, Public, Static, HideBySig
    GetTickCount(): PrivateScope, Public, Static, HideBySig
    GetTickFrequency(): PrivateScope, Public, Static, HideBySig
    GetCpuTickCount(): PrivateScope, Public, Static, HideBySig
    CheckHardwareSupport(CpuFeatures): PrivateScope, Public, Static, HideBySig
    GetHardwareFeatureName(CpuFeatures): PrivateScope, Public, Static, HideBySig
    GetCpuFeaturesLine(): PrivateScope, Public, Static, HideBySig
    GetNumberOfCpus(): PrivateScope, Public, Static, HideBySig
    SetUseOptimized(Boolean): PrivateScope, Public, Static, HideBySig
    UseOptimized(): PrivateScope, Public, Static, HideBySig
    AlignSize(Int32, Int32): PrivateScope, Public, Static, HideBySig
    SetBreakOnError(Boolean): PrivateScope, Public, Static, HideBySig
    Format(InputArray, FormatType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SetLogLevel(LogLevel): PrivateScope, Public, Static, HideBySig
    GetLogLevel(): PrivateScope, Public, Static, HideBySig
    Abs(Mat): PrivateScope, Public, Static, HideBySig
    Abs(MatExpr): PrivateScope, Public, Static, HideBySig
    Partition(IEnumerable`1, Int32[]&(Out), PartitionPredicate`1): PrivateScope, Public, Static, HideBySig
    FAST(InputArray, Int32, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FAST(InputArray, Int32, Boolean, FASTType): PrivateScope, Public, Static, HideBySig
    AGAST(InputArray, Int32, Boolean, DetectorType): PrivateScope, Public, Static, HideBySig
    DrawKeypoints(InputArray, IEnumerable`1, InputOutputArray, Nullable`1(Optional, HasDefault), DrawMatchesFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DrawMatches(Mat, IEnumerable`1, Mat, IEnumerable`1, IEnumerable`1, Mat, Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), IEnumerable`1(Optional, HasDefault), DrawMatchesFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DrawMatchesKnn(Mat, IEnumerable`1, Mat, IEnumerable`1, IEnumerable`1, Mat, Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), IEnumerable`1(Optional, HasDefault), DrawMatchesFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EvaluateFeatureDetector(Mat, Mat, Mat, KeyPoint[]&, KeyPoint[]&, Single&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig
    ComputeRecallPrecisionCurve(DMatch[][], Byte[][]): PrivateScope, Public, Static, HideBySig
    GetRecall(IEnumerable`1, Single): PrivateScope, Public, Static, HideBySig
    GetNearestPoint(IEnumerable`1, Single): PrivateScope, Public, Static, HideBySig
    Rodrigues(InputArray, OutputArray, OutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Rodrigues(Double[], Double[,]&(Out), Double[,]&(Out)): PrivateScope, Public, Static, HideBySig
    Rodrigues(Double[,], Double[]&(Out), Double[,]&(Out)): PrivateScope, Public, Static, HideBySig
    FindHomography(InputArray, InputArray, HomographyMethods(Optional, HasDefault), Double(Optional, HasDefault), OutputArray(Optional, HasDefault), Int32(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindHomography(IEnumerable`1, IEnumerable`1, HomographyMethods(Optional, HasDefault), Double(Optional, HasDefault), OutputArray(Optional, HasDefault), Int32(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindHomography(InputArray, InputArray, OutputArray, UsacParams): PrivateScope, Public, Static, HideBySig
    RQDecomp3x3(InputArray, OutputArray, OutputArray, OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    RQDecomp3x3(Double[,], Double[,]&(Out), Double[,]&(Out)): PrivateScope, Public, Static, HideBySig
    RQDecomp3x3(Double[,], Double[,]&(Out), Double[,]&(Out), Double[,]&(Out), Double[,]&(Out), Double[,]&(Out)): PrivateScope, Public, Static, HideBySig
    DecomposeProjectionMatrix(InputArray, OutputArray, OutputArray, OutputArray, OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DecomposeProjectionMatrix(Double[,], Double[,]&(Out), Double[,]&(Out), Double[]&(Out), Double[,]&(Out), Double[,]&(Out), Double[,]&(Out), Double[]&(Out)): PrivateScope, Public, Static, HideBySig
    DecomposeProjectionMatrix(Double[,], Double[,]&(Out), Double[,]&(Out), Double[]&(Out)): PrivateScope, Public, Static, HideBySig
    MatMulDeriv(InputArray, InputArray, OutputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    ComposeRT(InputArray, InputArray, InputArray, InputArray, OutputArray, OutputArray, OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ComposeRT(Double[], Double[], Double[], Double[], Double[]&(Out), Double[]&(Out), Double[,]&(Out), Double[,]&(Out), Double[,]&(Out), Double[,]&(Out), Double[,]&(Out), Double[,]&(Out), Double[,]&(Out), Double[,]&(Out)): PrivateScope, Public, Static, HideBySig
    ComposeRT(Double[], Double[], Double[], Double[], Double[]&(Out), Double[]&(Out)): PrivateScope, Public, Static, HideBySig
    ProjectPoints(InputArray, InputArray, InputArray, InputArray, InputArray, OutputArray, OutputArray(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ProjectPoints(IEnumerable`1, Double[], Double[], Double[,], Double[], Point2f[]&(Out), Double[,]&(Out), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SolvePnP(InputArray, InputArray, InputArray, InputArray, OutputArray, OutputArray, Boolean(Optional, HasDefault), SolvePnPFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SolvePnP(IEnumerable`1, IEnumerable`1, Double[,], IEnumerable`1, Double[]&, Double[]&, Boolean(Optional, HasDefault), SolvePnPFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SolvePnPRansac(InputArray, InputArray, InputArray, InputArray, OutputArray, OutputArray, Boolean(Optional, HasDefault), Int32(Optional, HasDefault), Single(Optional, HasDefault), Double(Optional, HasDefault), OutputArray(Optional, HasDefault), SolvePnPFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SolvePnPRansac(IEnumerable`1, IEnumerable`1, Double[,], IEnumerable`1, Double[]&(Out), Double[]&(Out)): PrivateScope, Public, Static, HideBySig
    SolvePnPRansac(IEnumerable`1, IEnumerable`1, Double[,], IEnumerable`1, Double[]&(Out), Double[]&(Out), Int32[]&(Out), Boolean(Optional, HasDefault), Int32(Optional, HasDefault), Single(Optional, HasDefault), Double(Optional, HasDefault), SolvePnPFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    InitCameraMatrix2D(IEnumerable`1, IEnumerable`1, Size, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    InitCameraMatrix2D(IEnumerable`1, IEnumerable`1, Size, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindChessboardCorners(InputArray, Size, OutputArray, ChessboardFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindChessboardCorners(InputArray, Size, Point2f[]&(Out), ChessboardFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CheckChessboard(InputArray, Size): PrivateScope, Public, Static, HideBySig
    FindChessboardCornersSB(InputArray, Size, OutputArray, ChessboardFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindChessboardCornersSB(InputArray, Size, Point2f[]&(Out), ChessboardFlags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Find4QuadCornerSubpix(InputArray, InputOutputArray, Size): PrivateScope, Public, Static, HideBySig
    Find4QuadCornerSubpix(InputArray, Point2f[], Size): PrivateScope, Public, Static, HideBySig
    DrawChessboardCorners(InputOutputArray, Size, InputArray, Boolean): PrivateScope, Public, Static, HideBySig
    DrawChessboardCorners(InputOutputArray, Size, IEnumerable`1, Boolean): PrivateScope, Public, Static, HideBySig
    DrawFrameAxes(InputOutputArray, InputArray, InputArray, InputArray, InputArray, Single, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindCirclesGrid(InputArray, Size, OutputArray, FindCirclesGridFlags(Optional, HasDefault), Feature2D(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindCirclesGrid(InputArray, Size, Point2f[]&(Out), FindCirclesGridFlags(Optional, HasDefault), Feature2D(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalibrateCamera(IEnumerable`1, IEnumerable`1, Size, InputOutputArray, InputOutputArray, Mat[]&(Out), Mat[]&(Out), CalibrationFlags(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalibrateCamera(IEnumerable`1, IEnumerable`1, Size, Double[,], Double[], Vec3d[]&(Out), Vec3d[]&(Out), CalibrationFlags(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalibrationMatrixValues(InputArray, Size, Double, Double, Double&(Out), Double&(Out), Double&(Out), Point2d&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig
    CalibrationMatrixValues(Double[,], Size, Double, Double, Double&(Out), Double&(Out), Double&(Out), Point2d&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig
    StereoCalibrate(IEnumerable`1, IEnumerable`1, IEnumerable`1, InputOutputArray, InputOutputArray, InputOutputArray, InputOutputArray, Size, OutputArray, OutputArray, OutputArray, OutputArray, CalibrationFlags(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StereoCalibrate(IEnumerable`1, IEnumerable`1, IEnumerable`1, Double[,], Double[], Double[,], Double[], Size, OutputArray, OutputArray, OutputArray, OutputArray, CalibrationFlags(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StereoRectify(InputArray, InputArray, InputArray, InputArray, Size, InputArray, InputArray, OutputArray, OutputArray, OutputArray, OutputArray, OutputArray, StereoRectificationFlags(Optional, HasDefault), Double(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StereoRectify(InputArray, InputArray, InputArray, InputArray, Size, InputArray, InputArray, OutputArray, OutputArray, OutputArray, OutputArray, OutputArray, StereoRectificationFlags, Double, Size, Rect&(Out), Rect&(Out)): PrivateScope, Public, Static, HideBySig
    StereoRectify(Double[,], Double[], Double[,], Double[], Size, Double[,], Double[], Double[,]&(Out), Double[,]&(Out), Double[,]&(Out), Double[,]&(Out), Double[,]&(Out), StereoRectificationFlags(Optional, HasDefault), Double(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StereoRectify(Double[,], Double[], Double[,], Double[], Size, Double[,], Double[], Double[,]&(Out), Double[,]&(Out), Double[,]&(Out), Double[,]&(Out), Double[,]&(Out), StereoRectificationFlags, Double, Size, Rect&(Out), Rect&(Out)): PrivateScope, Public, Static, HideBySig
    StereoRectifyUncalibrated(InputArray, InputArray, InputArray, Size, OutputArray, OutputArray, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StereoRectifyUncalibrated(IEnumerable`1, IEnumerable`1, Double[,], Size, Double[,]&(Out), Double[,]&(Out), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Rectify3Collinear(InputArray, InputArray, InputArray, InputArray, InputArray, InputArray, IEnumerable`1, IEnumerable`1, Size, InputArray, InputArray, InputArray, InputArray, OutputArray, OutputArray, OutputArray, OutputArray, OutputArray, OutputArray, OutputArray, Double, Size, Rect&(Out), Rect&(Out), StereoRectificationFlags): PrivateScope, Public, Static, HideBySig
    GetOptimalNewCameraMatrix(InputArray, InputArray, Size, Double, Size, Rect&(Out), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetOptimalNewCameraMatrix(Double[,], Double[], Size, Double, Size, Rect&(Out), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalibrateHandEye(IEnumerable`1, IEnumerable`1, IEnumerable`1, IEnumerable`1, OutputArray, OutputArray, HandEyeCalibrationMethod(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalibrateRobotWorldHandEye(IEnumerable`1, IEnumerable`1, IEnumerable`1, IEnumerable`1, OutputArray, OutputArray, OutputArray, OutputArray, RobotWorldHandEyeCalibrationMethod(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalibrateRobotWorldHandEye(IEnumerable`1, IEnumerable`1, IEnumerable`1, IEnumerable`1, Double[,]&(Out), Double[]&(Out), Double[,]&(Out), Double[]&(Out), RobotWorldHandEyeCalibrationMethod(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConvertPointsToHomogeneous(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    ConvertPointsToHomogeneous(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ConvertPointsToHomogeneous(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ConvertPointsFromHomogeneous(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    ConvertPointsFromHomogeneous(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ConvertPointsFromHomogeneous(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ConvertPointsHomogeneous(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    FindFundamentalMat(InputArray, InputArray, FundamentalMatMethods(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindFundamentalMat(IEnumerable`1, IEnumerable`1, FundamentalMatMethods(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindFundamentalMat(IEnumerable`1, IEnumerable`1, FundamentalMatMethods(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ComputeCorrespondEpilines(InputArray, Int32, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    ComputeCorrespondEpilines(IEnumerable`1, Int32, Double[,]): PrivateScope, Public, Static, HideBySig
    ComputeCorrespondEpilines(IEnumerable`1, Int32, Double[,]): PrivateScope, Public, Static, HideBySig
    TriangulatePoints(InputArray, InputArray, InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    TriangulatePoints(Double[,], Double[,], IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    CorrectMatches(InputArray, InputArray, InputArray, OutputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    CorrectMatches(Double[,], IEnumerable`1, IEnumerable`1, Point2d[]&(Out), Point2d[]&(Out)): PrivateScope, Public, Static, HideBySig
    RecoverPose(InputArray, InputArray, InputArray, InputArray, OutputArray, OutputArray, InputOutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    RecoverPose(InputArray, InputArray, InputArray, OutputArray, OutputArray, Double, Point2d, InputOutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    RecoverPose(InputArray, InputArray, InputArray, InputArray, OutputArray, OutputArray, Double, InputOutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindEssentialMat(InputArray, InputArray, InputArray, EssentialMatMethod(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FindEssentialMat(InputArray, InputArray, Double, Point2d, EssentialMatMethod(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FilterSpeckles(InputOutputArray, Double, Int32, Double, InputOutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetValidDisparityROI(Rect, Rect, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    ValidateDisparity(InputOutputArray, InputArray, Int32, Int32, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReprojectImageTo3D(InputArray, OutputArray, InputArray, Boolean(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EstimateAffine3D(InputArray, InputArray, OutputArray, OutputArray, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SampsonDistance(InputArray, InputArray, InputArray): PrivateScope, Public, Static, HideBySig
    SampsonDistance(Point3d, Point3d, Double[,]): PrivateScope, Public, Static, HideBySig
    EstimateAffine2D(InputArray, InputArray, OutputArray(Optional, HasDefault), RobustEstimationAlgorithms(Optional, HasDefault), Double(Optional, HasDefault), UInt64(Optional, HasDefault), Double(Optional, HasDefault), UInt64(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EstimateAffinePartial2D(InputArray, InputArray, OutputArray(Optional, HasDefault), RobustEstimationAlgorithms(Optional, HasDefault), Double(Optional, HasDefault), UInt64(Optional, HasDefault), Double(Optional, HasDefault), UInt64(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DecomposeHomographyMat(InputArray, InputArray, Mat[]&(Out), Mat[]&(Out), Mat[]&(Out)): PrivateScope, Public, Static, HideBySig
    FilterHomographyDecompByVisibleRefpoints(IEnumerable`1, IEnumerable`1, InputArray, InputArray, OutputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Undistort(InputArray, OutputArray, InputArray, InputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    InitUndistortRectifyMap(InputArray, InputArray, InputArray, InputArray, Size, MatType, OutputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    InitWideAngleProjMap(InputArray, InputArray, Size, Int32, MatType, OutputArray, OutputArray, ProjectionType, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetDefaultNewCameraMatrix(InputArray, Nullable`1(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    UndistortPoints(InputArray, OutputArray, InputArray, InputArray, InputArray(Optional, HasDefault), InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    UndistortPointsIter(InputArray, OutputArray, InputArray, InputArray, InputArray(Optional, HasDefault), InputArray(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BorderInterpolate(Int32, Int32, BorderTypes): PrivateScope, Public, Static, HideBySig
    CopyMakeBorder(InputArray, OutputArray, Int32, Int32, Int32, Int32, BorderTypes, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Add(InputArray, InputArray, OutputArray, InputArray(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Subtract(InputArray, InputArray, OutputArray, InputArray(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Subtract(InputArray, Scalar, OutputArray, InputArray(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Subtract(Scalar, InputArray, OutputArray, InputArray(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Multiply(InputArray, InputArray, OutputArray, Double(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Divide(InputArray, InputArray, OutputArray, Double(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Divide(Double, InputArray, OutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ScaleAdd(InputArray, Double, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    AddWeighted(InputArray, Double, InputArray, Double, Double, OutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConvertScaleAbs(InputArray, OutputArray, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ConvertFp16(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    LUT(InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    LUT(InputArray, Byte[], OutputArray): PrivateScope, Public, Static, HideBySig
    Sum(InputArray): PrivateScope, Public, Static, HideBySig
    CountNonZero(InputArray): PrivateScope, Public, Static, HideBySig
    FindNonZero(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    Mean(InputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MeanStdDev(InputArray, OutputArray, OutputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MeanStdDev(InputArray, Scalar&(Out), Scalar&(Out), InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Norm(InputArray, NormTypes(Optional, HasDefault), InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Norm(InputArray, InputArray, NormTypes(Optional, HasDefault), InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    PSNR(InputArray, InputArray, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BatchDistance(InputArray, InputArray, OutputArray, Int32, OutputArray, NormTypes(Optional, HasDefault), Int32(Optional, HasDefault), InputArray(Optional, HasDefault), Int32(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Normalize(InputArray, InputOutputArray, Double(Optional, HasDefault), Double(Optional, HasDefault), NormTypes(Optional, HasDefault), Int32(Optional, HasDefault), InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReduceArgMax(InputArray, OutputArray, Int32, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReduceArgMin(InputArray, OutputArray, Int32, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MinMaxLoc(InputArray, Double&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig
    MinMaxLoc(InputArray, Point&(Out), Point&(Out)): PrivateScope, Public, Static, HideBySig
    MinMaxLoc(InputArray, Double&(Out), Double&(Out), Point&(Out), Point&(Out), InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MinMaxIdx(InputArray, Double&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig
    MinMaxIdx(InputArray, Int32[], Int32[]): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.CvObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    OpenCvSharp.ICvPtrHolder
  Properties:
    IntPtr CvPtr 'get ' : 
  Methods:
    get_CvPtr(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class OpenCvSharp.DisposableCvObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.DisposableObject
  Interfaces:
    OpenCvSharp.ICvPtrHolder
  Properties:
    IntPtr CvPtr 'get ' : 
  Methods:
    get_CvPtr(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class OpenCvSharp.DisposableObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsDisposed 'get set' : 
    Boolean IsEnabledDispose 'get set' : 
  Methods:
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnabledDispose(): PrivateScope, Public, HideBySig, SpecialName
    set_IsEnabledDispose(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ThrowIfDisposed(): PrivateScope, Public, HideBySig
Interface OpenCvSharp.ICvPtrHolder: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    IntPtr CvPtr 'get ' : 
  Methods:
    get_CvPtr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class OpenCvSharp.MatMemoryManager`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :System.Buffers.MemoryManager`1[T]
    Void .ctor(OpenCvSharp.Mat, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetSpan(): PrivateScope, Public, Virtual, HideBySig
    Pin(Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    Unpin(): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.OpenCVException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(OpenCvSharp.ErrorCode, System.String, System.String, System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    OpenCvSharp.ErrorCode Status 'get set' : 
    System.String FuncName 'get set' : 
    System.String ErrMsg 'get set' : 
    System.String FileName 'get set' : 
    Int32 Line 'get set' : 
  Methods:
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    set_Status(ErrorCode): PrivateScope, Public, HideBySig, SpecialName
    get_FuncName(): PrivateScope, Public, HideBySig, SpecialName
    set_FuncName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ErrMsg(): PrivateScope, Public, HideBySig, SpecialName
    set_ErrMsg(String): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Line(): PrivateScope, Public, HideBySig, SpecialName
    set_Line(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.OpenCvSharpException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Ptr: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
  Methods:
    Get(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class OpenCvSharp.ResourcesTracker: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    T(TCvObject): PrivateScope, Public, HideBySig
    T(TCvObject[]): PrivateScope, Public, HideBySig
    NewMat(): PrivateScope, Public, HideBySig
    NewMat(Size, MatType, Scalar): PrivateScope, Public, HideBySig
    NewUMat(): PrivateScope, Public, HideBySig
    NewUMat(Size, MatType, Scalar): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.BackgroundSubtractorGMG: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.BackgroundSubtractor
  Properties:
    Int32 MaxFeatures 'get set' : 
    Double DefaultLearningRate 'get set' : 
    Int32 NumFrames 'get set' : 
    Int32 QuantizationLevels 'get set' : 
    Double BackgroundPrior 'get set' : 
    Int32 SmoothingRadius 'get set' : 
    Double DecisionThreshold 'get set' : 
    Boolean UpdateBackgroundModel 'get set' : 
    Double MinVal 'get set' : 
    Double MaxVal 'get set' : 
  Methods:
    Create(Int32(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_MaxFeatures(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxFeatures(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultLearningRate(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultLearningRate(Double): PrivateScope, Public, HideBySig, SpecialName
    get_NumFrames(): PrivateScope, Public, HideBySig, SpecialName
    set_NumFrames(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_QuantizationLevels(): PrivateScope, Public, HideBySig, SpecialName
    set_QuantizationLevels(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundPrior(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundPrior(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SmoothingRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_SmoothingRadius(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DecisionThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_DecisionThreshold(Double): PrivateScope, Public, HideBySig, SpecialName
    get_UpdateBackgroundModel(): PrivateScope, Public, HideBySig, SpecialName
    set_UpdateBackgroundModel(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinVal(): PrivateScope, Public, HideBySig, SpecialName
    set_MinVal(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MaxVal(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxVal(Double): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.BackgroundSubtractorMOG: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.BackgroundSubtractor
  Properties:
    Int32 History 'get set' : 
    Int32 NMixtures 'get set' : 
    Double BackgroundRatio 'get set' : 
    Double NoiseSigma 'get set' : 
  Methods:
    Create(Int32(Optional, HasDefault), Int32(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_History(): PrivateScope, Public, HideBySig, SpecialName
    set_History(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NMixtures(): PrivateScope, Public, HideBySig, SpecialName
    set_NMixtures(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundRatio(Double): PrivateScope, Public, HideBySig, SpecialName
    get_NoiseSigma(): PrivateScope, Public, HideBySig, SpecialName
    set_NoiseSigma(Double): PrivateScope, Public, HideBySig, SpecialName
Struct OpenCvSharp.CalibrationFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.CalibrationFlags None = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags UseIntrinsicGuess = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags FixAspectRatio = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags FixPrincipalPoint = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags ZeroTangentDist = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags FixFocalLength = 16 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags FixK1 = 32 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags FixK2 = 64 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags FixK3 = 128 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags FixK4 = 2048 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags FixK5 = 4096 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags FixK6 = 8192 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags RationalModel = 16384 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags ThinPrismModel = 32768 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags FixS1S2S3S4 = 32768 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags FixIntrinsic = 256 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags SameFocalLength = 512 : Public, Static, Literal, HasDefault
    OpenCvSharp.CalibrationFlags ZeroDisparity = 1024 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ChessboardFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ChessboardFlags None = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ChessboardFlags AdaptiveThresh = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ChessboardFlags NormalizeImage = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ChessboardFlags FilterQuads = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.ChessboardFlags FastCheck = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.ChessboardFlags Exhaustive = 16 : Public, Static, Literal, HasDefault
    OpenCvSharp.ChessboardFlags Accuracy = 32 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.EssentialMatMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.EssentialMatMethod LMedS = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.EssentialMatMethod Ransac = 8 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.FindCirclesGridFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.FindCirclesGridFlags SymmetricGrid = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.FindCirclesGridFlags AsymmetricGrid = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.FindCirclesGridFlags Clustering = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.FishEyeCalibrationFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.FishEyeCalibrationFlags None = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.FishEyeCalibrationFlags UseIntrinsicGuess = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.FishEyeCalibrationFlags RecomputeExtrinsic = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.FishEyeCalibrationFlags CheckCond = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.FishEyeCalibrationFlags FixSkew = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.FishEyeCalibrationFlags FixK1 = 16 : Public, Static, Literal, HasDefault
    OpenCvSharp.FishEyeCalibrationFlags FixK2 = 32 : Public, Static, Literal, HasDefault
    OpenCvSharp.FishEyeCalibrationFlags FixK3 = 64 : Public, Static, Literal, HasDefault
    OpenCvSharp.FishEyeCalibrationFlags FixK4 = 128 : Public, Static, Literal, HasDefault
    OpenCvSharp.FishEyeCalibrationFlags FixIntrinsic = 256 : Public, Static, Literal, HasDefault
    OpenCvSharp.FishEyeCalibrationFlags FixPrincipalPoint = 512 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.FundamentalMatMethods: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.FundamentalMatMethods Point7 = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.FundamentalMatMethods Point8 = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.FundamentalMatMethods LMedS = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.FundamentalMatMethods Ransac = 8 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.HandEyeCalibrationMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.HandEyeCalibrationMethod TSAI = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.HandEyeCalibrationMethod PARK = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.HandEyeCalibrationMethod HORAUD = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.HandEyeCalibrationMethod ANDREFF = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.HandEyeCalibrationMethod DANIILIDIS = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.HomographyMethods: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.HomographyMethods None = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.HomographyMethods LMedS = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.HomographyMethods Ransac = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.HomographyMethods Rho = 16 : Public, Static, Literal, HasDefault
    OpenCvSharp.HomographyMethods USAC_DEFAULT = 32 : Public, Static, Literal, HasDefault
    OpenCvSharp.HomographyMethods USAC_PARALLEL = 33 : Public, Static, Literal, HasDefault
    OpenCvSharp.HomographyMethods USAC_FM_8PTS = 34 : Public, Static, Literal, HasDefault
    OpenCvSharp.HomographyMethods USAC_FAST = 35 : Public, Static, Literal, HasDefault
    OpenCvSharp.HomographyMethods USAC_ACCURATE = 36 : Public, Static, Literal, HasDefault
    OpenCvSharp.HomographyMethods USAC_PROSAC = 37 : Public, Static, Literal, HasDefault
    OpenCvSharp.HomographyMethods USAC_MAGSAC = 38 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ProjectionType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ProjectionType SphericalOrtho = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ProjectionType SphericalEqRect = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.RobotWorldHandEyeCalibrationMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.RobotWorldHandEyeCalibrationMethod SHAH = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.RobotWorldHandEyeCalibrationMethod LI = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.RobustEstimationAlgorithms: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.RobustEstimationAlgorithms LMEDS = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.RobustEstimationAlgorithms RANSAC = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.RobustEstimationAlgorithms RHO = 16 : Public, Static, Literal, HasDefault
    OpenCvSharp.RobustEstimationAlgorithms USAC_DEFAULT = 32 : Public, Static, Literal, HasDefault
    OpenCvSharp.RobustEstimationAlgorithms USAC_PARALLEL = 33 : Public, Static, Literal, HasDefault
    OpenCvSharp.RobustEstimationAlgorithms USAC_FM_8PTS = 34 : Public, Static, Literal, HasDefault
    OpenCvSharp.RobustEstimationAlgorithms USAC_FAST = 35 : Public, Static, Literal, HasDefault
    OpenCvSharp.RobustEstimationAlgorithms USAC_ACCURATE = 36 : Public, Static, Literal, HasDefault
    OpenCvSharp.RobustEstimationAlgorithms USAC_PROSAC = 37 : Public, Static, Literal, HasDefault
    OpenCvSharp.RobustEstimationAlgorithms USAC_MAGSAC = 38 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.SolvePnPFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.SolvePnPFlags Iterative = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.SolvePnPFlags EPNP = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.SolvePnPFlags P3P = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.SolvePnPFlags DLS = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.SolvePnPFlags UPNP = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.StereoRectificationFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.StereoRectificationFlags None = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.StereoRectificationFlags ZeroDisparity = 1024 : Public, Static, Literal, HasDefault
Class OpenCvSharp.StereoBM: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.StereoMatcher
  Properties:
    Int32 PreFilterType 'get set' : 
    Int32 PreFilterSize 'get set' : 
    Int32 PreFilterCap 'get set' : 
    Int32 TextureThreshold 'get set' : 
    Int32 UniquenessRatio 'get set' : 
    Int32 SmallerBlockSize 'get set' : 
    OpenCvSharp.Rect ROI1 'get set' : 
    OpenCvSharp.Rect ROI2 'get set' : 
  Methods:
    Create(Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_PreFilterType(): PrivateScope, Public, HideBySig, SpecialName
    set_PreFilterType(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PreFilterSize(): PrivateScope, Public, HideBySig, SpecialName
    set_PreFilterSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PreFilterCap(): PrivateScope, Public, HideBySig, SpecialName
    set_PreFilterCap(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TextureThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_TextureThreshold(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UniquenessRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_UniquenessRatio(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SmallerBlockSize(): PrivateScope, Public, HideBySig, SpecialName
    set_SmallerBlockSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ROI1(): PrivateScope, Public, HideBySig, SpecialName
    set_ROI1(Rect): PrivateScope, Public, HideBySig, SpecialName
    get_ROI2(): PrivateScope, Public, HideBySig, SpecialName
    set_ROI2(Rect): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.StereoMatcher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Properties:
    Int32 MinDisparity 'get set' : 
    Int32 NumDisparities 'get set' : 
    Int32 BlockSize 'get set' : 
    Int32 SpeckleWindowSize 'get set' : 
    Int32 SpeckleRange 'get set' : 
    Int32 Disp12MaxDiff 'get set' : 
  Methods:
    Compute(InputArray, InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_MinDisparity(): PrivateScope, Public, HideBySig, SpecialName
    set_MinDisparity(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NumDisparities(): PrivateScope, Public, HideBySig, SpecialName
    set_NumDisparities(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BlockSize(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpeckleWindowSize(): PrivateScope, Public, HideBySig, SpecialName
    set_SpeckleWindowSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpeckleRange(): PrivateScope, Public, HideBySig, SpecialName
    set_SpeckleRange(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Disp12MaxDiff(): PrivateScope, Public, HideBySig, SpecialName
    set_Disp12MaxDiff(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct OpenCvSharp.StereoSGBMMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.StereoSGBMMode SGBM = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.StereoSGBMMode HH = 1 : Public, Static, Literal, HasDefault
Class OpenCvSharp.StereoSGBM: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.StereoMatcher
  Properties:
    Int32 PreFilterCap 'get set' : 
    Int32 UniquenessRatio 'get set' : 
    Int32 P1   'get set' : 
    Int32 P2   'get set' : 
    OpenCvSharp.StereoSGBMMode Mode 'get set' : 
  Methods:
    Create(Int32, Int32, Int32, Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), StereoSGBMMode(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_PreFilterCap(): PrivateScope, Public, HideBySig, SpecialName
    set_PreFilterCap(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UniquenessRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_UniquenessRatio(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_P1(): PrivateScope, Public, HideBySig, SpecialName
    set_P1(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_P2(): PrivateScope, Public, HideBySig, SpecialName
    set_P2(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    set_Mode(StereoSGBMMode): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.UsacParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Confidence 'get set' : 
    Boolean IsParallel 'get set' : 
    Int32 LoIterations 'get set' : 
    OpenCvSharp.LocalOptimMethod LoMethod 'get set' : 
    Int32 LoSampleSize 'get set' : 
    Int32 MaxIterations 'get set' : 
    OpenCvSharp.NeighborSearchMethod NeighborsSearch 'get set' : 
    Int32 RandomGeneratorState 'get set' : 
    OpenCvSharp.SamplingMethod Sampler 'get set' : 
    OpenCvSharp.ScoreMethod Score 'get set' : 
    Double Threshold 'get set' : 
  Methods:
    get_Confidence(): PrivateScope, Public, HideBySig, SpecialName
    set_Confidence(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IsParallel(): PrivateScope, Public, HideBySig, SpecialName
    set_IsParallel(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_LoIterations(): PrivateScope, Public, HideBySig, SpecialName
    set_LoIterations(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LoMethod(): PrivateScope, Public, HideBySig, SpecialName
    set_LoMethod(LocalOptimMethod): PrivateScope, Public, HideBySig, SpecialName
    get_LoSampleSize(): PrivateScope, Public, HideBySig, SpecialName
    set_LoSampleSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxIterations(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxIterations(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NeighborsSearch(): PrivateScope, Public, HideBySig, SpecialName
    set_NeighborsSearch(NeighborSearchMethod): PrivateScope, Public, HideBySig, SpecialName
    get_RandomGeneratorState(): PrivateScope, Public, HideBySig, SpecialName
    set_RandomGeneratorState(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Sampler(): PrivateScope, Public, HideBySig, SpecialName
    set_Sampler(SamplingMethod): PrivateScope, Public, HideBySig, SpecialName
    get_Score(): PrivateScope, Public, HideBySig, SpecialName
    set_Score(ScoreMethod): PrivateScope, Public, HideBySig, SpecialName
    get_Threshold(): PrivateScope, Public, HideBySig, SpecialName
    set_Threshold(Double): PrivateScope, Public, HideBySig, SpecialName
    ToNativeStruct(): PrivateScope, Public, HideBySig
Struct OpenCvSharp.WUsacParams: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double Confidence : Public
    Int32 IsParallel : Public
    Int32 LoIterations : Public
    OpenCvSharp.LocalOptimMethod LoMethod : Public
    Int32 LoSampleSize : Public
    Int32 MaxIterations : Public
    OpenCvSharp.NeighborSearchMethod NeighborsSearch : Public
    Int32 RandomGeneratorState : Public
    OpenCvSharp.SamplingMethod Sampler : Public
    OpenCvSharp.ScoreMethod Score : Public
    Double Threshold : Public
Struct OpenCvSharp.SamplingMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.SamplingMethod UNIFORM = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.SamplingMethod PROGRESSIVE_NAPSAC = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.SamplingMethod NAPSAC = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.SamplingMethod PROSAC = 3 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.LocalOptimMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.LocalOptimMethod NULL = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.LocalOptimMethod INNER_LO = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.LocalOptimMethod INNER_AND_ITER_LO = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.LocalOptimMethod GC = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.LocalOptimMethod SIGMA = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ScoreMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ScoreMethod RANSAC = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ScoreMethod MSAC = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ScoreMethod MAGSAC = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ScoreMethod LMEDS = 3 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.NeighborSearchMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.NeighborSearchMethod FLANN_KNN = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.NeighborSearchMethod GRID = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.NeighborSearchMethod FLANN_RADIUS = 2 : Public, Static, Literal, HasDefault
Class OpenCvSharp.Algorithm: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
  Properties:
    Boolean Empty 'get ' : 
  Methods:
    Write(FileStorage): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(FileNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Empty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Save(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDefaultName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.CvErrorCallback: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(ErrorCode(HasFieldMarshal), String(HasFieldMarshal), String(HasFieldMarshal), String(HasFieldMarshal), Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(ErrorCode(HasFieldMarshal), String(HasFieldMarshal), String(HasFieldMarshal), String(HasFieldMarshal), Int32, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionByte: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Byte*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Byte*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec2b: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec2b*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec2b*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec3b: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec3b*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec3b*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec4b: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec4b*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec4b*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec6b: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec6b*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec6b*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionInt16: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int16*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Int16*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec2s: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec2s*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec2s*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec3s: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec3s*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec3s*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec4s: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec4s*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec4s*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec6s: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec6s*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec6s*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionInt32: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Int32*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec2i: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec2i*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec2i*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec3i: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec3i*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec3i*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec4i: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec4i*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec4i*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec6i: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec6i*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec6i*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionFloat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Single*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Single*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec2f: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec2f*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec2f*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec3f: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec3f*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec3f*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec4f: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec4f*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec4f*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec6f: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec6f*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec6f*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionDouble: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Double*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Double*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec2d: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec2d*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec2d*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec3d: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec3d*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec3d*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec4d: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec4d*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec4d*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MatForeachFunctionVec6d: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Vec6d*, Int32*): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Vec6d*, Int32*, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct OpenCvSharp.AccessFlag: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.AccessFlag READ = 16777216 : Public, Static, Literal, HasDefault
    OpenCvSharp.AccessFlag WRITE = 33554432 : Public, Static, Literal, HasDefault
    OpenCvSharp.AccessFlag RW = 50331648 : Public, Static, Literal, HasDefault
    OpenCvSharp.AccessFlag MASK = 50331648 : Public, Static, Literal, HasDefault
    OpenCvSharp.AccessFlag FAST = 67108864 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.AlgorithmParamType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.AlgorithmParamType Int = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.AlgorithmParamType Boolean = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.AlgorithmParamType Real = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.AlgorithmParamType String = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.AlgorithmParamType Mat = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.AlgorithmParamType MatVector = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.AlgorithmParamType Algorithm = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.AlgorithmParamType Float = 7 : Public, Static, Literal, HasDefault
    OpenCvSharp.AlgorithmParamType UnsignedInt = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.AlgorithmParamType UInt64 = 9 : Public, Static, Literal, HasDefault
    OpenCvSharp.AlgorithmParamType Short = 10 : Public, Static, Literal, HasDefault
    OpenCvSharp.AlgorithmParamType UChar = 11 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.BorderTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.BorderTypes Constant = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.BorderTypes Replicate = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.BorderTypes Reflect = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.BorderTypes Wrap = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.BorderTypes Reflect101 = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.BorderTypes Transparent = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.BorderTypes Default = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.BorderTypes Isolated = 16 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.CmpType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.CmpType EQ = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.CmpType GT = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.CmpType GE = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.CmpType LT = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.CmpType LE = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.CmpType NE = 5 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.CovarFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.CovarFlags Scrambled = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.CovarFlags Normal = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.CovarFlags UseAvg = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.CovarFlags Scale = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.CovarFlags Rows = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.CovarFlags Cols = 16 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.CpuFeatures: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.CpuFeatures MMX = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures SSE = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures SSE2 = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures SSE3 = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures SSSE3 = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures SSE4_1 = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures SSE4_2 = 7 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures POPCNT = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures FP16 = 9 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX = 10 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX2 = 11 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures FMA3 = 12 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_512F = 13 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_512BW = 14 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_512CD = 15 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_512DQ = 16 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_512ER = 17 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_512IFMA512 = 18 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_512IFMA = 18 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_512PF = 19 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_512VBMI = 20 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_512VL = 21 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_512VBMI2 = 22 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_512VNNI = 23 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_512BITALG = 24 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_512VPOPCNTDQ = 25 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_5124VNNIW = 26 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX_5124FMAPS = 27 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures NEON = 100 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures VSX = 200 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures VSX3 = 201 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX512_SKX = 256 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX512_COMMON = 257 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX512_KNL = 258 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX512_KNM = 259 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX512_CNL = 260 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX512_CEL = 261 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures AVX512_ICL = 262 : Public, Static, Literal, HasDefault
    OpenCvSharp.CpuFeatures MAX_FEATURE = 512 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.CriteriaTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.CriteriaTypes Count = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.CriteriaTypes MaxIter = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.CriteriaTypes Eps = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.DctFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.DctFlags None = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.DctFlags Inverse = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.DctFlags Rows = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.DecompTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.DecompTypes LU = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.DecompTypes SVD = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.DecompTypes Eig = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.DecompTypes Cholesky = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.DecompTypes QR = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.DecompTypes Normal = 16 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.DftFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.DftFlags None = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.DftFlags Inverse = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.DftFlags Scale = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.DftFlags Rows = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.DftFlags ComplexOutput = 16 : Public, Static, Literal, HasDefault
    OpenCvSharp.DftFlags RealOutput = 32 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.DistributionType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.DistributionType Uniform = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.DistributionType Normal = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ErrorCode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ErrorCode StsOk = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsBackTrace = -1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsError = -2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsInternal = -3 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsNoMem = -4 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsBadArg = -5 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsBadFunc = -6 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsNoConv = -7 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsAutoTrace = -8 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode HeaderIsNull = -9 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadImageSize = -10 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadOffset = -11 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadDataPtr = -12 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadStep = -13 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadModelOrChSeq = -14 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadNumChannels = -15 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadNumChannel1U = -16 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadDepth = -17 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadAlphaChannel = -18 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadOrder = -19 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadOrigin = -20 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadAlign = -21 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadCallBack = -22 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadTileSize = -23 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadCOI = -24 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode BadROISize = -25 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode MaskIsTiled = -26 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsNullPtr = -27 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsVecLengthErr = -28 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsFilterStructContentErr = -29 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsKernelStructContentErr = -30 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsFilterOffsetErr = -31 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsBadSize = -201 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsDivByZero = -202 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsInplaceNotSupported = -203 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsObjectNotFound = -204 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsUnmatchedFormats = -205 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsBadFlag = -206 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsBadPoint = -207 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsBadMask = -208 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsUnmatchedSizes = -209 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsUnsupportedFormat = -210 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsOutOfRange = -211 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsParseError = -212 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsNotImplemented = -213 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsBadMemBlock = -214 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode StsAssert = -215 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode GpuNotSupported = -216 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode GpuApiCallError = -217 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode OpenGlNotSupported = -218 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode OpenGlApiCallError = -219 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode OpenCLApiCallError = -220 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode OpenCLDoubleNotSupported = -221 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode OpenCLInitError = -222 : Public, Static, Literal, HasDefault
    OpenCvSharp.ErrorCode OpenCLNoAMDBlasFft = -223 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.FormatType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.FormatType Default = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.FormatType MATLAB = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.FormatType CSV = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.FormatType Python = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.FormatType NumPy = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.FormatType C = 5 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.GemmFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.GemmFlags None = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.GemmFlags A_T = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.GemmFlags B_T = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.GemmFlags C_T = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.HersheyFonts: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.HersheyFonts HersheySimplex = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.HersheyFonts HersheyPlain = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.HersheyFonts HersheyDuplex = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.HersheyFonts HersheyComplex = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.HersheyFonts HersheyTriplex = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.HersheyFonts HersheyComplexSmall = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.HersheyFonts HersheyScriptSimplex = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.HersheyFonts HersheyScriptComplex = 7 : Public, Static, Literal, HasDefault
    OpenCvSharp.HersheyFonts Italic = 16 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.InOutArrayKind: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.InOutArrayKind None = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.InOutArrayKind Mat = 65536 : Public, Static, Literal, HasDefault
    OpenCvSharp.InOutArrayKind Matx = 131072 : Public, Static, Literal, HasDefault
    OpenCvSharp.InOutArrayKind StdVector = 196608 : Public, Static, Literal, HasDefault
    OpenCvSharp.InOutArrayKind VectorVector = 262144 : Public, Static, Literal, HasDefault
    OpenCvSharp.InOutArrayKind VectorMat = 327680 : Public, Static, Literal, HasDefault
    OpenCvSharp.InOutArrayKind Expr = 393216 : Public, Static, Literal, HasDefault
    OpenCvSharp.InOutArrayKind OpenGLBuffer = 458752 : Public, Static, Literal, HasDefault
    OpenCvSharp.InOutArrayKind CudaHostMem = 524288 : Public, Static, Literal, HasDefault
    OpenCvSharp.InOutArrayKind CudaGpuMat = 589824 : Public, Static, Literal, HasDefault
    OpenCvSharp.InOutArrayKind UMat = 655360 : Public, Static, Literal, HasDefault
    OpenCvSharp.InOutArrayKind StdVectorUMat = 720896 : Public, Static, Literal, HasDefault
    OpenCvSharp.InOutArrayKind StdBoolVector = 786432 : Public, Static, Literal, HasDefault
    OpenCvSharp.InOutArrayKind StdVectorCudaGpuMat = 851968 : Public, Static, Literal, HasDefault
    OpenCvSharp.InOutArrayKind FixedType = -2147483648 : Public, Static, Literal, HasDefault
    OpenCvSharp.InOutArrayKind FixedSize = 1073741824 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.KMeansFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.KMeansFlags RandomCenters = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.KMeansFlags PpCenters = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.KMeansFlags UseInitialLabels = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.LogLevel: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.LogLevel SILENT = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.LogLevel FATAL = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.LogLevel ERROR = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.LogLevel WARNING = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.LogLevel INFO = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.LogLevel DEBUG = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.LogLevel VERBOSE = 6 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.MatDiagType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.MatDiagType Upper = -1 : Public, Static, Literal, HasDefault
    OpenCvSharp.MatDiagType Main = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.MatDiagType Lower = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.NormTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.NormTypes INF = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.NormTypes L1 = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.NormTypes L2 = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.NormTypes L2SQR = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.NormTypes Hamming = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.NormTypes Hamming2 = 7 : Public, Static, Literal, HasDefault
    OpenCvSharp.NormTypes Relative = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.NormTypes MinMax = 32 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ReduceDimension: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ReduceDimension Row = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ReduceDimension Column = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ReduceDimension Auto = -1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ReduceTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ReduceTypes Sum = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ReduceTypes Avg = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ReduceTypes Max = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ReduceTypes Min = 3 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.RotateFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.RotateFlags Rotate90Clockwise = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.RotateFlags Rotate180 = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.RotateFlags Rotate90Counterclockwise = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.SolveLPResult: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.SolveLPResult Unbounded = -2 : Public, Static, Literal, HasDefault
    OpenCvSharp.SolveLPResult Unfeasible = -1 : Public, Static, Literal, HasDefault
    OpenCvSharp.SolveLPResult Single = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.SolveLPResult Multi = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.SortFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.SortFlags EveryRow = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.SortFlags EveryColumn = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.SortFlags Ascending = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.SortFlags Descending = 16 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.UMatUsageFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.UMatUsageFlags None = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.UMatUsageFlags HostMemory = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.UMatUsageFlags DeviceMemory = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.UMatUsageFlags SharedMemory = 4 : Public, Static, Literal, HasDefault
Class OpenCvSharp.FileNode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[OpenCvSharp.FileNode]
    System.Collections.IEnumerable
  Properties:
    OpenCvSharp.FileNode Item [System.String] 'get ' : 
    OpenCvSharp.FileNode Item [Int32] 'get ' : 
    Boolean Empty 'get ' : 
    Boolean IsNone 'get ' : 
    Boolean IsSeq 'get ' : 
    Boolean IsMap 'get ' : 
    Boolean IsInt 'get ' : 
    Boolean IsReal 'get ' : 
    Boolean IsString 'get ' : 
    Boolean IsNamed 'get ' : 
    System.String Name 'get ' : 
    Int64 Size 'get ' : 
    Types Type 'get ' : 
  Methods:
    op_Explicit(FileNode): PrivateScope, Public, Static, HideBySig, SpecialName
    ToInt32(): PrivateScope, Public, HideBySig
    op_Explicit(FileNode): PrivateScope, Public, Static, HideBySig, SpecialName
    ToSingle(): PrivateScope, Public, HideBySig
    op_Explicit(FileNode): PrivateScope, Public, Static, HideBySig, SpecialName
    ToDouble(): PrivateScope, Public, HideBySig
    op_Explicit(FileNode): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Explicit(FileNode): PrivateScope, Public, Static, HideBySig, SpecialName
    ToMat(): PrivateScope, Public, HideBySig
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Empty(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNone(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSeq(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMap(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInt(): PrivateScope, Public, HideBySig, SpecialName
    get_IsReal(): PrivateScope, Public, HideBySig, SpecialName
    get_IsString(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNamed(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    Begin(): PrivateScope, Public, HideBySig
    End(): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReadRaw(String, IntPtr, Int64): PrivateScope, Public, HideBySig
    ReadInt(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ReadFloat(Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ReadDouble(Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ReadString(String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ReadMat(Mat(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ReadSparseMat(SparseMat(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ReadKeyPoints(): PrivateScope, Public, HideBySig
    ReadDMatches(): PrivateScope, Public, HideBySig
    ReadRange(): PrivateScope, Public, HideBySig
    ReadKeyPoint(): PrivateScope, Public, HideBySig
    ReadDMatch(): PrivateScope, Public, HideBySig
    ReadPoint(): PrivateScope, Public, HideBySig
    ReadPoint2f(): PrivateScope, Public, HideBySig
    ReadPoint2d(): PrivateScope, Public, HideBySig
    ReadPoint3i(): PrivateScope, Public, HideBySig
    ReadPoint3f(): PrivateScope, Public, HideBySig
    ReadPoint3d(): PrivateScope, Public, HideBySig
    ReadSize(): PrivateScope, Public, HideBySig
    ReadSize2f(): PrivateScope, Public, HideBySig
    ReadSize2d(): PrivateScope, Public, HideBySig
    ReadRect(): PrivateScope, Public, HideBySig
    ReadRect2f(): PrivateScope, Public, HideBySig
    ReadRect2d(): PrivateScope, Public, HideBySig
    ReadScalar(): PrivateScope, Public, HideBySig
    ReadVec2i(): PrivateScope, Public, HideBySig
    ReadVec3i(): PrivateScope, Public, HideBySig
    ReadVec4i(): PrivateScope, Public, HideBySig
    ReadVec6i(): PrivateScope, Public, HideBySig
    ReadVec2d(): PrivateScope, Public, HideBySig
    ReadVec3d(): PrivateScope, Public, HideBySig
    ReadVec4d(): PrivateScope, Public, HideBySig
    ReadVec6d(): PrivateScope, Public, HideBySig
    ReadVec2f(): PrivateScope, Public, HideBySig
    ReadVec3f(): PrivateScope, Public, HideBySig
    ReadVec4f(): PrivateScope, Public, HideBySig
    ReadVec6f(): PrivateScope, Public, HideBySig
    ReadVec2b(): PrivateScope, Public, HideBySig
    ReadVec3b(): PrivateScope, Public, HideBySig
    ReadVec4b(): PrivateScope, Public, HideBySig
    ReadVec6b(): PrivateScope, Public, HideBySig
    ReadVec2s(): PrivateScope, Public, HideBySig
    ReadVec3s(): PrivateScope, Public, HideBySig
    ReadVec4s(): PrivateScope, Public, HideBySig
    ReadVec6s(): PrivateScope, Public, HideBySig
    ReadVec2w(): PrivateScope, Public, HideBySig
    ReadVec3w(): PrivateScope, Public, HideBySig
    ReadVec4w(): PrivateScope, Public, HideBySig
    ReadVec6w(): PrivateScope, Public, HideBySig
Class OpenCvSharp.FileNodeIterator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.FileNodeIterator]
    System.Collections.Generic.IEnumerator`1[OpenCvSharp.FileNode]
    System.Collections.IEnumerator
  Properties:
    OpenCvSharp.FileNode Current 'get ' : 
  Methods:
    ReadRaw(String, IntPtr, Int64(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(Int32): PrivateScope, Public, HideBySig
    ReadRaw(String, Byte[], Int64(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(FileNodeIterator): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Minus(FileNodeIterator): PrivateScope, Public, HideBySig
    LessThan(FileNodeIterator): PrivateScope, Public, HideBySig
Class OpenCvSharp.FileStorage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Modes, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    OpenCvSharp.FileNode Item [System.String] 'get ' : 
    System.String ElName 'get ' : 
    States State 'get ' : 
  Methods:
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    get_ElName(): PrivateScope, Public, HideBySig, SpecialName
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    Open(String, Modes, String(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsOpened(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Release(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReleaseAndGetString(): PrivateScope, Public, HideBySig
    GetFirstTopLevelNode(): PrivateScope, Public, HideBySig
    Root(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    WriteRaw(String, IntPtr, Int32): PrivateScope, Public, HideBySig
    WriteComment(String, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    StartWriteStruct(String, Int32, String): PrivateScope, Public, HideBySig
    EndWriteStruct(): PrivateScope, Public, HideBySig
    GetDefaultObjectName(String): PrivateScope, Public, Static, HideBySig
    Write(String, Int32): PrivateScope, Public, HideBySig
    Write(String, Single): PrivateScope, Public, HideBySig
    Write(String, Double): PrivateScope, Public, HideBySig
    Write(String, String): PrivateScope, Public, HideBySig
    Write(String, Mat): PrivateScope, Public, HideBySig
    Write(String, SparseMat): PrivateScope, Public, HideBySig
    Write(String, IEnumerable`1): PrivateScope, Public, HideBySig
    Write(String, IEnumerable`1): PrivateScope, Public, HideBySig
    WriteScalar(Int32): PrivateScope, Public, HideBySig
    WriteScalar(Single): PrivateScope, Public, HideBySig
    WriteScalar(Double): PrivateScope, Public, HideBySig
    WriteScalar(String): PrivateScope, Public, HideBySig
    Add(String): PrivateScope, Public, HideBySig
    Add(Int32): PrivateScope, Public, HideBySig
    Add(Single): PrivateScope, Public, HideBySig
    Add(Double): PrivateScope, Public, HideBySig
    Add(Mat): PrivateScope, Public, HideBySig
    Add(SparseMat): PrivateScope, Public, HideBySig
    Add(Range): PrivateScope, Public, HideBySig
    Add(KeyPoint): PrivateScope, Public, HideBySig
    Add(DMatch): PrivateScope, Public, HideBySig
    Add(IEnumerable`1): PrivateScope, Public, HideBySig
    Add(IEnumerable`1): PrivateScope, Public, HideBySig
    Add(Point): PrivateScope, Public, HideBySig
    Add(Point2f): PrivateScope, Public, HideBySig
    Add(Point2d): PrivateScope, Public, HideBySig
    Add(Point3i): PrivateScope, Public, HideBySig
    Add(Point3f): PrivateScope, Public, HideBySig
    Add(Point3d): PrivateScope, Public, HideBySig
    Add(Size): PrivateScope, Public, HideBySig
    Add(Size2f): PrivateScope, Public, HideBySig
    Add(Size2d): PrivateScope, Public, HideBySig
    Add(Rect): PrivateScope, Public, HideBySig
    Add(Rect2f): PrivateScope, Public, HideBySig
    Add(Rect2d): PrivateScope, Public, HideBySig
    Add(Scalar): PrivateScope, Public, HideBySig
    Add(Vec2i): PrivateScope, Public, HideBySig
    Add(Vec3i): PrivateScope, Public, HideBySig
    Add(Vec4i): PrivateScope, Public, HideBySig
    Add(Vec6i): PrivateScope, Public, HideBySig
    Add(Vec2d): PrivateScope, Public, HideBySig
    Add(Vec3d): PrivateScope, Public, HideBySig
    Add(Vec4d): PrivateScope, Public, HideBySig
    Add(Vec6d): PrivateScope, Public, HideBySig
    Add(Vec2f): PrivateScope, Public, HideBySig
    Add(Vec3f): PrivateScope, Public, HideBySig
    Add(Vec4f): PrivateScope, Public, HideBySig
    Add(Vec6f): PrivateScope, Public, HideBySig
    Add(Vec2b): PrivateScope, Public, HideBySig
    Add(Vec3b): PrivateScope, Public, HideBySig
    Add(Vec4b): PrivateScope, Public, HideBySig
    Add(Vec6b): PrivateScope, Public, HideBySig
    Add(Vec2s): PrivateScope, Public, HideBySig
    Add(Vec3s): PrivateScope, Public, HideBySig
    Add(Vec4s): PrivateScope, Public, HideBySig
    Add(Vec6s): PrivateScope, Public, HideBySig
    Add(Vec2w): PrivateScope, Public, HideBySig
    Add(Vec3w): PrivateScope, Public, HideBySig
    Add(Vec4w): PrivateScope, Public, HideBySig
    Add(Vec6w): PrivateScope, Public, HideBySig
Class OpenCvSharp.InputArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
  Fields:
    Int32 KIND_SHIFT = 16 : Public, Static, Literal, HasDefault
    Int32 KIND_MASK = 1073676288 : Public, Static, Literal, HasDefault
  Methods:
    Create(Mat): PrivateScope, Public, Static, HideBySig
    Create(UMat): PrivateScope, Public, Static, HideBySig
    Create(MatExpr): PrivateScope, Public, Static, HideBySig
    Create(Scalar): PrivateScope, Public, Static, HideBySig
    Create(Double): PrivateScope, Public, Static, HideBySig
    Create(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Create(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Create(IEnumerable`1, MatType): PrivateScope, Public, Static, HideBySig
    Create(T[]): PrivateScope, Public, Static, HideBySig
    Create(T[], MatType): PrivateScope, Public, Static, HideBySig
    Create(T[,]): PrivateScope, Public, Static, HideBySig
    Create(T[,], MatType): PrivateScope, Public, Static, HideBySig
    Create(IVec): PrivateScope, Public, Static, HideBySig
    op_Implicit(Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UMat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(List`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Mat[]): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec2b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec3b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec4b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec6b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec2s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec3s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec4s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec6s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec2w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec3w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec4w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec6w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec2i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec3i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec4i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec6i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec2f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec3f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec4f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec6f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec4d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Vec6d): PrivateScope, Public, Static, HideBySig, SpecialName
    GetMat(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetMatVector(): PrivateScope, Public, HideBySig
    GetUMat(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetFlags(): PrivateScope, Public, HideBySig
    GetObj(): PrivateScope, Public, HideBySig
    GetSz(): PrivateScope, Public, HideBySig
    Kind(): PrivateScope, Public, HideBySig
    Dims(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Cols(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Rows(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Size(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SizeND(Int32[], Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SameSize(InputArray): PrivateScope, Public, HideBySig
    Total(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Type(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Depth(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Channels(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    IsContinuous(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    IsSubmatrix(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Empty(): PrivateScope, Public, HideBySig
    CopyTo(OutputArray): PrivateScope, Public, HideBySig
    CopyTo(OutputArray, InputArray): PrivateScope, Public, HideBySig
    Offset(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Step(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    IsMat(): PrivateScope, Public, HideBySig
    IsUMat(): PrivateScope, Public, HideBySig
    IsMatVector(): PrivateScope, Public, HideBySig
    IsUMatVector(): PrivateScope, Public, HideBySig
    IsMatx(): PrivateScope, Public, HideBySig
    IsVector(): PrivateScope, Public, HideBySig
    IsGpuMatVector(): PrivateScope, Public, HideBySig
Class OpenCvSharp.InputOutputArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.OutputArray
  Methods:
    Create(Mat): PrivateScope, Public, Static, HideBySig
    Create(UMat): PrivateScope, Public, Static, HideBySig
    op_Implicit(Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UMat): PrivateScope, Public, Static, HideBySig, SpecialName
Class OpenCvSharp.LDA: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.InputArray, OpenCvSharp.InputArray, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Eigenvectors(): PrivateScope, Public, HideBySig
    Eigenvalues(): PrivateScope, Public, HideBySig
    Save(String): PrivateScope, Public, HideBySig
    Load(String): PrivateScope, Public, HideBySig
    Save(FileStorage): PrivateScope, Public, HideBySig
    Load(FileStorage): PrivateScope, Public, HideBySig
    Compute(InputArray, InputArray): PrivateScope, Public, HideBySig
    Project(InputArray): PrivateScope, Public, HideBySig
    Reconstruct(InputArray): PrivateScope, Public, HideBySig
    SubspaceProject(InputArray, InputArray, InputArray): PrivateScope, Public, Static, HideBySig
    SubspaceReconstruct(InputArray, InputArray, InputArray): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.MatExpr: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
  Properties:
    OpenCvSharp.MatExpr Item [Int32, Int32, Int32, Int32] 'get ' : 
    OpenCvSharp.MatExpr Item [OpenCvSharp.Range, OpenCvSharp.Range] 'get ' : 
    OpenCvSharp.MatExpr Item [OpenCvSharp.Rect] 'get ' : 
  Methods:
    op_Implicit(MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    ToMat(): PrivateScope, Public, HideBySig
    op_Implicit(Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    FromMat(Mat): PrivateScope, Public, Static, HideBySig
    op_UnaryPlus(MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    Plus(): PrivateScope, Public, HideBySig
    op_UnaryNegation(MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    Negate(): PrivateScope, Public, HideBySig
    op_OnesComplement(MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    OnesComplement(): PrivateScope, Public, HideBySig
    op_Addition(MatExpr, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Mat, MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(MatExpr, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Scalar, MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(MatExpr, MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Mat): PrivateScope, Public, HideBySig
    Add(MatExpr): PrivateScope, Public, HideBySig
    Add(Scalar): PrivateScope, Public, HideBySig
    op_Subtraction(MatExpr, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Mat, MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(MatExpr, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Scalar, MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(MatExpr, MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(Mat): PrivateScope, Public, HideBySig
    Subtract(MatExpr): PrivateScope, Public, HideBySig
    Subtract(Scalar): PrivateScope, Public, HideBySig
    op_Multiply(MatExpr, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Mat, MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(MatExpr, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(MatExpr, MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    Multiply(Mat): PrivateScope, Public, HideBySig
    Multiply(MatExpr): PrivateScope, Public, HideBySig
    Multiply(Double): PrivateScope, Public, HideBySig
    op_Division(MatExpr, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Mat, MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(MatExpr, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Double, MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(MatExpr, MatExpr): PrivateScope, Public, Static, HideBySig, SpecialName
    Divide(Mat): PrivateScope, Public, HideBySig
    Divide(MatExpr): PrivateScope, Public, HideBySig
    Divide(Double): PrivateScope, Public, HideBySig
    get_Item(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Range, Range): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Rect): PrivateScope, Public, HideBySig, SpecialName
    Row(Int32): PrivateScope, Public, HideBySig
    Col(Int32): PrivateScope, Public, HideBySig
    Diag(MatDiagType(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SubMat(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SubMat(Range, Range): PrivateScope, Public, HideBySig
    SubMat(Rect): PrivateScope, Public, HideBySig
    T(): PrivateScope, Public, HideBySig
    Inv(DecompTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Mul(MatExpr, Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Mul(Mat, Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Cross(Mat): PrivateScope, Public, HideBySig
    Dot(Mat): PrivateScope, Public, HideBySig
    Size(): PrivateScope, Public, HideBySig
    Type(): PrivateScope, Public, HideBySig
    Abs(): PrivateScope, Public, HideBySig
Class OpenCvSharp.MatExprRowColIndexer: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    OpenCvSharp.MatExpr Item [Int32] 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Get(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Mat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, OpenCvSharp.ImreadModes): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, OpenCvSharp.MatType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Size, OpenCvSharp.MatType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, OpenCvSharp.MatType, OpenCvSharp.Scalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Size, OpenCvSharp.MatType, OpenCvSharp.Scalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Mat, OpenCvSharp.Range, System.Nullable`1[OpenCvSharp.Range]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Mat, OpenCvSharp.Range[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Mat, OpenCvSharp.Rect): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, OpenCvSharp.MatType, IntPtr, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, OpenCvSharp.MatType, System.Array, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Int32], OpenCvSharp.MatType, IntPtr, System.Collections.Generic.IEnumerable`1[System.Int64]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Int32], OpenCvSharp.MatType, System.Array, System.Collections.Generic.IEnumerable`1[System.Int64]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Int32], OpenCvSharp.MatType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Int32], OpenCvSharp.MatType, OpenCvSharp.Scalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    OpenCvSharp.Mat Item [Int32, Int32, Int32, Int32] 'get set' : 
    OpenCvSharp.Mat Item [OpenCvSharp.Range, OpenCvSharp.Range] 'get set' : 
    OpenCvSharp.Mat Item [OpenCvSharp.Rect] 'get set' : 
    OpenCvSharp.Mat Item [OpenCvSharp.Range[]] 'get set' : 
    Int32 Flags 'get ' : 
    Int32 Dims 'get ' : 
    Int32 Rows 'get ' : 
    Int32 Height 'get ' : 
    Int32 Cols 'get ' : 
    Int32 Width 'get ' : 
    IntPtr Data 'get ' : 
    Byte* DataPointer 'get ' : 
    IntPtr DataStart 'get ' : 
    IntPtr DataEnd 'get ' : 
    IntPtr DataLimit 'get ' : 
  Methods:
    GetRectSubPix(Size, Point2f, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Accumulate(InputArray): PrivateScope, Public, HideBySig
    AccumulateSquare(InputArray): PrivateScope, Public, HideBySig
    CreateHanningWindow(Size, MatType): PrivateScope, Public, HideBySig
    Threshold(Double, Double, ThresholdTypes): PrivateScope, Public, HideBySig
    AdaptiveThreshold(Double, AdaptiveThresholdTypes, ThresholdTypes, Int32, Double): PrivateScope, Public, HideBySig
    PyrDown(Nullable`1(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    PyrUp(Nullable`1(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    BuildPyramid(Int32, BorderTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Undistort(InputArray, InputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetDefaultNewCameraMatrix(Nullable`1(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    UndistortPoints(InputArray, InputArray, InputArray(Optional, HasDefault), InputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    EqualizeHist(): PrivateScope, Public, HideBySig
    Watershed(InputOutputArray): PrivateScope, Public, HideBySig
    PyrMeanShiftFiltering(Double, Double, Int32(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GrabCut(InputOutputArray, Rect, InputOutputArray, InputOutputArray, Int32, GrabCutModes): PrivateScope, Public, HideBySig
    FloodFill(Point, Scalar): PrivateScope, Public, HideBySig
    FloodFill(Point, Scalar, Rect&(Out), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), FloodFillFlags(Optional, HasDefault)): PrivateScope, Public, HideBySig
    FloodFill(InputOutputArray, Point, Scalar): PrivateScope, Public, HideBySig
    FloodFill(InputOutputArray, Point, Scalar, Rect&(Out), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), FloodFillFlags(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CvtColor(ColorConversionCodes, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Moments(Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    MatchTemplate(InputArray, TemplateMatchModes, InputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ConnectedComponents(OutputArray, PixelConnectivity(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ConnectedComponents(OutputArray, PixelConnectivity, MatType): PrivateScope, Public, HideBySig
    ConnectedComponents(Int32[,]&(Out), PixelConnectivity): PrivateScope, Public, HideBySig
    ConnectedComponentsWithStats(OutputArray, OutputArray, OutputArray, PixelConnectivity(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ConnectedComponentsWithStats(OutputArray, OutputArray, OutputArray, PixelConnectivity, MatType): PrivateScope, Public, HideBySig
    ConnectedComponentsEx(PixelConnectivity(Optional, HasDefault)): PrivateScope, Public, HideBySig
    FindContours(Point[][]&(Out), HierarchyIndex[]&(Out), RetrievalModes, ContourApproximationModes, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    FindContours(Mat[]&(Out), OutputArray, RetrievalModes, ContourApproximationModes, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    FindContoursAsArray(RetrievalModes, ContourApproximationModes, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    FindContoursAsMat(RetrievalModes, ContourApproximationModes, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    DrawContours(IEnumerable`1, Int32, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), IEnumerable`1(Optional, HasDefault), Int32(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    DrawContours(IEnumerable`1, Int32, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Mat(Optional, HasDefault), Int32(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ApproxPolyDP(Double, Boolean): PrivateScope, Public, HideBySig
    ArcLength(Boolean): PrivateScope, Public, HideBySig
    BoundingRect(): PrivateScope, Public, HideBySig
    ContourArea(Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    MinAreaRect(): PrivateScope, Public, HideBySig
    MinEnclosingCircle(Point2f&(Out), Single&(Out)): PrivateScope, Public, HideBySig
    ConvexHull(Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ConvexHullPoints(Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ConvexHullFloatPoints(Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ConvexHullIndices(Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ConvexityDefects(InputArray): PrivateScope, Public, HideBySig
    ConvexityDefectsAsVec(InputArray): PrivateScope, Public, HideBySig
    IsContourConvex(): PrivateScope, Public, HideBySig
    FitEllipse(): PrivateScope, Public, HideBySig
    FitLine2D(DistanceTypes, Double, Double, Double): PrivateScope, Public, HideBySig
    FitLine3D(DistanceTypes, Double, Double, Double): PrivateScope, Public, HideBySig
    PointPolygonTest(Point2f, Boolean): PrivateScope, Public, HideBySig
    DistanceTransform(DistanceTypes, DistanceTransformMasks): PrivateScope, Public, HideBySig
    Alignment(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Cast(): PrivateScope, Public, HideBySig
    ForEachAsByte(MatForeachFunctionByte): PrivateScope, Public, HideBySig
    ForEachAsVec2b(MatForeachFunctionVec2b): PrivateScope, Public, HideBySig
    ForEachAsVec3b(MatForeachFunctionVec3b): PrivateScope, Public, HideBySig
    ForEachAsVec4b(MatForeachFunctionVec4b): PrivateScope, Public, HideBySig
    ForEachAsVec6b(MatForeachFunctionVec6b): PrivateScope, Public, HideBySig
    ForEachAsInt16(MatForeachFunctionInt16): PrivateScope, Public, HideBySig
    ForEachAsVec2s(MatForeachFunctionVec2s): PrivateScope, Public, HideBySig
    ForEachAsVec3s(MatForeachFunctionVec3s): PrivateScope, Public, HideBySig
    ForEachAsVec4s(MatForeachFunctionVec4s): PrivateScope, Public, HideBySig
    ForEachAsVec6s(MatForeachFunctionVec6s): PrivateScope, Public, HideBySig
    ForEachAsInt32(MatForeachFunctionInt32): PrivateScope, Public, HideBySig
    ForEachAsVec2i(MatForeachFunctionVec2i): PrivateScope, Public, HideBySig
    ForEachAsVec3i(MatForeachFunctionVec3i): PrivateScope, Public, HideBySig
    ForEachAsVec4i(MatForeachFunctionVec4i): PrivateScope, Public, HideBySig
    ForEachAsVec6i(MatForeachFunctionVec6i): PrivateScope, Public, HideBySig
    ForEachAsFloat(MatForeachFunctionFloat): PrivateScope, Public, HideBySig
    ForEachAsVec2f(MatForeachFunctionVec2f): PrivateScope, Public, HideBySig
    ForEachAsVec3f(MatForeachFunctionVec3f): PrivateScope, Public, HideBySig
    ForEachAsVec4f(MatForeachFunctionVec4f): PrivateScope, Public, HideBySig
    ForEachAsVec6f(MatForeachFunctionVec6f): PrivateScope, Public, HideBySig
    ForEachAsDouble(MatForeachFunctionDouble): PrivateScope, Public, HideBySig
    ForEachAsVec2d(MatForeachFunctionVec2d): PrivateScope, Public, HideBySig
    ForEachAsVec3d(MatForeachFunctionVec3d): PrivateScope, Public, HideBySig
    ForEachAsVec4d(MatForeachFunctionVec4d): PrivateScope, Public, HideBySig
    ForEachAsVec6d(MatForeachFunctionVec6d): PrivateScope, Public, HideBySig
    AsSpan(): PrivateScope, Public, HideBySig
    Abs(): PrivateScope, Public, HideBySig
    ConvertScaleAbs(Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    LUT(InputArray): PrivateScope, Public, HideBySig
    LUT(Byte[]): PrivateScope, Public, HideBySig
    Sum(): PrivateScope, Public, HideBySig
    CountNonZero(): PrivateScope, Public, HideBySig
    FindNonZero(): PrivateScope, Public, HideBySig
    Mean(InputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    MeanStdDev(OutputArray, OutputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Norm(NormTypes(Optional, HasDefault), InputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Normalize(Double(Optional, HasDefault), Double(Optional, HasDefault), NormTypes(Optional, HasDefault), Int32(Optional, HasDefault), InputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    MinMaxLoc(Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    MinMaxLoc(Point&(Out), Point&(Out)): PrivateScope, Public, HideBySig
    MinMaxLoc(Double&(Out), Double&(Out), Point&(Out), Point&(Out), InputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    MinMaxIdx(Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    MinMaxIdx(Int32[], Int32[]): PrivateScope, Public, HideBySig
    MinMaxIdx(Double&(Out), Double&(Out), Int32[], Int32[], InputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Reduce(ReduceDimension, ReduceTypes, Int32): PrivateScope, Public, HideBySig
    Split(): PrivateScope, Public, HideBySig
    ExtractChannel(Int32): PrivateScope, Public, HideBySig
    InsertChannel(InputOutputArray, Int32): PrivateScope, Public, HideBySig
    Flip(FlipMode): PrivateScope, Public, HideBySig
    Repeat(Int32, Int32): PrivateScope, Public, HideBySig
    InRange(InputArray, InputArray): PrivateScope, Public, HideBySig
    InRange(Scalar, Scalar): PrivateScope, Public, HideBySig
    Sqrt(): PrivateScope, Public, HideBySig
    Pow(Double): PrivateScope, Public, HideBySig
    Exp(): PrivateScope, Public, HideBySig
    Log(): PrivateScope, Public, HideBySig
    CheckRange(Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CheckRange(Boolean, Point&(Out), Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    PatchNaNs(Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    MulTransposed(Boolean, InputArray(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Transpose(): PrivateScope, Public, HideBySig
    Transform(InputArray): PrivateScope, Public, HideBySig
    PerspectiveTransform(InputArray): PrivateScope, Public, HideBySig
    CompleteSymm(Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetIdentity(Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Determinant(): PrivateScope, Public, HideBySig
    Trace(): PrivateScope, Public, HideBySig
    Sort(SortFlags): PrivateScope, Public, HideBySig
    SortIdx(SortFlags): PrivateScope, Public, HideBySig
    Dft(DftFlags(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Idft(DftFlags(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Dct(DctFlags(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Idct(DctFlags(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Randu(InputArray, InputArray): PrivateScope, Public, HideBySig
    Randu(Scalar, Scalar): PrivateScope, Public, HideBySig
    Randn(InputArray, InputArray): PrivateScope, Public, HideBySig
    Randn(Scalar, Scalar): PrivateScope, Public, HideBySig
    RandShuffle(Double): PrivateScope, Public, HideBySig
    RandShuffle(Double, RNG&): PrivateScope, Public, HideBySig
    Line(Int32, Int32, Int32, Int32, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Line(Point, Point, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Rectangle(Point, Point, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Rectangle(Rect, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Circle(Int32, Int32, Int32, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Circle(Point, Int32, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Ellipse(Point, Size, Double, Double, Double, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Ellipse(RotatedRect, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    DrawMarker(Point, Scalar, MarkerTypes(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), LineTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    FillConvexPoly(IEnumerable`1, Scalar, LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    FillPoly(IEnumerable`1, Scalar, LineTypes(Optional, HasDefault), Int32(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Polylines(IEnumerable`1, Boolean, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    PutText(String, Point, HersheyFonts, Double, Scalar, Int32(Optional, HasDefault), LineTypes(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ImEncode(String(Optional, HasDefault), Int32[](Optional, HasDefault)): PrivateScope, Public, HideBySig
    ImEncode(String(Optional, HasDefault), ImageEncodingParam[]): PrivateScope, Public, HideBySig
    ImWrite(String, Int32[](Optional, HasDefault)): PrivateScope, Public, HideBySig
    ImWrite(String, ImageEncodingParam[]): PrivateScope, Public, HideBySig
    SaveImage(String, Int32[](Optional, HasDefault)): PrivateScope, Public, HideBySig
    SaveImage(String, ImageEncodingParam[]): PrivateScope, Public, HideBySig
    CopyMakeBorder(Int32, Int32, Int32, Int32, BorderTypes, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    MedianBlur(Int32): PrivateScope, Public, HideBySig
    GaussianBlur(Size, Double, Double(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    BilateralFilter(Int32, Double, Double, BorderTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    BoxFilter(MatType, Size, Nullable`1(Optional, HasDefault), Boolean(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Blur(Size, Nullable`1(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Filter2D(MatType, InputArray, Nullable`1(Optional, HasDefault), Double(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SepFilter2D(MatType, InputArray, InputArray, Nullable`1(Optional, HasDefault), Double(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Sobel(MatType, Int32, Int32, Int32(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Scharr(MatType, Int32, Int32, Double(Optional, HasDefault), Double(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Laplacian(MatType, Int32(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Canny(Double, Double, Int32(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CornerEigenValsAndVecs(Int32, Int32, BorderTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    PreCornerDetect(Int32, BorderTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CornerSubPix(IEnumerable`1, Size, Size, TermCriteria): PrivateScope, Public, HideBySig
    GoodFeaturesToTrack(Int32, Double, Double, InputArray, Int32, Boolean, Double): PrivateScope, Public, HideBySig
    HoughLines(Double, Double, Int32, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    HoughLinesP(Double, Double, Int32, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    HoughCircles(HoughModes, Double, Double, Double(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Dilate(InputArray, Nullable`1(Optional, HasDefault), Int32(Optional, HasDefault), BorderTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Erode(InputArray, Nullable`1(Optional, HasDefault), Int32(Optional, HasDefault), BorderTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    MorphologyEx(MorphTypes, InputArray, Nullable`1(Optional, HasDefault), Int32(Optional, HasDefault), BorderTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Resize(Size, Double(Optional, HasDefault), Double(Optional, HasDefault), InterpolationFlags(Optional, HasDefault)): PrivateScope, Public, HideBySig
    WarpAffine(InputArray, Size, InterpolationFlags(Optional, HasDefault), BorderTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    WarpPerspective(Mat, Size, InterpolationFlags(Optional, HasDefault), BorderTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Remap(InputArray, InputArray, InterpolationFlags(Optional, HasDefault), BorderTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    InvertAffineTransform(): PrivateScope, Public, HideBySig
    Resize(Int32, Scalar): PrivateScope, Public, HideBySig
    PopBack(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    PushBack(Byte): PrivateScope, Public, HideBySig
    PushBack(SByte): PrivateScope, Public, HideBySig
    PushBack(UInt16): PrivateScope, Public, HideBySig
    PushBack(Int16): PrivateScope, Public, HideBySig
    PushBack(Int32): PrivateScope, Public, HideBySig
    PushBack(Single): PrivateScope, Public, HideBySig
    PushBack(Double): PrivateScope, Public, HideBySig
    PushBack(Vec2b): PrivateScope, Public, HideBySig
    PushBack(Vec3b): PrivateScope, Public, HideBySig
    PushBack(Vec4b): PrivateScope, Public, HideBySig
    PushBack(Vec6b): PrivateScope, Public, HideBySig
    PushBack(Vec2w): PrivateScope, Public, HideBySig
    PushBack(Vec3w): PrivateScope, Public, HideBySig
    PushBack(Vec4w): PrivateScope, Public, HideBySig
    PushBack(Vec6w): PrivateScope, Public, HideBySig
    PushBack(Vec2s): PrivateScope, Public, HideBySig
    PushBack(Vec3s): PrivateScope, Public, HideBySig
    PushBack(Vec4s): PrivateScope, Public, HideBySig
    PushBack(Vec6s): PrivateScope, Public, HideBySig
    PushBack(Vec2i): PrivateScope, Public, HideBySig
    PushBack(Vec3i): PrivateScope, Public, HideBySig
    PushBack(Vec4i): PrivateScope, Public, HideBySig
    PushBack(Vec6i): PrivateScope, Public, HideBySig
    PushBack(Vec2f): PrivateScope, Public, HideBySig
    PushBack(Vec3f): PrivateScope, Public, HideBySig
    PushBack(Vec4f): PrivateScope, Public, HideBySig
    PushBack(Vec6f): PrivateScope, Public, HideBySig
    PushBack(Vec2d): PrivateScope, Public, HideBySig
    PushBack(Vec3d): PrivateScope, Public, HideBySig
    PushBack(Vec4d): PrivateScope, Public, HideBySig
    PushBack(Vec6d): PrivateScope, Public, HideBySig
    PushBack(Point): PrivateScope, Public, HideBySig
    PushBack(Point2d): PrivateScope, Public, HideBySig
    PushBack(Point2f): PrivateScope, Public, HideBySig
    PushBack(Point3i): PrivateScope, Public, HideBySig
    PushBack(Point3d): PrivateScope, Public, HideBySig
    PushBack(Point3f): PrivateScope, Public, HideBySig
    PushBack(Size): PrivateScope, Public, HideBySig
    PushBack(Size2d): PrivateScope, Public, HideBySig
    PushBack(Size2f): PrivateScope, Public, HideBySig
    PushBack(Rect): PrivateScope, Public, HideBySig
    PushBack(Rect2d): PrivateScope, Public, HideBySig
    PushBack(Rect2f): PrivateScope, Public, HideBySig
    PushBack(Mat): PrivateScope, Public, HideBySig
    LocateROI(Size&(Out), Point&(Out)): PrivateScope, Public, HideBySig
    AdjustROI(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SubMat(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SubMat(Range, Range): PrivateScope, Public, HideBySig
    SubMat(Rect): PrivateScope, Public, HideBySig
    SubMat(Range[]): PrivateScope, Public, HideBySig
    IsContinuous(): PrivateScope, Public, HideBySig
    IsSubmatrix(): PrivateScope, Public, HideBySig
    ElemSize(): PrivateScope, Public, HideBySig
    ElemSize1(): PrivateScope, Public, HideBySig
    Type(): PrivateScope, Public, HideBySig
    Depth(): PrivateScope, Public, HideBySig
    Channels(): PrivateScope, Public, HideBySig
    Step1(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Empty(): PrivateScope, Public, HideBySig
    Total(): PrivateScope, Public, HideBySig
    Total(Int32, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CheckVector(Int32, Int32(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Ptr(Int32): PrivateScope, Public, HideBySig
    Ptr(Int32, Int32): PrivateScope, Public, HideBySig
    Ptr(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Ptr(Int32[]): PrivateScope, Public, HideBySig
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    get_Dims(): PrivateScope, Public, HideBySig, SpecialName
    get_Rows(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_Cols(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    get_DataPointer(): PrivateScope, Public, HideBySig, SpecialName
    get_DataStart(): PrivateScope, Public, HideBySig, SpecialName
    get_DataEnd(): PrivateScope, Public, HideBySig, SpecialName
    get_DataLimit(): PrivateScope, Public, HideBySig, SpecialName
    Size(): PrivateScope, Public, HideBySig
    Size(Int32): PrivateScope, Public, HideBySig
    Step(): PrivateScope, Public, HideBySig
    Step(Int32): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Dump(FormatType(Optional, HasDefault)): PrivateScope, Public, HideBySig
    EmptyClone(): PrivateScope, Public, HideBySig
    GetGenericIndexer(): PrivateScope, Public, HideBySig
    GetUnsafeGenericIndexer(): PrivateScope, Public, HideBySig
    Get(Int32): PrivateScope, Public, HideBySig
    Get(Int32, Int32): PrivateScope, Public, HideBySig
    Get(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Get(Int32[]): PrivateScope, Public, HideBySig
    At(Int32): PrivateScope, Public, HideBySig
    At(Int32, Int32): PrivateScope, Public, HideBySig
    At(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    At(Int32[]): PrivateScope, Public, HideBySig
    Set(Int32, T): PrivateScope, Public, HideBySig
    Set(Int32, Int32, T): PrivateScope, Public, HideBySig
    Set(Int32, Int32, Int32, T): PrivateScope, Public, HideBySig
    Set(Int32[], T): PrivateScope, Public, HideBySig
    GetArray(T[]&(Out)): PrivateScope, Public, HideBySig
    GetRectangularArray(T[,]&(Out)): PrivateScope, Public, HideBySig
    SetArray(T[]): PrivateScope, Public, HideBySig
    SetRectangularArray(T[,]): PrivateScope, Public, HideBySig
    ToBytes(String(Optional, HasDefault), Int32[](Optional, HasDefault)): PrivateScope, Public, HideBySig
    ToBytes(String(Optional, HasDefault), ImageEncodingParam[]): PrivateScope, Public, HideBySig
    ToMemoryStream(String(Optional, HasDefault), ImageEncodingParam[]): PrivateScope, Public, HideBySig
    WriteToStream(Stream, String(Optional, HasDefault), ImageEncodingParam[]): PrivateScope, Public, HideBySig
    Release(): PrivateScope, Public, HideBySig
    FromStream(Stream, ImreadModes): PrivateScope, Public, Static, HideBySig
    ImDecode(Byte[], ImreadModes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ImDecode(ReadOnlySpan`1, ImreadModes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FromImageData(Byte[], ImreadModes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FromImageData(ReadOnlySpan`1, ImreadModes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Diag(Mat): PrivateScope, Public, Static, HideBySig
    Zeros(Int32, Int32, MatType): PrivateScope, Public, Static, HideBySig
    Zeros(Size, MatType): PrivateScope, Public, Static, HideBySig
    Zeros(MatType, Int32[]): PrivateScope, Public, Static, HideBySig
    Ones(Int32, Int32, MatType): PrivateScope, Public, Static, HideBySig
    Ones(Size, MatType): PrivateScope, Public, Static, HideBySig
    Ones(MatType, Int32[]): PrivateScope, Public, Static, HideBySig
    Eye(Size, MatType): PrivateScope, Public, Static, HideBySig
    Eye(Int32, Int32, MatType): PrivateScope, Public, Static, HideBySig
    FromArray(TElem[]): PrivateScope, Public, Static, HideBySig
    FromArray(TElem[,]): PrivateScope, Public, Static, HideBySig
    FromArray(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    op_UnaryPlus(Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    Plus(): PrivateScope, Public, HideBySig
    op_UnaryNegation(Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    Negate(): PrivateScope, Public, HideBySig
    op_Addition(Mat, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Mat, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Scalar, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Mat): PrivateScope, Public, HideBySig
    Add(Scalar): PrivateScope, Public, HideBySig
    op_Subtraction(Mat, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Mat, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Scalar, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(Mat): PrivateScope, Public, HideBySig
    Subtract(Scalar): PrivateScope, Public, HideBySig
    op_Multiply(Mat, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Mat, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    Multiply(Mat): PrivateScope, Public, HideBySig
    Multiply(Double): PrivateScope, Public, HideBySig
    op_Division(Mat, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Mat, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Double, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    Divide(Mat): PrivateScope, Public, HideBySig
    Divide(Double): PrivateScope, Public, HideBySig
    op_BitwiseAnd(Mat, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(Mat, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(Double, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    BitwiseAnd(Mat): PrivateScope, Public, HideBySig
    BitwiseAnd(Double): PrivateScope, Public, HideBySig
    op_BitwiseOr(Mat, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Mat, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Double, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    BitwiseOr(Mat): PrivateScope, Public, HideBySig
    BitwiseOr(Double): PrivateScope, Public, HideBySig
    op_ExclusiveOr(Mat, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_ExclusiveOr(Mat, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_ExclusiveOr(Double, Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    Xor(Mat): PrivateScope, Public, HideBySig
    Xor(Double): PrivateScope, Public, HideBySig
    op_OnesComplement(Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    OnesComplement(): PrivateScope, Public, HideBySig
    LessThan(Mat): PrivateScope, Public, HideBySig
    LessThan(Double): PrivateScope, Public, HideBySig
    LessThanOrEqual(Mat): PrivateScope, Public, HideBySig
    LessThanOrEqual(Double): PrivateScope, Public, HideBySig
    Equals(Mat): PrivateScope, Public, HideBySig
    Equals(Double): PrivateScope, Public, HideBySig
    NotEquals(Mat): PrivateScope, Public, HideBySig
    NotEquals(Double): PrivateScope, Public, HideBySig
    GreaterThan(Mat): PrivateScope, Public, HideBySig
    GreaterThan(Double): PrivateScope, Public, HideBySig
    GreaterThanOrEqual(Mat): PrivateScope, Public, HideBySig
    GreaterThanOrEqual(Double): PrivateScope, Public, HideBySig
    get_Item(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Int32, Int32, Int32, Mat): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Range, Range): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Range, Range, Mat): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Rect): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Rect, Mat): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Range[]): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Range[], Mat): PrivateScope, Public, HideBySig, SpecialName
    GetUMat(AccessFlag, UMatUsageFlags): PrivateScope, Public, HideBySig
    Col(Int32): PrivateScope, Public, HideBySig
    ColRange(Int32, Int32): PrivateScope, Public, HideBySig
    ColRange(Range): PrivateScope, Public, HideBySig
    Row(Int32): PrivateScope, Public, HideBySig
    RowRange(Int32, Int32): PrivateScope, Public, HideBySig
    RowRange(Range): PrivateScope, Public, HideBySig
    Diag(MatDiagType(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    Clone(Rect): PrivateScope, Public, HideBySig
    CopyTo(OutputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CopyTo(Mat, InputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ConvertTo(OutputArray, MatType, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AssignTo(Mat, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetTo(Scalar, Mat(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetTo(InputArray, Mat(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Reshape(Int32, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Reshape(Int32, Int32[]): PrivateScope, Public, HideBySig
    T(): PrivateScope, Public, HideBySig
    Inv(DecompTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Mul(InputArray, Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Cross(InputArray): PrivateScope, Public, HideBySig
    Dot(InputArray): PrivateScope, Public, HideBySig
    Create(Int32, Int32, MatType): PrivateScope, Public, HideBySig
    Create(Size, MatType): PrivateScope, Public, HideBySig
    Create(MatType, Int32[]): PrivateScope, Public, HideBySig
    Reserve(Int32): PrivateScope, Public, HideBySig
    ReserveBuffer(Int32): PrivateScope, Public, HideBySig
    Resize(Int32): PrivateScope, Public, HideBySig
Class OpenCvSharp.MatIndexer`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  Properties:
    T Item [Int32] 'get set' : 
    T Item [Int32, Int32] 'get set' : 
    T Item [Int32, Int32, Int32] 'get set' : 
    T Item [Int32[]] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Item(Int32, T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Item(Int32, Int32, T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Item(Int32, Int32, Int32, T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Item(Int32[], T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class OpenCvSharp.Mat`1[TElem]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TElem, System.ValueType,  NotNullableValueType DefaultConstructor
  :OpenCvSharp.Mat
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Mat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Size): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, OpenCvSharp.Scalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Size, OpenCvSharp.Scalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Mat`1[TElem], OpenCvSharp.Range, System.Nullable`1[OpenCvSharp.Range]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Mat`1[TElem], OpenCvSharp.Rect): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, System.Array, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Int32], IntPtr, System.Collections.Generic.IEnumerable`1[System.Int64]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Int32], System.Array, System.Collections.Generic.IEnumerable`1[System.Int64]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Int32]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Int32], OpenCvSharp.Scalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    OpenCvSharp.Mat`1[TElem] Item [Int32, Int32, Int32, Int32] 'get set' : 
    OpenCvSharp.Mat`1[TElem] Item [OpenCvSharp.Range, OpenCvSharp.Range] 'get set' : 
    OpenCvSharp.Mat`1[TElem] Item [OpenCvSharp.Rect] 'get set' : 
    OpenCvSharp.Mat`1[TElem] Item [OpenCvSharp.Range[]] 'get set' : 
  Methods:
    GetIndexer(): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
    ToRectangularArray(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    Reshape(Int32): PrivateScope, Public, HideBySig
    Reshape(Int32[]): PrivateScope, Public, HideBySig
    T(): PrivateScope, Public, HideBySig
    SubMat(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SubMat(Range, Range): PrivateScope, Public, HideBySig
    SubMat(Rect): PrivateScope, Public, HideBySig
    SubMat(Range[]): PrivateScope, Public, HideBySig
    get_Item(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Int32, Int32, Int32, Mat`1): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Range, Range): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Range, Range, Mat`1): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Rect): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Rect, Mat`1): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Range[]): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Range[], Mat`1): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.UMat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.UMatUsageFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, OpenCvSharp.MatType, OpenCvSharp.UMatUsageFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Size, OpenCvSharp.MatType, OpenCvSharp.UMatUsageFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, OpenCvSharp.MatType, OpenCvSharp.Scalar, OpenCvSharp.UMatUsageFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Size, OpenCvSharp.MatType, OpenCvSharp.Scalar, OpenCvSharp.UMatUsageFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.UMat, OpenCvSharp.Range, OpenCvSharp.Range, OpenCvSharp.UMatUsageFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.UMat, OpenCvSharp.Range[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.UMat, OpenCvSharp.Rect): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Int32], OpenCvSharp.MatType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Int32], OpenCvSharp.MatType, OpenCvSharp.Scalar): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    OpenCvSharp.UMat Item [Int32, Int32, Int32, Int32] 'get set' : 
    OpenCvSharp.UMat Item [OpenCvSharp.Range, OpenCvSharp.Range] 'get set' : 
    OpenCvSharp.UMat Item [OpenCvSharp.Rect] 'get set' : 
    OpenCvSharp.UMat Item [OpenCvSharp.Range[]] 'get set' : 
    Int32 Flags 'get ' : 
    Int32 Dims 'get ' : 
    Int32 Rows 'get ' : 
    Int32 Height 'get ' : 
    Int32 Cols 'get ' : 
    Int32 Width 'get ' : 
  Methods:
    Release(): PrivateScope, Public, HideBySig
    Diag(UMat): PrivateScope, Public, Static, HideBySig
    Zeros(Int32, Int32, MatType): PrivateScope, Public, Static, HideBySig
    Zeros(Size, MatType): PrivateScope, Public, Static, HideBySig
    Zeros(MatType, Int32[]): PrivateScope, Public, Static, HideBySig
    Ones(Int32, Int32, MatType): PrivateScope, Public, Static, HideBySig
    Ones(Size, MatType): PrivateScope, Public, Static, HideBySig
    Ones(MatType, Int32[]): PrivateScope, Public, Static, HideBySig
    Eye(Size, MatType): PrivateScope, Public, Static, HideBySig
    Eye(Int32, Int32, MatType): PrivateScope, Public, Static, HideBySig
    get_Item(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Int32, Int32, Int32, UMat): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Range, Range): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Range, Range, UMat): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Rect): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Rect, UMat): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Range[]): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Range[], UMat): PrivateScope, Public, HideBySig, SpecialName
    GetMat(AccessFlag): PrivateScope, Public, HideBySig
    Col(Int32): PrivateScope, Public, HideBySig
    ColRange(Int32, Int32): PrivateScope, Public, HideBySig
    ColRange(Range): PrivateScope, Public, HideBySig
    Row(Int32): PrivateScope, Public, HideBySig
    RowRange(Int32, Int32): PrivateScope, Public, HideBySig
    RowRange(Range): PrivateScope, Public, HideBySig
    Diag(MatDiagType(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    Clone(Rect): PrivateScope, Public, HideBySig
    CopyTo(OutputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    CopyTo(UMat, InputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ConvertTo(OutputArray, MatType, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AssignTo(UMat, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetTo(Scalar, UMat(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetTo(InputArray, UMat(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Reshape(Int32, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Reshape(Int32, Int32[]): PrivateScope, Public, HideBySig
    T(): PrivateScope, Public, HideBySig
    Inv(DecompTypes(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Mul(InputArray, Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Dot(InputArray): PrivateScope, Public, HideBySig
    Create(Int32, Int32, MatType): PrivateScope, Public, HideBySig
    Create(Size, MatType): PrivateScope, Public, HideBySig
    Create(MatType, Int32[]): PrivateScope, Public, HideBySig
    LocateROI(Size&(Out), Point&(Out)): PrivateScope, Public, HideBySig
    AdjustROI(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SubMat(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SubMat(Range, Range): PrivateScope, Public, HideBySig
    SubMat(Rect): PrivateScope, Public, HideBySig
    SubMat(Range[]): PrivateScope, Public, HideBySig
    IsContinuous(): PrivateScope, Public, HideBySig
    IsSubmatrix(): PrivateScope, Public, HideBySig
    ElemSize(): PrivateScope, Public, HideBySig
    ElemSize1(): PrivateScope, Public, HideBySig
    Type(): PrivateScope, Public, HideBySig
    Depth(): PrivateScope, Public, HideBySig
    Channels(): PrivateScope, Public, HideBySig
    Step1(Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Empty(): PrivateScope, Public, HideBySig
    Total(): PrivateScope, Public, HideBySig
    CheckVector(Int32, Int32(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    get_Dims(): PrivateScope, Public, HideBySig, SpecialName
    get_Rows(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_Cols(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    Size(): PrivateScope, Public, HideBySig
    Size(Int32): PrivateScope, Public, HideBySig
    Step(): PrivateScope, Public, HideBySig
    Step(Int32): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    EmptyClone(UMatUsageFlags(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Alignment(Int32(Optional, HasDefault), UMatUsageFlags(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class OpenCvSharp.OutputArray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
  Methods:
    op_Implicit(Mat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UMat): PrivateScope, Public, Static, HideBySig, SpecialName
    IsMat(): PrivateScope, Public, HideBySig
    IsUMat(): PrivateScope, Public, HideBySig
    GetMat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsVectorOfMat(): PrivateScope, Public, HideBySig
    GetVectorOfMat(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AssignResult(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Fix(): PrivateScope, Public, HideBySig
    IsReady(): PrivateScope, Public, HideBySig
    ThrowIfNotReady(): PrivateScope, Public, HideBySig
    Create(Mat): PrivateScope, Public, Static, HideBySig
    Create(UMat): PrivateScope, Public, Static, HideBySig
    Create(List`1): PrivateScope, Public, Static, HideBySig
    Create(List`1): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.OutputArrayOfMatList: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :OpenCvSharp.OutputArray
  Methods:
    GetVectorOfMat(): PrivateScope, Public, Virtual, HideBySig
    AssignResult(): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.OutputArrayOfStructList`1[T]: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :OpenCvSharp.OutputArray
  Methods:
    AssignResult(): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.PCA: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.InputArray, OpenCvSharp.InputArray, Flags, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.InputArray, OpenCvSharp.InputArray, Flags, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    OpenCvSharp.Mat Eigenvectors 'get ' : 
    OpenCvSharp.Mat Eigenvalues 'get ' : 
    OpenCvSharp.Mat Mean 'get ' : 
  Methods:
    get_Eigenvectors(): PrivateScope, Public, HideBySig, SpecialName
    get_Eigenvalues(): PrivateScope, Public, HideBySig, SpecialName
    get_Mean(): PrivateScope, Public, HideBySig, SpecialName
    Compute(InputArray, InputArray, Flags, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ComputeVar(InputArray, InputArray, Flags, Double): PrivateScope, Public, HideBySig
    Project(InputArray): PrivateScope, Public, HideBySig
    Project(InputArray, OutputArray): PrivateScope, Public, HideBySig
    BackProject(InputArray): PrivateScope, Public, HideBySig
    BackProject(InputArray, OutputArray): PrivateScope, Public, HideBySig
    Write(FileStorage): PrivateScope, Public, HideBySig
    Read(FileNode): PrivateScope, Public, HideBySig
Struct OpenCvSharp.RNG: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.RNG]
  Properties:
    UInt64 State 'get set' : 
  Methods:
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    set_State(UInt64): PrivateScope, Public, HideBySig, SpecialName
    op_Explicit(RNG): PrivateScope, Public, Static, HideBySig, SpecialName
    ToByte(): PrivateScope, Public, HideBySig
    op_Explicit(RNG): PrivateScope, Public, Static, HideBySig, SpecialName
    ToSByte(): PrivateScope, Public, HideBySig
    op_Explicit(RNG): PrivateScope, Public, Static, HideBySig, SpecialName
    ToUInt16(): PrivateScope, Public, HideBySig
    op_Explicit(RNG): PrivateScope, Public, Static, HideBySig, SpecialName
    ToInt16(): PrivateScope, Public, HideBySig
    op_Explicit(RNG): PrivateScope, Public, Static, HideBySig, SpecialName
    ToUInt32(): PrivateScope, Public, HideBySig
    op_Explicit(RNG): PrivateScope, Public, Static, HideBySig, SpecialName
    ToInt32(): PrivateScope, Public, HideBySig
    op_Explicit(RNG): PrivateScope, Public, Static, HideBySig, SpecialName
    ToSingle(): PrivateScope, Public, HideBySig
    op_Explicit(RNG): PrivateScope, Public, Static, HideBySig, SpecialName
    ToDouble(): PrivateScope, Public, HideBySig
    Next(): PrivateScope, Public, HideBySig
    Run(UInt32): PrivateScope, Public, HideBySig
    Run(): PrivateScope, Public, HideBySig
    Uniform(Int32, Int32): PrivateScope, Public, HideBySig
    Uniform(Single, Single): PrivateScope, Public, HideBySig
    Uniform(Double, Double): PrivateScope, Public, HideBySig
    Fill(InputOutputArray, DistributionType, InputArray, InputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Gaussian(Double): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(RNG): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(RNG, RNG): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(RNG, RNG): PrivateScope, Public, Static, HideBySig, SpecialName
Struct OpenCvSharp.RNG_MT19937: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    op_Explicit(RNG_MT19937): PrivateScope, Public, Static, HideBySig, SpecialName
    ToUInt32(): PrivateScope, Public, HideBySig
    op_Explicit(RNG_MT19937): PrivateScope, Public, Static, HideBySig, SpecialName
    ToInt32(): PrivateScope, Public, HideBySig
    op_Explicit(RNG_MT19937): PrivateScope, Public, Static, HideBySig, SpecialName
    ToSingle(): PrivateScope, Public, HideBySig
    op_Explicit(RNG_MT19937): PrivateScope, Public, Static, HideBySig, SpecialName
    ToDouble(): PrivateScope, Public, HideBySig
    Seed(UInt32): PrivateScope, Public, HideBySig
    Next(): PrivateScope, Public, HideBySig
    Run(UInt32): PrivateScope, Public, HideBySig
    Run(): PrivateScope, Public, HideBySig
    Uniform(Int32, Int32): PrivateScope, Public, HideBySig
    Uniform(Single, Single): PrivateScope, Public, HideBySig
    Uniform(Double, Double): PrivateScope, Public, HideBySig
Class OpenCvSharp.SparseMat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Int32], OpenCvSharp.MatType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Mat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Release(): PrivateScope, Public, HideBySig
    FromMat(Mat): PrivateScope, Public, Static, HideBySig
    AssignFrom(SparseMat): PrivateScope, Public, HideBySig
    AssignFrom(Mat): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    CopyTo(SparseMat): PrivateScope, Public, HideBySig
    CopyTo(Mat): PrivateScope, Public, HideBySig
    ConvertTo(SparseMat, Int32, Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ConvertTo(Mat, Int32, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    AssignTo(SparseMat, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Create(MatType, Int32[]): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    AddRef(): PrivateScope, Public, HideBySig
    ElemSize(): PrivateScope, Public, HideBySig
    ElemSize1(): PrivateScope, Public, HideBySig
    Type(): PrivateScope, Public, HideBySig
    Depth(): PrivateScope, Public, HideBySig
    Dims(): PrivateScope, Public, HideBySig
    Channels(): PrivateScope, Public, HideBySig
    Size(): PrivateScope, Public, HideBySig
    Size(Int32): PrivateScope, Public, HideBySig
    NzCount(): PrivateScope, Public, HideBySig
    Hash(Int32): PrivateScope, Public, HideBySig
    Hash(Int32, Int32): PrivateScope, Public, HideBySig
    Hash(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Hash(Int32[]): PrivateScope, Public, HideBySig
    Ptr(Int32, Boolean, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Ptr(Int32, Int32, Boolean, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Ptr(Int32, Int32, Int32, Boolean, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Ptr(Int32[], Boolean, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Find(Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Find(Int32, Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Find(Int32, Int32, Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Find(Int32[], Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Value(Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Value(Int32, Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Value(Int32, Int32, Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Value(Int32[], Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Ref(): PrivateScope, Public, HideBySig
    GetIndexer(): PrivateScope, Public, HideBySig
    Get(Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Get(Int32, Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Get(Int32, Int32, Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Get(Int32[], Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Set(Int32, T, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Set(Int32, Int32, T, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Set(Int32, Int32, Int32, T, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Set(Int32[], T, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.SparseMatIndexer`1[T]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  Properties:
    T Item [Int32, System.Nullable`1[System.Int64]] 'get set' : 
    T Item [Int32, Int32, System.Nullable`1[System.Int64]] 'get set' : 
    T Item [Int32, Int32, Int32, System.Nullable`1[System.Int64]] 'get set' : 
    T Item [Int32[], System.Nullable`1[System.Int64]] 'get set' : 
  Methods:
    get_Item(Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Item(Int32, Nullable`1(Optional, HasDefault), T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(Int32, Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Item(Int32, Int32, Nullable`1(Optional, HasDefault), T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(Int32, Int32, Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Item(Int32, Int32, Int32, Nullable`1(Optional, HasDefault), T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(Int32[], Nullable`1(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Item(Int32[], Nullable`1(Optional, HasDefault), T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct OpenCvSharp.DMatch: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 QueryIdx : Public
    Int32 TrainIdx : Public
    Int32 ImgIdx : Public
    Single Distance : Public
  Methods:
    Empty(): PrivateScope, Public, Static, HideBySig
    op_LessThan(DMatch, DMatch): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(DMatch, DMatch): PrivateScope, Public, Static, HideBySig, SpecialName
    CompareTo(DMatch): PrivateScope, Public, HideBySig
    op_Explicit(DMatch): PrivateScope, Public, Static, HideBySig, SpecialName
    ToVec4f(): PrivateScope, Public, HideBySig
    op_Explicit(Vec4f): PrivateScope, Public, Static, HideBySig, SpecialName
    FromVec4f(Vec4f): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.KeyPoint: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(OpenCvSharp.Point2f, Single, Single, Single, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single, Single, Single, Single, Single, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.KeyPoint]
  Fields:
    OpenCvSharp.Point2f Pt : Public
    Single Size : Public
    Single Angle : Public
    Single Response : Public
    Int32 Octave : Public
    Int32 ClassId : Public
  Methods:
    op_Equality(KeyPoint, KeyPoint): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(KeyPoint, KeyPoint): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(KeyPoint): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.MatType: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.MatType]
    System.IEquatable`1[System.Int32]
  Fields:
    OpenCvSharp.MatType CV_8UC1 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_8UC2 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_8UC3 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_8UC4 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_8SC1 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_8SC2 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_8SC3 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_8SC4 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_16UC1 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_16UC2 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_16UC3 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_16UC4 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_16SC1 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_16SC2 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_16SC3 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_16SC4 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_32SC1 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_32SC2 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_32SC3 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_32SC4 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_32FC1 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_32FC2 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_32FC3 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_32FC4 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_64FC1 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_64FC2 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_64FC3 : Public, Static, InitOnly
    OpenCvSharp.MatType CV_64FC4 : Public, Static, InitOnly
    Int32 CV_8U = 0 : Public, Static, Literal, HasDefault
    Int32 CV_8S = 1 : Public, Static, Literal, HasDefault
    Int32 CV_16U = 2 : Public, Static, Literal, HasDefault
    Int32 CV_16S = 3 : Public, Static, Literal, HasDefault
    Int32 CV_32S = 4 : Public, Static, Literal, HasDefault
    Int32 CV_32F = 5 : Public, Static, Literal, HasDefault
    Int32 CV_64F = 6 : Public, Static, Literal, HasDefault
    Int32 CV_USRTYPE1 = 7 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Value 'get ' : 
    Int32 Depth 'get ' : 
    Boolean IsInteger 'get ' : 
    Int32 Channels 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(MatType): PrivateScope, Public, Static, HideBySig, SpecialName
    ToInt32(): PrivateScope, Public, HideBySig
    op_Implicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    FromInt32(Int32): PrivateScope, Public, Static, HideBySig
    get_Depth(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInteger(): PrivateScope, Public, HideBySig, SpecialName
    get_Channels(): PrivateScope, Public, HideBySig, SpecialName
    Equals(MatType): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(MatType, MatType): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(MatType, MatType): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(MatType, Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(MatType, Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    CV_8UC(Int32): PrivateScope, Public, Static, HideBySig
    CV_8SC(Int32): PrivateScope, Public, Static, HideBySig
    CV_16UC(Int32): PrivateScope, Public, Static, HideBySig
    CV_16SC(Int32): PrivateScope, Public, Static, HideBySig
    CV_32SC(Int32): PrivateScope, Public, Static, HideBySig
    CV_32FC(Int32): PrivateScope, Public, Static, HideBySig
    CV_64FC(Int32): PrivateScope, Public, Static, HideBySig
    MakeType(Int32, Int32): PrivateScope, Public, Static, HideBySig
Struct OpenCvSharp.Point: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.Point]
  Fields:
    Int32 X : Public
    Int32 Y : Public
  Methods:
    ToVec2i(): PrivateScope, Public, HideBySig
    op_Implicit(Point): PrivateScope, Public, Static, HideBySig, SpecialName
    FromVec2i(Vec2i): PrivateScope, Public, Static, HideBySig
    op_Implicit(Vec2i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Point, Point): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Point, Point): PrivateScope, Public, Static, HideBySig, SpecialName
    Plus(): PrivateScope, Public, HideBySig
    op_UnaryPlus(Point): PrivateScope, Public, Static, HideBySig, SpecialName
    Negate(): PrivateScope, Public, HideBySig
    op_UnaryNegation(Point): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Point): PrivateScope, Public, HideBySig
    op_Addition(Point, Point): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(Point): PrivateScope, Public, HideBySig
    op_Subtraction(Point, Point): PrivateScope, Public, Static, HideBySig, SpecialName
    Multiply(Double): PrivateScope, Public, HideBySig
    op_Multiply(Point, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Point): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Distance(Point, Point): PrivateScope, Public, Static, HideBySig
    DistanceTo(Point): PrivateScope, Public, HideBySig
    DotProduct(Point, Point): PrivateScope, Public, Static, HideBySig
    DotProduct(Point): PrivateScope, Public, HideBySig
    CrossProduct(Point, Point): PrivateScope, Public, Static, HideBySig
    CrossProduct(Point): PrivateScope, Public, HideBySig
Struct OpenCvSharp.Point2d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.Point2d]
  Fields:
    Double X : Public
    Double Y : Public
  Methods:
    ToPoint(): PrivateScope, Public, HideBySig
    op_Explicit(Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    FromPoint(Point): PrivateScope, Public, Static, HideBySig
    op_Implicit(Point): PrivateScope, Public, Static, HideBySig, SpecialName
    ToVec2d(): PrivateScope, Public, HideBySig
    op_Implicit(Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    FromVec2d(Vec2d): PrivateScope, Public, Static, HideBySig
    op_Implicit(Vec2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Point2d, Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Point2d, Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    Plus(): PrivateScope, Public, HideBySig
    op_UnaryPlus(Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    Negate(): PrivateScope, Public, HideBySig
    op_UnaryNegation(Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Point2d): PrivateScope, Public, HideBySig
    op_Addition(Point2d, Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(Point2d): PrivateScope, Public, HideBySig
    op_Subtraction(Point2d, Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    Multiply(Double): PrivateScope, Public, HideBySig
    op_Multiply(Point2d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Point2d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Distance(Point2d, Point2d): PrivateScope, Public, Static, HideBySig
    DistanceTo(Point2d): PrivateScope, Public, HideBySig
    DotProduct(Point2d, Point2d): PrivateScope, Public, Static, HideBySig
    DotProduct(Point2d): PrivateScope, Public, HideBySig
    CrossProduct(Point2d, Point2d): PrivateScope, Public, Static, HideBySig
    CrossProduct(Point2d): PrivateScope, Public, HideBySig
Struct OpenCvSharp.Point2f: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.Point2f]
  Fields:
    Single X : Public
    Single Y : Public
  Methods:
    ToPoint(): PrivateScope, Public, HideBySig
    op_Explicit(Point2f): PrivateScope, Public, Static, HideBySig, SpecialName
    FromPoint(Point): PrivateScope, Public, Static, HideBySig
    op_Implicit(Point): PrivateScope, Public, Static, HideBySig, SpecialName
    ToVec2f(): PrivateScope, Public, HideBySig
    op_Implicit(Point2f): PrivateScope, Public, Static, HideBySig, SpecialName
    FromVec2f(Vec2f): PrivateScope, Public, Static, HideBySig
    op_Implicit(Vec2f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Point2f, Point2f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Point2f, Point2f): PrivateScope, Public, Static, HideBySig, SpecialName
    Plus(): PrivateScope, Public, HideBySig
    op_UnaryPlus(Point2f): PrivateScope, Public, Static, HideBySig, SpecialName
    Negate(): PrivateScope, Public, HideBySig
    op_UnaryNegation(Point2f): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Point2f): PrivateScope, Public, HideBySig
    op_Addition(Point2f, Point2f): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(Point2f): PrivateScope, Public, HideBySig
    op_Subtraction(Point2f, Point2f): PrivateScope, Public, Static, HideBySig, SpecialName
    Multiply(Double): PrivateScope, Public, HideBySig
    op_Multiply(Point2f, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Point2f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    Distance(Point2f, Point2f): PrivateScope, Public, Static, HideBySig
    DistanceTo(Point2f): PrivateScope, Public, HideBySig
    DotProduct(Point2f, Point2f): PrivateScope, Public, Static, HideBySig
    DotProduct(Point2f): PrivateScope, Public, HideBySig
    CrossProduct(Point2f, Point2f): PrivateScope, Public, Static, HideBySig
    CrossProduct(Point2f): PrivateScope, Public, HideBySig
Struct OpenCvSharp.Point3d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.Point3d]
  Fields:
    Double X : Public
    Double Y : Public
    Double Z : Public
  Methods:
    op_Explicit(Point3d): PrivateScope, Public, Static, HideBySig, SpecialName
    ToPoint3i(): PrivateScope, Public, HideBySig
    op_Implicit(Point3i): PrivateScope, Public, Static, HideBySig, SpecialName
    FromPoint3i(Point3i): PrivateScope, Public, Static, HideBySig
    op_Implicit(Point3d): PrivateScope, Public, Static, HideBySig, SpecialName
    ToVec3d(): PrivateScope, Public, HideBySig
    op_Implicit(Vec3d): PrivateScope, Public, Static, HideBySig, SpecialName
    FromVec3d(Vec3d): PrivateScope, Public, Static, HideBySig
    op_Equality(Point3d, Point3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Point3d, Point3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryPlus(Point3d): PrivateScope, Public, Static, HideBySig, SpecialName
    Plus(): PrivateScope, Public, HideBySig
    op_UnaryNegation(Point3d): PrivateScope, Public, Static, HideBySig, SpecialName
    Negate(): PrivateScope, Public, HideBySig
    op_Addition(Point3d, Point3d): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Point3d): PrivateScope, Public, HideBySig
    op_Subtraction(Point3d, Point3d): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(Point3d): PrivateScope, Public, HideBySig
    op_Multiply(Point3d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    Multiply(Double): PrivateScope, Public, HideBySig
    Equals(Point3d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Point3f: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.Point3f]
  Fields:
    Single X : Public
    Single Y : Public
    Single Z : Public
  Methods:
    op_Explicit(Point3f): PrivateScope, Public, Static, HideBySig, SpecialName
    ToPoint3i(): PrivateScope, Public, HideBySig
    op_Implicit(Point3i): PrivateScope, Public, Static, HideBySig, SpecialName
    FromPoint3i(Point3i): PrivateScope, Public, Static, HideBySig
    op_Implicit(Point3f): PrivateScope, Public, Static, HideBySig, SpecialName
    ToVec3f(): PrivateScope, Public, HideBySig
    op_Implicit(Vec3f): PrivateScope, Public, Static, HideBySig, SpecialName
    FromVec3f(Vec3f): PrivateScope, Public, Static, HideBySig
    op_Equality(Point3f, Point3f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Point3f, Point3f): PrivateScope, Public, Static, HideBySig, SpecialName
    Plus(): PrivateScope, Public, HideBySig
    op_UnaryPlus(Point3f): PrivateScope, Public, Static, HideBySig, SpecialName
    Negate(): PrivateScope, Public, HideBySig
    op_UnaryNegation(Point3f): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Point3f): PrivateScope, Public, HideBySig
    op_Addition(Point3f, Point3f): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(Point3f): PrivateScope, Public, HideBySig
    op_Subtraction(Point3f, Point3f): PrivateScope, Public, Static, HideBySig, SpecialName
    Multiply(Double): PrivateScope, Public, HideBySig
    op_Multiply(Point3f, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Point3f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Point3i: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.Point3i]
  Fields:
    Int32 X : Public
    Int32 Y : Public
    Int32 Z : Public
  Methods:
    op_Implicit(Point3i): PrivateScope, Public, Static, HideBySig, SpecialName
    ToVec3i(): PrivateScope, Public, HideBySig
    op_Implicit(Vec3i): PrivateScope, Public, Static, HideBySig, SpecialName
    FromVec3i(Vec3i): PrivateScope, Public, Static, HideBySig
    op_Equality(Point3i, Point3i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Point3i, Point3i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryPlus(Point3i): PrivateScope, Public, Static, HideBySig, SpecialName
    Plus(): PrivateScope, Public, HideBySig
    op_UnaryNegation(Point3i): PrivateScope, Public, Static, HideBySig, SpecialName
    Negate(): PrivateScope, Public, HideBySig
    op_Addition(Point3i, Point3i): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Point3i): PrivateScope, Public, HideBySig
    op_Subtraction(Point3i, Point3i): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(Point3i): PrivateScope, Public, HideBySig
    op_Multiply(Point3i, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    Multiply(Double): PrivateScope, Public, HideBySig
    Equals(Point3i): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Range: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.Range]
  Fields:
    Int32 Start : Public, InitOnly
    Int32 End : Public, InitOnly
  Properties:
    OpenCvSharp.Range All 'get ' : 
  Methods:
    get_All(): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Range): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Range, Range): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Range, Range): PrivateScope, Public, Static, HideBySig, SpecialName
Struct OpenCvSharp.Rangef: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.Rangef]
  Fields:
    Single Start : Public, InitOnly
    Single End : Public, InitOnly
  Properties:
    OpenCvSharp.Range All 'get ' : 
  Methods:
    ToRange(): PrivateScope, Public, HideBySig
    op_Implicit(Rangef): PrivateScope, Public, Static, HideBySig, SpecialName
    get_All(): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Rangef): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Rangef, Rangef): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Rangef, Rangef): PrivateScope, Public, Static, HideBySig, SpecialName
Struct OpenCvSharp.Rect: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Point, OpenCvSharp.Size): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.Rect]
  Fields:
    Int32 X : Public
    Int32 Y : Public
    Int32 Width : Public
    Int32 Height : Public
  Properties:
    Int32 Top  'get set' : 
    Int32 Bottom 'get ' : 
    Int32 Left 'get set' : 
    Int32 Right 'get ' : 
    OpenCvSharp.Point Location 'get set' : 
    OpenCvSharp.Size Size 'get set' : 
    OpenCvSharp.Point TopLeft 'get ' : 
    OpenCvSharp.Point BottomRight 'get ' : 
  Methods:
    FromLTRB(Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    op_Addition(Rect, Point): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Point): PrivateScope, Public, HideBySig
    op_Subtraction(Rect, Point): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(Point): PrivateScope, Public, HideBySig
    op_Addition(Rect, Size): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Size): PrivateScope, Public, HideBySig
    op_Subtraction(Rect, Size): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(Size): PrivateScope, Public, HideBySig
    op_BitwiseAnd(Rect, Rect): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Rect, Rect): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Size): PrivateScope, Public, HideBySig, SpecialName
    get_TopLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_BottomRight(): PrivateScope, Public, HideBySig, SpecialName
    Contains(Int32, Int32): PrivateScope, Public, HideBySig
    Contains(Point): PrivateScope, Public, HideBySig
    Contains(Rect): PrivateScope, Public, HideBySig
    Inflate(Int32, Int32): PrivateScope, Public, HideBySig
    Inflate(Size): PrivateScope, Public, HideBySig
    Inflate(Rect, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Intersect(Rect, Rect): PrivateScope, Public, Static, HideBySig
    Intersect(Rect): PrivateScope, Public, HideBySig
    IntersectsWith(Rect): PrivateScope, Public, HideBySig
    Union(Rect): PrivateScope, Public, HideBySig
    Union(Rect, Rect): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(Rect, Rect): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Rect, Rect): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Rect): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Deconstruct(Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
Struct OpenCvSharp.Rect2d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Point2d, OpenCvSharp.Size2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.Rect2d]
  Fields:
    Double X : Public
    Double Y : Public
    Double Width : Public
    Double Height : Public
  Properties:
    Double Top 'get set' : 
    Double Bottom 'get ' : 
    Double Left 'get set' : 
    Double Right 'get ' : 
    OpenCvSharp.Point2d Location 'get set' : 
    OpenCvSharp.Size2d Size 'get set' : 
    OpenCvSharp.Point2d TopLeft 'get ' : 
    OpenCvSharp.Point2d BottomRight 'get ' : 
  Methods:
    FromLTRB(Double, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    op_Addition(Rect2d, Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Point2d): PrivateScope, Public, HideBySig
    op_Subtraction(Rect2d, Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(Point2d): PrivateScope, Public, HideBySig
    op_Addition(Rect2d, Size2d): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Size2d): PrivateScope, Public, HideBySig
    op_Subtraction(Rect2d, Size2d): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(Size2d): PrivateScope, Public, HideBySig
    op_BitwiseAnd(Rect2d, Rect2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Rect2d, Rect2d): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    set_Top(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    set_Left(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Size2d): PrivateScope, Public, HideBySig, SpecialName
    get_TopLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_BottomRight(): PrivateScope, Public, HideBySig, SpecialName
    ToRect(): PrivateScope, Public, HideBySig
    Contains(Double, Double): PrivateScope, Public, HideBySig
    Contains(Point2d): PrivateScope, Public, HideBySig
    Contains(Rect2d): PrivateScope, Public, HideBySig
    Inflate(Double, Double): PrivateScope, Public, HideBySig
    Inflate(Size2d): PrivateScope, Public, HideBySig
    Inflate(Rect, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Intersect(Rect2d, Rect2d): PrivateScope, Public, Static, HideBySig
    Intersect(Rect2d): PrivateScope, Public, HideBySig
    IntersectsWith(Rect2d): PrivateScope, Public, HideBySig
    Union(Rect2d): PrivateScope, Public, HideBySig
    Union(Rect2d, Rect2d): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(Rect2d, Rect2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Rect2d, Rect2d): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Rect2d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Deconstruct(Double&(Out), Double&(Out), Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
Struct OpenCvSharp.Rect2f: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Point2f, OpenCvSharp.Size2f): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.Rect2f]
  Fields:
    Single X : Public
    Single Y : Public
    Single Width : Public
    Single Height : Public
  Properties:
    Single Top 'get set' : 
    Single Bottom 'get ' : 
    Single Left 'get set' : 
    Single Right 'get ' : 
    OpenCvSharp.Point2f Location 'get set' : 
    OpenCvSharp.Size2f Size 'get set' : 
    OpenCvSharp.Point2f TopLeft 'get ' : 
    OpenCvSharp.Point2f BottomRight 'get ' : 
  Methods:
    FromLTRB(Single, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    Add(Point2f): PrivateScope, Public, HideBySig
    op_Addition(Rect2f, Point2f): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(Point2f): PrivateScope, Public, HideBySig
    op_Subtraction(Rect2f, Point2f): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(Size2f): PrivateScope, Public, HideBySig
    op_Addition(Rect2f, Size2f): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(Size2f): PrivateScope, Public, HideBySig
    op_Subtraction(Rect2f, Size2f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(Rect2f, Rect2f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Rect2f, Rect2f): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    set_Top(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    set_Left(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(Point2f): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Size2f): PrivateScope, Public, HideBySig, SpecialName
    get_TopLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_BottomRight(): PrivateScope, Public, HideBySig, SpecialName
    Contains(Single, Single): PrivateScope, Public, HideBySig
    Contains(Point2f): PrivateScope, Public, HideBySig
    Contains(Rect2f): PrivateScope, Public, HideBySig
    Inflate(Single, Single): PrivateScope, Public, HideBySig
    Inflate(Size2f): PrivateScope, Public, HideBySig
    Inflate(Rect, Int32, Int32): PrivateScope, Public, Static, HideBySig
    Intersect(Rect2f, Rect2f): PrivateScope, Public, Static, HideBySig
    Intersect(Rect2f): PrivateScope, Public, HideBySig
    IntersectsWith(Rect2f): PrivateScope, Public, HideBySig
    Union(Rect2f): PrivateScope, Public, HideBySig
    Union(Rect2f, Rect2f): PrivateScope, Public, Static, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(Rect2f, Rect2f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Rect2f, Rect2f): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Rect2f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Deconstruct(Single&(Out), Single&(Out), Single&(Out), Single&(Out)): PrivateScope, Public, HideBySig
Struct OpenCvSharp.RotatedRect: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(OpenCvSharp.Point2f, OpenCvSharp.Size2f, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Point2f, OpenCvSharp.Point2f, OpenCvSharp.Point2f): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.RotatedRect]
  Fields:
    OpenCvSharp.Point2f Center : Public
    OpenCvSharp.Size2f Size : Public
    Single Angle : Public
  Methods:
    FromThreeVertexPoints(Point2f, Point2f, Point2f): PrivateScope, Public, Static, HideBySig
    Points(): PrivateScope, Public, HideBySig
    BoundingRect(): PrivateScope, Public, HideBySig
    Equals(RotatedRect): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(RotatedRect, RotatedRect): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(RotatedRect, RotatedRect): PrivateScope, Public, Static, HideBySig, SpecialName
Struct OpenCvSharp.Scalar: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.Scalar]
  Fields:
    Double Val0 : Public
    Double Val1 : Public
    Double Val2 : Public
    Double Val3 : Public
    OpenCvSharp.Scalar AliceBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar AntiqueWhite : Public, Static, InitOnly
    OpenCvSharp.Scalar Aqua : Public, Static, InitOnly
    OpenCvSharp.Scalar Aquamarine : Public, Static, InitOnly
    OpenCvSharp.Scalar Azure : Public, Static, InitOnly
    OpenCvSharp.Scalar Beige : Public, Static, InitOnly
    OpenCvSharp.Scalar Bisque : Public, Static, InitOnly
    OpenCvSharp.Scalar Black : Public, Static, InitOnly
    OpenCvSharp.Scalar BlanchedAlmond : Public, Static, InitOnly
    OpenCvSharp.Scalar Blue : Public, Static, InitOnly
    OpenCvSharp.Scalar BlueViolet : Public, Static, InitOnly
    OpenCvSharp.Scalar Brown : Public, Static, InitOnly
    OpenCvSharp.Scalar BurlyWood : Public, Static, InitOnly
    OpenCvSharp.Scalar CadetBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar Chartreuse : Public, Static, InitOnly
    OpenCvSharp.Scalar Chocolate : Public, Static, InitOnly
    OpenCvSharp.Scalar Coral : Public, Static, InitOnly
    OpenCvSharp.Scalar CornflowerBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar Cornsilk : Public, Static, InitOnly
    OpenCvSharp.Scalar Crimson : Public, Static, InitOnly
    OpenCvSharp.Scalar Cyan : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkCyan : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkGoldenrod : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkGray : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkGreen : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkKhaki : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkMagenta : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkOliveGreen : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkOrange : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkOrchid : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkRed : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkSalmon : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkSeaGreen : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkSlateBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkSlateGray : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkTurquoise : Public, Static, InitOnly
    OpenCvSharp.Scalar DarkViolet : Public, Static, InitOnly
    OpenCvSharp.Scalar DeepPink : Public, Static, InitOnly
    OpenCvSharp.Scalar DeepSkyBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar DimGray : Public, Static, InitOnly
    OpenCvSharp.Scalar DodgerBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar Firebrick : Public, Static, InitOnly
    OpenCvSharp.Scalar FloralWhite : Public, Static, InitOnly
    OpenCvSharp.Scalar ForestGreen : Public, Static, InitOnly
    OpenCvSharp.Scalar Fuchsia : Public, Static, InitOnly
    OpenCvSharp.Scalar Gainsboro : Public, Static, InitOnly
    OpenCvSharp.Scalar GhostWhite : Public, Static, InitOnly
    OpenCvSharp.Scalar Gold : Public, Static, InitOnly
    OpenCvSharp.Scalar Goldenrod : Public, Static, InitOnly
    OpenCvSharp.Scalar Gray : Public, Static, InitOnly
    OpenCvSharp.Scalar Green : Public, Static, InitOnly
    OpenCvSharp.Scalar GreenYellow : Public, Static, InitOnly
    OpenCvSharp.Scalar Honeydew : Public, Static, InitOnly
    OpenCvSharp.Scalar HotPink : Public, Static, InitOnly
    OpenCvSharp.Scalar IndianRed : Public, Static, InitOnly
    OpenCvSharp.Scalar Indigo : Public, Static, InitOnly
    OpenCvSharp.Scalar Ivory : Public, Static, InitOnly
    OpenCvSharp.Scalar Khaki : Public, Static, InitOnly
    OpenCvSharp.Scalar Lavender : Public, Static, InitOnly
    OpenCvSharp.Scalar LavenderBlush : Public, Static, InitOnly
    OpenCvSharp.Scalar LawnGreen : Public, Static, InitOnly
    OpenCvSharp.Scalar LemonChiffon : Public, Static, InitOnly
    OpenCvSharp.Scalar LightBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar LightCoral : Public, Static, InitOnly
    OpenCvSharp.Scalar LightCyan : Public, Static, InitOnly
    OpenCvSharp.Scalar LightGoldenrodYellow : Public, Static, InitOnly
    OpenCvSharp.Scalar LightGray : Public, Static, InitOnly
    OpenCvSharp.Scalar LightGreen : Public, Static, InitOnly
    OpenCvSharp.Scalar LightPink : Public, Static, InitOnly
    OpenCvSharp.Scalar LightSalmon : Public, Static, InitOnly
    OpenCvSharp.Scalar LightSeaGreen : Public, Static, InitOnly
    OpenCvSharp.Scalar LightSkyBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar LightSlateGray : Public, Static, InitOnly
    OpenCvSharp.Scalar LightSteelBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar LightYellow : Public, Static, InitOnly
    OpenCvSharp.Scalar Lime : Public, Static, InitOnly
    OpenCvSharp.Scalar LimeGreen : Public, Static, InitOnly
    OpenCvSharp.Scalar Linen : Public, Static, InitOnly
    OpenCvSharp.Scalar Magenta : Public, Static, InitOnly
    OpenCvSharp.Scalar Maroon : Public, Static, InitOnly
    OpenCvSharp.Scalar MediumAquamarine : Public, Static, InitOnly
    OpenCvSharp.Scalar MediumBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar MediumOrchid : Public, Static, InitOnly
    OpenCvSharp.Scalar MediumPurple : Public, Static, InitOnly
    OpenCvSharp.Scalar MediumSeaGreen : Public, Static, InitOnly
    OpenCvSharp.Scalar MediumSlateBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar MediumSpringGreen : Public, Static, InitOnly
    OpenCvSharp.Scalar MediumTurquoise : Public, Static, InitOnly
    OpenCvSharp.Scalar MediumVioletRed : Public, Static, InitOnly
    OpenCvSharp.Scalar MidnightBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar MintCream : Public, Static, InitOnly
    OpenCvSharp.Scalar MistyRose : Public, Static, InitOnly
    OpenCvSharp.Scalar Moccasin : Public, Static, InitOnly
    OpenCvSharp.Scalar NavajoWhite : Public, Static, InitOnly
    OpenCvSharp.Scalar Navy : Public, Static, InitOnly
    OpenCvSharp.Scalar OldLace : Public, Static, InitOnly
    OpenCvSharp.Scalar Olive : Public, Static, InitOnly
    OpenCvSharp.Scalar OliveDrab : Public, Static, InitOnly
    OpenCvSharp.Scalar Orange : Public, Static, InitOnly
    OpenCvSharp.Scalar OrangeRed : Public, Static, InitOnly
    OpenCvSharp.Scalar Orchid : Public, Static, InitOnly
    OpenCvSharp.Scalar PaleGoldenrod : Public, Static, InitOnly
    OpenCvSharp.Scalar PaleGreen : Public, Static, InitOnly
    OpenCvSharp.Scalar PaleTurquoise : Public, Static, InitOnly
    OpenCvSharp.Scalar PaleVioletRed : Public, Static, InitOnly
    OpenCvSharp.Scalar PapayaWhip : Public, Static, InitOnly
    OpenCvSharp.Scalar PeachPuff : Public, Static, InitOnly
    OpenCvSharp.Scalar Peru : Public, Static, InitOnly
    OpenCvSharp.Scalar Pink : Public, Static, InitOnly
    OpenCvSharp.Scalar Plum : Public, Static, InitOnly
    OpenCvSharp.Scalar PowderBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar Purple : Public, Static, InitOnly
    OpenCvSharp.Scalar Red : Public, Static, InitOnly
    OpenCvSharp.Scalar RosyBrown : Public, Static, InitOnly
    OpenCvSharp.Scalar RoyalBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar SaddleBrown : Public, Static, InitOnly
    OpenCvSharp.Scalar Salmon : Public, Static, InitOnly
    OpenCvSharp.Scalar SandyBrown : Public, Static, InitOnly
    OpenCvSharp.Scalar SeaGreen : Public, Static, InitOnly
    OpenCvSharp.Scalar SeaShell : Public, Static, InitOnly
    OpenCvSharp.Scalar Sienna : Public, Static, InitOnly
    OpenCvSharp.Scalar Silver : Public, Static, InitOnly
    OpenCvSharp.Scalar SkyBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar SlateBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar SlateGray : Public, Static, InitOnly
    OpenCvSharp.Scalar Snow : Public, Static, InitOnly
    OpenCvSharp.Scalar SpringGreen : Public, Static, InitOnly
    OpenCvSharp.Scalar SteelBlue : Public, Static, InitOnly
    OpenCvSharp.Scalar Tan : Public, Static, InitOnly
    OpenCvSharp.Scalar Teal : Public, Static, InitOnly
    OpenCvSharp.Scalar Thistle : Public, Static, InitOnly
    OpenCvSharp.Scalar Tomato : Public, Static, InitOnly
    OpenCvSharp.Scalar Turquoise : Public, Static, InitOnly
    OpenCvSharp.Scalar Violet : Public, Static, InitOnly
    OpenCvSharp.Scalar Wheat : Public, Static, InitOnly
    OpenCvSharp.Scalar White : Public, Static, InitOnly
    OpenCvSharp.Scalar WhiteSmoke : Public, Static, InitOnly
    OpenCvSharp.Scalar Yellow : Public, Static, InitOnly
    OpenCvSharp.Scalar YellowGreen : Public, Static, InitOnly
  Properties:
    Double Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Double): PrivateScope, Public, HideBySig, SpecialName
    FromRgb(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    RandomColor(): PrivateScope, Public, Static, HideBySig
    RandomColor(RandomNumberGenerator): PrivateScope, Public, Static, HideBySig
    ToDouble(): PrivateScope, Public, HideBySig
    ToDMatch(): PrivateScope, Public, HideBySig
    op_Explicit(Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    FromDouble(Double): PrivateScope, Public, Static, HideBySig
    FromDMatch(DMatch): PrivateScope, Public, Static, HideBySig
    FromVec3b(Vec3b): PrivateScope, Public, Static, HideBySig
    FromVec3f(Vec3f): PrivateScope, Public, Static, HideBySig
    FromVec4f(Vec4f): PrivateScope, Public, Static, HideBySig
    FromVec6f(Vec6f): PrivateScope, Public, Static, HideBySig
    FromVec3d(Vec3d): PrivateScope, Public, Static, HideBySig
    FromVec4d(Vec4d): PrivateScope, Public, Static, HideBySig
    FromVec6d(Vec6d): PrivateScope, Public, Static, HideBySig
    FromPoint(Point): PrivateScope, Public, Static, HideBySig
    FromPoint2f(Point2f): PrivateScope, Public, Static, HideBySig
    FromPoint2d(Point2d): PrivateScope, Public, Static, HideBySig
    FromPoint3i(Point3i): PrivateScope, Public, Static, HideBySig
    FromPoint3f(Point3f): PrivateScope, Public, Static, HideBySig
    FromPoint3d(Point3d): PrivateScope, Public, Static, HideBySig
    FromRect(Rect): PrivateScope, Public, Static, HideBySig
    op_Implicit(Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(DMatch): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Vec3b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Vec3f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Vec4f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Vec6f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Vec3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Vec4d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Vec6d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Point): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Point2f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Point3i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Point3f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Point3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Rect): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Scalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Scalar, Scalar): PrivateScope, Public, Static, HideBySig, SpecialName
    All(Double): PrivateScope, Public, Static, HideBySig
    Mul(Scalar, Double): PrivateScope, Public, HideBySig
    Mul(Scalar): PrivateScope, Public, HideBySig
    Conj(): PrivateScope, Public, HideBySig
    IsReal(): PrivateScope, Public, HideBySig
    ToVec3b(): PrivateScope, Public, HideBySig
Struct OpenCvSharp.Size: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.Size]
  Fields:
    Int32 Width : Public
    Int32 Height : Public
  Methods:
    op_Explicit(Size2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Size2f): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(Size, Size): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Size, Size): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Size): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Deconstruct(Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
Struct OpenCvSharp.Size2d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.Size2d]
  Fields:
    Double Width : Public
    Double Height : Public
  Methods:
    op_Implicit(Size): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Size2f): PrivateScope, Public, Static, HideBySig, SpecialName
    ToSize(): PrivateScope, Public, HideBySig
    ToSize2f(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(Size2d, Size2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Size2d, Size2d): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Size2d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Deconstruct(Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
Struct OpenCvSharp.Size2f: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.Size2f]
  Fields:
    Single Width : Public
    Single Height : Public
  Methods:
    op_Implicit(Size): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Size2d): PrivateScope, Public, Static, HideBySig, SpecialName
    ToSize(): PrivateScope, Public, HideBySig
    ToSize2d(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(Size2f, Size2f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Size2f, Size2f): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(Size2f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Deconstruct(Single&(Out), Single&(Out)): PrivateScope, Public, HideBySig
Struct OpenCvSharp.TermCriteria: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(OpenCvSharp.CriteriaTypes, Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.TermCriteria]
  Fields:
    OpenCvSharp.CriteriaTypes Type : Public, InitOnly
    Int32 MaxCount : Public, InitOnly
    Double Epsilon : Public, InitOnly
  Methods:
    Both(Int32, Double): PrivateScope, Public, Static, HideBySig
    Equals(TermCriteria): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(TermCriteria, TermCriteria): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(TermCriteria, TermCriteria): PrivateScope, Public, Static, HideBySig, SpecialName
Interface OpenCvSharp.IVec: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
Interface OpenCvSharp.IVec`2[TSelf,TElem]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TSelf, OpenCvSharp.IVec
  Type parameter: TElem, System.ValueType,  Covariant NotNullableValueType DefaultConstructor
  Interfaces:
    OpenCvSharp.IVec
  Properties:
    TElem Item [Int32] 'get ' : 
  Methods:
    Add(TSelf): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Subtract(TSelf): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Multiply(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Divide(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct OpenCvSharp.Vec2b: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec2b,System.Byte]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec2b]
  Fields:
    Byte Item0 : Public
    Byte Item1 : Public
  Properties:
    Byte Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Byte&(Out), Byte&(Out)): PrivateScope, Public, HideBySig
    All(Byte): PrivateScope, Public, Static, HideBySig
    Add(Vec2b): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec2b): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec2b, Vec2b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec2b, Vec2b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec2b, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec2b, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Byte): PrivateScope, Public, HideBySig, SpecialName
    ToVec2s(): PrivateScope, Public, HideBySig
    ToVec2w(): PrivateScope, Public, HideBySig
    ToVec2i(): PrivateScope, Public, HideBySig
    ToVec2f(): PrivateScope, Public, HideBySig
    ToVec2d(): PrivateScope, Public, HideBySig
    Equals(Vec2b): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec2b, Vec2b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec2b, Vec2b): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec2d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec2d,System.Double]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec2d]
  Fields:
    Double Item0 : Public
    Double Item1 : Public
  Properties:
    Double Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    Add(Vec2d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec2d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec2d, Vec2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec2d, Vec2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec2d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec2d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Vec2d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec2d, Vec2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec2d, Vec2d): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec2f: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec2f,System.Single]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec2f]
  Fields:
    Single Item0 : Public
    Single Item1 : Public
  Properties:
    Single Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Single&(Out), Single&(Out)): PrivateScope, Public, HideBySig
    Add(Vec2f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec2f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec2f, Vec2f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec2f, Vec2f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec2f, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec2f, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Single): PrivateScope, Public, HideBySig, SpecialName
    ToVec2i(): PrivateScope, Public, HideBySig
    ToVec2d(): PrivateScope, Public, HideBySig
    Equals(Vec2f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec2f, Vec2f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec2f, Vec2f): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec2i: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec2i,System.Int32]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec2i]
  Fields:
    Int32 Item0 : Public
    Int32 Item1 : Public
  Properties:
    Int32 Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    Add(Vec2i): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec2i): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec2i, Vec2i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec2i, Vec2i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec2i, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec2i, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    ToVec2f(): PrivateScope, Public, HideBySig
    ToVec2d(): PrivateScope, Public, HideBySig
    Equals(Vec2i): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec2i, Vec2i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec2i, Vec2i): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec2s: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int16, Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec2s,System.Int16]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec2s]
  Fields:
    Int16 Item0 : Public
    Int16 Item1 : Public
  Properties:
    Int16 Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Int16&(Out), Int16&(Out)): PrivateScope, Public, HideBySig
    Add(Vec2s): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec2s): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec2s, Vec2s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec2s, Vec2s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec2s, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec2s, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Int16): PrivateScope, Public, HideBySig, SpecialName
    ToVec2w(): PrivateScope, Public, HideBySig
    ToVec2i(): PrivateScope, Public, HideBySig
    ToVec2f(): PrivateScope, Public, HideBySig
    ToVec2d(): PrivateScope, Public, HideBySig
    Equals(Vec2s): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec2s, Vec2s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec2s, Vec2s): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec2w: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt16, UInt16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec2w,System.UInt16]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec2w]
  Fields:
    UInt16 Item0 : Public
    UInt16 Item1 : Public
  Properties:
    UInt16 Item [Int32] 'get set' : 
  Methods:
    Deconstruct(UInt16&(Out), UInt16&(Out)): PrivateScope, Public, HideBySig
    Add(Vec2w): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec2w): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec2w, Vec2w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec2w, Vec2w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec2w, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec2w, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, UInt16): PrivateScope, Public, HideBySig, SpecialName
    ToVec2s(): PrivateScope, Public, HideBySig
    ToVec2i(): PrivateScope, Public, HideBySig
    ToVec2f(): PrivateScope, Public, HideBySig
    ToVec2d(): PrivateScope, Public, HideBySig
    Equals(Vec2w): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec2w, Vec2w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec2w, Vec2w): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec3b: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Byte, Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec3b,System.Byte]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec3b]
  Fields:
    Byte Item0 : Public
    Byte Item1 : Public
    Byte Item2 : Public
  Properties:
    Byte Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Byte&(Out), Byte&(Out), Byte&(Out)): PrivateScope, Public, HideBySig
    Add(Vec3b): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec3b): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec3b, Vec3b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec3b, Vec3b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec3b, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec3b, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Byte): PrivateScope, Public, HideBySig, SpecialName
    ToVec3s(): PrivateScope, Public, HideBySig
    ToVec3w(): PrivateScope, Public, HideBySig
    ToVec3i(): PrivateScope, Public, HideBySig
    ToVec3f(): PrivateScope, Public, HideBySig
    ToVec3d(): PrivateScope, Public, HideBySig
    Equals(Vec3b): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec3b, Vec3b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec3b, Vec3b): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec3d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec3d,System.Double]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec3d]
  Fields:
    Double Item0 : Public
    Double Item1 : Public
    Double Item2 : Public
  Properties:
    Double Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Double&(Out), Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    Add(Vec3d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec3d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec3d, Vec3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec3d, Vec3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec3d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec3d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Vec3d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec3d, Vec3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec3d, Vec3d): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec3f: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec3f,System.Single]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec3f]
  Fields:
    Single Item0 : Public
    Single Item1 : Public
    Single Item2 : Public
  Properties:
    Single Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Single&(Out), Single&(Out), Single&(Out)): PrivateScope, Public, HideBySig
    Add(Vec3f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec3f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec3f, Vec3f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec3f, Vec3f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec3f, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec3f, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Single): PrivateScope, Public, HideBySig, SpecialName
    ToVec3i(): PrivateScope, Public, HideBySig
    ToVec3d(): PrivateScope, Public, HideBySig
    Equals(Vec3f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec3f, Vec3f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec3f, Vec3f): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec3i: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec3i,System.Int32]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec3i]
  Fields:
    Int32 Item0 : Public
    Int32 Item1 : Public
    Int32 Item2 : Public
  Properties:
    Int32 Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    Add(Vec3i): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec3i): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec3i, Vec3i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec3i, Vec3i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec3i, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec3i, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    ToVec3f(): PrivateScope, Public, HideBySig
    ToVec3d(): PrivateScope, Public, HideBySig
    Equals(Vec3i): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec3i, Vec3i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec3i, Vec3i): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec3s: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int16, Int16, Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec3s,System.Int16]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec3s]
  Fields:
    Int16 Item0 : Public
    Int16 Item1 : Public
    Int16 Item2 : Public
  Properties:
    Int16 Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Int16&(Out), Int16&(Out), Int16&(Out)): PrivateScope, Public, HideBySig
    Add(Vec3s): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec3s): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec3s, Vec3s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec3s, Vec3s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec3s, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec3s, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Int16): PrivateScope, Public, HideBySig, SpecialName
    ToVec3w(): PrivateScope, Public, HideBySig
    ToVec3i(): PrivateScope, Public, HideBySig
    ToVec3f(): PrivateScope, Public, HideBySig
    ToVec3d(): PrivateScope, Public, HideBySig
    Equals(Vec3s): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec3s, Vec3s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec3s, Vec3s): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec3w: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt16, UInt16, UInt16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec3w,System.UInt16]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec3w]
  Fields:
    UInt16 Item0 : Public
    UInt16 Item1 : Public
    UInt16 Item2 : Public
  Properties:
    UInt16 Item [Int32] 'get set' : 
  Methods:
    Deconstruct(UInt16&(Out), UInt16&(Out), UInt16&(Out)): PrivateScope, Public, HideBySig
    Add(Vec3w): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec3w): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec3w, Vec3w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec3w, Vec3w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec3w, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec3w, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, UInt16): PrivateScope, Public, HideBySig, SpecialName
    ToVec3s(): PrivateScope, Public, HideBySig
    ToVec3i(): PrivateScope, Public, HideBySig
    ToVec3f(): PrivateScope, Public, HideBySig
    ToVec3d(): PrivateScope, Public, HideBySig
    Equals(Vec3w): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec3w, Vec3w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec3w, Vec3w): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec4b: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Byte, Byte, Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec4b,System.Byte]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec4b]
  Fields:
    Byte Item0 : Public
    Byte Item1 : Public
    Byte Item2 : Public
    Byte Item3 : Public
  Properties:
    Byte Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Byte&(Out), Byte&(Out), Byte&(Out), Byte&(Out)): PrivateScope, Public, HideBySig
    Add(Vec4b): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec4b): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec4b, Vec4b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec4b, Vec4b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec4b, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec4b, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Byte): PrivateScope, Public, HideBySig, SpecialName
    ToVec4s(): PrivateScope, Public, HideBySig
    ToVec4w(): PrivateScope, Public, HideBySig
    ToVec4i(): PrivateScope, Public, HideBySig
    ToVec4f(): PrivateScope, Public, HideBySig
    ToVec4d(): PrivateScope, Public, HideBySig
    Equals(Vec4b): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec4b, Vec4b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec4b, Vec4b): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec4d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec4d,System.Double]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec4d]
  Fields:
    Double Item0 : Public
    Double Item1 : Public
    Double Item2 : Public
    Double Item3 : Public
  Properties:
    Double Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Double&(Out), Double&(Out), Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    Add(Vec4d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec4d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec4d, Vec4d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec4d, Vec4d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec4d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec4d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Vec4d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec4d, Vec4d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec4d, Vec4d): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec4f: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec4f,System.Single]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec4f]
  Fields:
    Single Item0 : Public
    Single Item1 : Public
    Single Item2 : Public
    Single Item3 : Public
  Properties:
    Single Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Single&(Out), Single&(Out), Single&(Out), Single&(Out)): PrivateScope, Public, HideBySig
    Add(Vec4f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec4f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec4f, Vec4f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec4f, Vec4f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec4f, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec4f, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Single): PrivateScope, Public, HideBySig, SpecialName
    ToVec4i(): PrivateScope, Public, HideBySig
    ToVec4d(): PrivateScope, Public, HideBySig
    Equals(Vec4f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec4f, Vec4f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec4f, Vec4f): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec4i: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec4i,System.Int32]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec4i]
  Fields:
    Int32 Item0 : Public
    Int32 Item1 : Public
    Int32 Item2 : Public
    Int32 Item3 : Public
  Properties:
    Int32 Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    Add(Vec4i): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec4i): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec4i, Vec4i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec4i, Vec4i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec4i, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec4i, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    ToVec4f(): PrivateScope, Public, HideBySig
    ToVec4d(): PrivateScope, Public, HideBySig
    Equals(Vec4i): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec4i, Vec4i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec4i, Vec4i): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec4s: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int16, Int16, Int16, Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec4s,System.Int16]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec4s]
  Fields:
    Int16 Item0 : Public
    Int16 Item1 : Public
    Int16 Item2 : Public
    Int16 Item3 : Public
  Properties:
    Int16 Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Int16&(Out), Int16&(Out), Int16&(Out), Int16&(Out)): PrivateScope, Public, HideBySig
    Add(Vec4s): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec4s): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec4s, Vec4s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec4s, Vec4s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec4s, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec4s, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Int16): PrivateScope, Public, HideBySig, SpecialName
    ToVec4w(): PrivateScope, Public, HideBySig
    ToVec4i(): PrivateScope, Public, HideBySig
    ToVec4f(): PrivateScope, Public, HideBySig
    ToVec4d(): PrivateScope, Public, HideBySig
    Equals(Vec4s): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec4s, Vec4s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec4s, Vec4s): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec4w: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt16, UInt16, UInt16, UInt16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec4w,System.UInt16]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec4w]
  Fields:
    UInt16 Item0 : Public
    UInt16 Item1 : Public
    UInt16 Item2 : Public
    UInt16 Item3 : Public
  Properties:
    UInt16 Item [Int32] 'get set' : 
  Methods:
    Deconstruct(UInt16&(Out), UInt16&(Out), UInt16&(Out), UInt16&(Out)): PrivateScope, Public, HideBySig
    Add(Vec4w): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec4w): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec4w, Vec4w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec4w, Vec4w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec4w, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec4w, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, UInt16): PrivateScope, Public, HideBySig, SpecialName
    ToVec4s(): PrivateScope, Public, HideBySig
    ToVec4i(): PrivateScope, Public, HideBySig
    ToVec4f(): PrivateScope, Public, HideBySig
    ToVec4d(): PrivateScope, Public, HideBySig
    Equals(Vec4w): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec4w, Vec4w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec4w, Vec4w): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec6b: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Byte, Byte, Byte, Byte, Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec6b,System.Byte]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec6b]
  Fields:
    Byte Item0 : Public
    Byte Item1 : Public
    Byte Item2 : Public
    Byte Item3 : Public
    Byte Item4 : Public
    Byte Item5 : Public
  Properties:
    Byte Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Byte&(Out), Byte&(Out), Byte&(Out), Byte&(Out), Byte&(Out), Byte&(Out)): PrivateScope, Public, HideBySig
    Add(Vec6b): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec6b): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec6b, Vec6b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec6b, Vec6b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec6b, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec6b, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Byte): PrivateScope, Public, HideBySig, SpecialName
    ToVec6s(): PrivateScope, Public, HideBySig
    ToVec6w(): PrivateScope, Public, HideBySig
    ToVec6i(): PrivateScope, Public, HideBySig
    ToVec6f(): PrivateScope, Public, HideBySig
    ToVec6d(): PrivateScope, Public, HideBySig
    Equals(Vec6b): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec6b, Vec6b): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec6b, Vec6b): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec6d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec6d,System.Double]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec6d]
  Fields:
    Double Item0 : Public
    Double Item1 : Public
    Double Item2 : Public
    Double Item3 : Public
    Double Item4 : Public
    Double Item5 : Public
  Properties:
    Double Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Double&(Out), Double&(Out), Double&(Out), Double&(Out), Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    Add(Vec6d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec6d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec6d, Vec6d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec6d, Vec6d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec6d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec6d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Vec6d): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec6d, Vec6d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec6d, Vec6d): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec6f: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec6f,System.Single]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec6f]
  Fields:
    Single Item0 : Public
    Single Item1 : Public
    Single Item2 : Public
    Single Item3 : Public
    Single Item4 : Public
    Single Item5 : Public
  Properties:
    Single Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Single&(Out), Single&(Out), Single&(Out), Single&(Out), Single&(Out), Single&(Out)): PrivateScope, Public, HideBySig
    Add(Vec6f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec6f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec6f, Vec6f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec6f, Vec6f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec6f, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec6f, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Single): PrivateScope, Public, HideBySig, SpecialName
    ToVec6i(): PrivateScope, Public, HideBySig
    ToVec6d(): PrivateScope, Public, HideBySig
    Equals(Vec6f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec6f, Vec6f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec6f, Vec6f): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec6i: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec6i,System.Int32]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec6i]
  Fields:
    Int32 Item0 : Public
    Int32 Item1 : Public
    Int32 Item2 : Public
    Int32 Item3 : Public
    Int32 Item4 : Public
    Int32 Item5 : Public
  Properties:
    Int32 Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    Add(Vec6i): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec6i): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec6i, Vec6i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec6i, Vec6i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec6i, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec6i, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    ToVec6f(): PrivateScope, Public, HideBySig
    ToVec6d(): PrivateScope, Public, HideBySig
    Equals(Vec6i): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec6i, Vec6i): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec6i, Vec6i): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec6s: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int16, Int16, Int16, Int16, Int16, Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec6s,System.Int16]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec6s]
  Fields:
    Int16 Item0 : Public
    Int16 Item1 : Public
    Int16 Item2 : Public
    Int16 Item3 : Public
    Int16 Item4 : Public
    Int16 Item5 : Public
  Properties:
    Int16 Item [Int32] 'get set' : 
  Methods:
    Deconstruct(Int16&(Out), Int16&(Out), Int16&(Out), Int16&(Out), Int16&(Out), Int16&(Out)): PrivateScope, Public, HideBySig
    Add(Vec6s): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec6s): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec6s, Vec6s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec6s, Vec6s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec6s, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec6s, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Int16): PrivateScope, Public, HideBySig, SpecialName
    ToVec6w(): PrivateScope, Public, HideBySig
    ToVec6i(): PrivateScope, Public, HideBySig
    ToVec6f(): PrivateScope, Public, HideBySig
    ToVec6d(): PrivateScope, Public, HideBySig
    Equals(Vec6s): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec6s, Vec6s): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec6s, Vec6s): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.Vec6w: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.IVec`2[OpenCvSharp.Vec6w,System.UInt16]
    OpenCvSharp.IVec
    System.IEquatable`1[OpenCvSharp.Vec6w]
  Fields:
    UInt16 Item0 : Public
    UInt16 Item1 : Public
    UInt16 Item2 : Public
    UInt16 Item3 : Public
    UInt16 Item4 : Public
    UInt16 Item5 : Public
  Properties:
    UInt16 Item [Int32] 'get set' : 
  Methods:
    Deconstruct(UInt16&(Out), UInt16&(Out), UInt16&(Out), UInt16&(Out), UInt16&(Out), UInt16&(Out)): PrivateScope, Public, HideBySig
    Add(Vec6w): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Subtract(Vec6w): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Multiply(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Divide(Double): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Addition(Vec6w, Vec6w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vec6w, Vec6w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vec6w, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vec6w, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, UInt16): PrivateScope, Public, HideBySig, SpecialName
    ToVec6s(): PrivateScope, Public, HideBySig
    ToVec6i(): PrivateScope, Public, HideBySig
    ToVec6f(): PrivateScope, Public, HideBySig
    ToVec6d(): PrivateScope, Public, HideBySig
    Equals(Vec6w): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(Vec6w, Vec6w): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(Vec6w, Vec6w): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.SVD: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.InputArray, Flags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    U(): PrivateScope, Public, HideBySig
    W(): PrivateScope, Public, HideBySig
    Vt(): PrivateScope, Public, HideBySig
    Run(InputArray, Flags(Optional, HasDefault)): PrivateScope, Public, HideBySig
    BackSubst(InputArray, OutputArray): PrivateScope, Public, HideBySig
    Compute(InputArray, OutputArray, OutputArray, OutputArray, Flags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Compute(InputArray, OutputArray, Flags(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BackSubst(InputArray, InputArray, InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    SolveZ(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.AgastFeatureDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Properties:
    Int32 Threshold 'get set' : 
    Int32 NonmaxSuppression 'get set' : 
    DetectorType Type 'get set' : 
  Methods:
    Create(Int32(Optional, HasDefault), Boolean(Optional, HasDefault), DetectorType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_Threshold(): PrivateScope, Public, HideBySig, SpecialName
    set_Threshold(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NonmaxSuppression(): PrivateScope, Public, HideBySig, SpecialName
    set_NonmaxSuppression(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(DetectorType): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.AKAZE: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Properties:
    OpenCvSharp.AKAZEDescriptorType AKAZEDescriptorType 'get set' : 
    Int32 AKAZEDescriptorSize 'get set' : 
    Int32 AKAZEDescriptorChannels 'get set' : 
    Double Threshold 'get set' : 
    Int32 NOctaves 'get set' : 
    Int32 NOctaveLayers 'get set' : 
    OpenCvSharp.KAZEDiffusivityType DiffusivityType 'get set' : 
  Methods:
    Create(AKAZEDescriptorType(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Single(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), KAZEDiffusivityType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_AKAZEDescriptorType(): PrivateScope, Public, HideBySig, SpecialName
    set_AKAZEDescriptorType(AKAZEDescriptorType): PrivateScope, Public, HideBySig, SpecialName
    get_AKAZEDescriptorSize(): PrivateScope, Public, HideBySig, SpecialName
    set_AKAZEDescriptorSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AKAZEDescriptorChannels(): PrivateScope, Public, HideBySig, SpecialName
    set_AKAZEDescriptorChannels(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Threshold(): PrivateScope, Public, HideBySig, SpecialName
    set_Threshold(Double): PrivateScope, Public, HideBySig, SpecialName
    get_NOctaves(): PrivateScope, Public, HideBySig, SpecialName
    set_NOctaves(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NOctaveLayers(): PrivateScope, Public, HideBySig, SpecialName
    set_NOctaveLayers(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DiffusivityType(): PrivateScope, Public, HideBySig, SpecialName
    set_DiffusivityType(KAZEDiffusivityType): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.BFMatcher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DescriptorMatcher
    Void .ctor(OpenCvSharp.NormTypes, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsMaskSupported(): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.BOWImgDescriptorExtractor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(OpenCvSharp.Feature2D, OpenCvSharp.DescriptorMatcher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.DescriptorMatcher): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetVocabulary(Mat): PrivateScope, Public, HideBySig
    GetVocabulary(): PrivateScope, Public, HideBySig
    Compute(InputArray, KeyPoint[]&, OutputArray, Int32[][]&(Out), Mat(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Compute(InputArray, OutputArray, Int32[][]&(Out)): PrivateScope, Public, HideBySig
    Compute2(Mat, KeyPoint[]&, Mat): PrivateScope, Public, HideBySig
    DescriptorSize(): PrivateScope, Public, HideBySig
    DescriptorType(): PrivateScope, Public, HideBySig
Class OpenCvSharp.BOWKMeansTrainer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.BOWTrainer
    Void .ctor(Int32, System.Nullable`1[OpenCvSharp.TermCriteria], Int32, OpenCvSharp.KMeansFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Cluster(): PrivateScope, Public, Virtual, HideBySig
    Cluster(Mat): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.BOWTrainer: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
  Methods:
    Add(Mat): PrivateScope, Public, HideBySig
    GetDescriptors(): PrivateScope, Public, HideBySig
    DescriptorsCount(): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Cluster(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Cluster(Mat): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class OpenCvSharp.BRISK: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Methods:
    Create(Int32(Optional, HasDefault), Int32(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Create(IEnumerable`1, IEnumerable`1, Single(Optional, HasDefault), Single(Optional, HasDefault), IEnumerable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Create(Int32, Int32, IEnumerable`1, IEnumerable`1, Single(Optional, HasDefault), Single(Optional, HasDefault), IEnumerable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.DescriptorMatcher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Create(String): PrivateScope, Public, Static, HideBySig
    Add(IEnumerable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTrainDescriptors(): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Empty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsMaskSupported(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Train(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Match(Mat, Mat, Mat(Optional, HasDefault)): PrivateScope, Public, HideBySig
    KnnMatch(Mat, Mat, Int32, Mat(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    RadiusMatch(Mat, Mat, Single, Mat(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Match(Mat, Mat[](Optional, HasDefault)): PrivateScope, Public, HideBySig
    KnnMatch(Mat, Int32, Mat[](Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    RadiusMatch(Mat, Single, Mat[](Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
Struct OpenCvSharp.AKAZEDescriptorType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.AKAZEDescriptorType KAZEUpright = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.AKAZEDescriptorType KAZE = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.AKAZEDescriptorType MLDBUpright = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.AKAZEDescriptorType MLDB = 5 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.DrawMatchesFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.DrawMatchesFlags Default = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.DrawMatchesFlags DrawOverOutImg = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.DrawMatchesFlags NotDrawSinglePoints = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.DrawMatchesFlags DrawRichKeypoints = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.FASTType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.FASTType TYPE_5_8 = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.FASTType TYPE_7_12 = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.FASTType TYPE_9_16 = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.KAZEDiffusivityType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.KAZEDiffusivityType DiffPmG1 = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.KAZEDiffusivityType DiffPmG2 = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.KAZEDiffusivityType DiffWeickert = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.KAZEDiffusivityType DiffCharbonnier = 3 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ORBScoreType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ORBScoreType Fast = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ORBScoreType Harris = 0 : Public, Static, Literal, HasDefault
Class OpenCvSharp.FastFeatureDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Properties:
    Int32 Threshold 'get set' : 
    Boolean NonmaxSuppression 'get set' : 
    Int32 Type 'get set' : 
  Methods:
    Create(Int32(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_Threshold(): PrivateScope, Public, HideBySig, SpecialName
    set_Threshold(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NonmaxSuppression(): PrivateScope, Public, HideBySig, SpecialName
    set_NonmaxSuppression(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Int32): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.Feature2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Properties:
    Int32 DescriptorSize 'get ' : 
    Int32 DescriptorType 'get ' : 
    Int32 DefaultNorm 'get ' : 
  Methods:
    get_DescriptorSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DescriptorType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DefaultNorm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Empty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Detect(Mat, Mat(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Detect(InputArray, Mat(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Detect(IEnumerable`1, IEnumerable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Compute(InputArray, KeyPoint[]&, OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Compute(IEnumerable`1, KeyPoint[][]&, IEnumerable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DetectAndCompute(InputArray, InputArray, KeyPoint[]&(Out), OutputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(String): PrivateScope, Public, HideBySig
    Read(String): PrivateScope, Public, HideBySig
    GetDefaultName(): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.FlannBasedMatcher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DescriptorMatcher
    Void .ctor(OpenCvSharp.Flann.IndexParams, OpenCvSharp.Flann.SearchParams): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsMaskSupported(): PrivateScope, Public, Virtual, HideBySig
    Add(IEnumerable`1): PrivateScope, Public, Virtual, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig
    Train(): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.GFTTDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Properties:
    Int32 MaxFeatures 'get set' : 
    Double QualityLevel 'get set' : 
    Double MinDistance 'get set' : 
    Int32 BlockSize 'get set' : 
    Boolean HarrisDetector 'get set' : 
    Double K   'get set' : 
  Methods:
    Create(Int32(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault), Boolean(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_MaxFeatures(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxFeatures(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_QualityLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_QualityLevel(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MinDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_MinDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BlockSize(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_HarrisDetector(): PrivateScope, Public, HideBySig, SpecialName
    set_HarrisDetector(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_K(): PrivateScope, Public, HideBySig, SpecialName
    set_K(Double): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.KAZE: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Properties:
    OpenCvSharp.KAZEDiffusivityType Diffusivity 'get set' : 
    Boolean Extended 'get set' : 
    Int32 NOctaveLayers 'get set' : 
    Int32 NOctaves 'get set' : 
    Double Threshold 'get set' : 
    Boolean Upright 'get set' : 
  Methods:
    Create(Boolean(Optional, HasDefault), Boolean(Optional, HasDefault), Single(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), KAZEDiffusivityType(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_Diffusivity(): PrivateScope, Public, HideBySig, SpecialName
    set_Diffusivity(KAZEDiffusivityType): PrivateScope, Public, HideBySig, SpecialName
    get_Extended(): PrivateScope, Public, HideBySig, SpecialName
    set_Extended(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NOctaveLayers(): PrivateScope, Public, HideBySig, SpecialName
    set_NOctaveLayers(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NOctaves(): PrivateScope, Public, HideBySig, SpecialName
    set_NOctaves(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Threshold(): PrivateScope, Public, HideBySig, SpecialName
    set_Threshold(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Upright(): PrivateScope, Public, HideBySig, SpecialName
    set_Upright(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.KeyPointsFilter: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    RunByImageBorder(IEnumerable`1, Size, Int32): PrivateScope, Public, Static, HideBySig
    RunByKeypointSize(IEnumerable`1, Single, Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    RunByPixelsMask(IEnumerable`1, Mat): PrivateScope, Public, Static, HideBySig
    RemoveDuplicated(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    RemoveDuplicatedSorted(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    RetainBest(IEnumerable`1, Int32): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.MSER: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Properties:
    Int32 Delta 'get set' : 
    Int32 MinArea 'get set' : 
    Int32 MaxArea 'get set' : 
    Boolean Pass2Only 'get set' : 
  Methods:
    Create(Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_Delta(): PrivateScope, Public, HideBySig, SpecialName
    set_Delta(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MinArea(): PrivateScope, Public, HideBySig, SpecialName
    set_MinArea(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxArea(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxArea(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Pass2Only(): PrivateScope, Public, HideBySig, SpecialName
    set_Pass2Only(Boolean): PrivateScope, Public, HideBySig, SpecialName
    DetectRegions(InputArray, Point[][]&(Out), Rect[]&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.ORB: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Properties:
    Int32 MaxFeatures 'get set' : 
    Double ScaleFactor 'get set' : 
    Int32 NLevels 'get set' : 
    Int32 EdgeThreshold 'get set' : 
    Int32 FirstLevel 'get set' : 
    Int32 WTA_K 'get set' : 
    OpenCvSharp.ORBScoreType ScoreType 'get set' : 
    Int32 PatchSize 'get set' : 
    Int32 FastThreshold 'get set' : 
  Methods:
    Create(Int32(Optional, HasDefault), Single(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), ORBScoreType(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_MaxFeatures(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxFeatures(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    get_NLevels(): PrivateScope, Public, HideBySig, SpecialName
    set_NLevels(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_EdgeThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_EdgeThreshold(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FirstLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_FirstLevel(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_WTA_K(): PrivateScope, Public, HideBySig, SpecialName
    set_WTA_K(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ScoreType(): PrivateScope, Public, HideBySig, SpecialName
    set_ScoreType(ORBScoreType): PrivateScope, Public, HideBySig, SpecialName
    get_PatchSize(): PrivateScope, Public, HideBySig, SpecialName
    set_PatchSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FastThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_FastThreshold(Int32): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.SimpleBlobDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Methods:
    Create(Params(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.CvTrackbar: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableObject
  Properties:
    System.String TrackbarName 'get ' : 
    System.String WindowName 'get ' : 
    OpenCvSharp.TrackbarCallback Callback 'get ' : 
    Int32 Pos  'get set' : 
    Int32 Result 'get ' : 
  Methods:
    get_TrackbarName(): PrivateScope, Public, HideBySig, SpecialName
    get_WindowName(): PrivateScope, Public, HideBySig, SpecialName
    get_Callback(): PrivateScope, Public, HideBySig, SpecialName
    get_Pos(): PrivateScope, Public, HideBySig, SpecialName
    set_Pos(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Result(): PrivateScope, Public, HideBySig, SpecialName
    SetMax(Int32): PrivateScope, Public, HideBySig
    SetMin(Int32): PrivateScope, Public, HideBySig
Struct OpenCvSharp.ButtonType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ButtonType PushButton = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ButtonType Checkbox = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ButtonType Radiobox = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.MouseEventFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.MouseEventFlags LButton = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventFlags RButton = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventFlags MButton = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventFlags CtrlKey = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventFlags ShiftKey = 16 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventFlags AltKey = 32 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.MouseEventTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.MouseEventTypes MouseMove = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventTypes LButtonDown = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventTypes RButtonDown = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventTypes MButtonDown = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventTypes LButtonUp = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventTypes RButtonUp = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventTypes MButtonUp = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventTypes LButtonDoubleClick = 7 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventTypes RButtonDoubleClick = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventTypes MButtonDoubleClick = 9 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventTypes MouseWheel = 10 : Public, Static, Literal, HasDefault
    OpenCvSharp.MouseEventTypes MouseHWheel = 11 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.WindowFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.WindowFlags Normal = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.WindowFlags AutoSize = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.WindowFlags OpenGL = 4096 : Public, Static, Literal, HasDefault
    OpenCvSharp.WindowFlags FullScreen = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.WindowFlags FreeRatio = 256 : Public, Static, Literal, HasDefault
    OpenCvSharp.WindowFlags KeepRatio = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.WindowFlags GuiExpanded = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.WindowFlags GuiNormal = 16 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.WindowPropertyFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.WindowPropertyFlags Fullscreen = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.WindowPropertyFlags AutoSize = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.WindowPropertyFlags AspectRatio = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.WindowPropertyFlags OpenGL = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.WindowPropertyFlags Visible = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.WindowPropertyFlags Topmost = 5 : Public, Static, Literal, HasDefault
Class OpenCvSharp.MouseCallback: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(MouseEventTypes, Int32, Int32, MouseEventFlags, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(MouseEventTypes, Int32, Int32, MouseEventFlags, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.TrackbarCallback: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.TrackbarCallbackNative: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Int32, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Window: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, OpenCvSharp.WindowFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, OpenCvSharp.Mat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, OpenCvSharp.Mat, OpenCvSharp.WindowFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    OpenCvSharp.Mat Image 'get set' : 
    System.String Name 'get set' : 
  Methods:
    Close(): PrivateScope, Public, HideBySig
    DestroyAllWindows(): PrivateScope, Public, Static, HideBySig
    get_Image(): PrivateScope, Public, HideBySig, SpecialName
    set_Image(Mat): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    CreateTrackbar(String, TrackbarCallback): PrivateScope, Public, HideBySig
    CreateTrackbar(String, Int32, Int32, TrackbarCallback): PrivateScope, Public, HideBySig
    DisplayOverlay(String, Int32): PrivateScope, Public, HideBySig
    DisplayStatusBar(String, Int32): PrivateScope, Public, HideBySig
    GetProperty(WindowPropertyFlags): PrivateScope, Public, HideBySig
    Move(Int32, Int32): PrivateScope, Public, HideBySig
    Resize(Int32, Int32): PrivateScope, Public, HideBySig
    SetProperty(WindowPropertyFlags, Double): PrivateScope, Public, HideBySig
    ShowImage(Mat): PrivateScope, Public, HideBySig
    ShowImage(UMat): PrivateScope, Public, HideBySig
    GetHandle(): PrivateScope, Public, HideBySig
    WaitKey(Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    WaitKeyEx(Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ShowImages(Mat[]): PrivateScope, Public, Static, HideBySig
    ShowImages(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    GetWindowByName(String): PrivateScope, Public, Static, HideBySig
    SetMouseCallback(MouseCallback, IntPtr(Optional, HasDefault)): PrivateScope, Public, HideBySig
Struct OpenCvSharp.ConvertImageModes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ConvertImageModes None = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ConvertImageModes Flip = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ConvertImageModes SwapRB = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ImreadModes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ImreadModes Unchanged = -1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImreadModes Grayscale = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImreadModes Color = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImreadModes AnyDepth = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImreadModes AnyColor = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImreadModes LoadGdal = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImreadModes ReducedGrayscale2 = 16 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImreadModes ReducedColor2 = 17 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImreadModes ReducedGrayscale4 = 32 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImreadModes ReducedColor4 = 33 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImreadModes ReducedGrayscale8 = 64 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImreadModes ReducedColor8 = 65 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImreadModes IgnoreOrientation = 128 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ImwriteEXRTypeFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ImwriteEXRTypeFlags TypeHalf = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteEXRTypeFlags TypeFloat = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ImwriteFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ImwriteFlags JpegQuality = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags JpegProgressive = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags JpegOptimize = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags JpegRstInterval = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags JpegLumaQuality = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags JpegChromaQuality = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags PngCompression = 16 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags PngStrategy = 17 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags PngBilevel = 18 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags PxmBinary = 32 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags ExrType = 48 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags WebPQuality = 64 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags PamTupleType = 128 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags TiffResUnit = 256 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags TiffXDpi = 257 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags TiffYDpi = 258 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags TiffCompression = 259 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwriteFlags Jpeg2000CompressionX1000 = 272 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ImwritePAMFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ImwritePAMFlags FormatNull = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwritePAMFlags FormatBlackAndWhite = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwritePAMFlags FormatGrayscale = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwritePAMFlags FormatGrayscaleAlpha = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwritePAMFlags FormatRgb = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwritePAMFlags FormatRgbAlpha = 5 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ImwritePNGFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ImwritePNGFlags StrategyDefault = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwritePNGFlags StrategyFiltered = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwritePNGFlags StrategyHuffmanOnly = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwritePNGFlags StrategyRLE = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImwritePNGFlags StrategyFixed = 4 : Public, Static, Literal, HasDefault
Class OpenCvSharp.ImageEncodingParam: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(OpenCvSharp.ImwriteFlags, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.ImageEncodingParam]
  Properties:
    OpenCvSharp.ImwriteFlags EncodingId 'get ' : 
    Int32 Value 'get ' : 
  Methods:
    get_EncodingId(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(ImageEncodingParam, ImageEncodingParam): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(ImageEncodingParam, ImageEncodingParam): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(ImageEncodingParam): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    <Clone>$(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.CLAHE: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Properties:
    Double ClipLimit 'get set' : 
    OpenCvSharp.Size TilesGridSize 'get set' : 
  Methods:
    Create(Double(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Apply(InputArray, OutputArray): PrivateScope, Public, HideBySig
    get_ClipLimit(): PrivateScope, Public, HideBySig, SpecialName
    set_ClipLimit(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TilesGridSize(): PrivateScope, Public, HideBySig, SpecialName
    set_TilesGridSize(Size): PrivateScope, Public, HideBySig, SpecialName
    CollectGarbage(): PrivateScope, Public, HideBySig
Class OpenCvSharp.ConnectedComponents: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    System.Collections.Generic.IReadOnlyList`1[OpenCvSharp.ConnectedComponents+Blob] Blobs 'get ' : 
    OpenCvSharp.Internal.Util.ReadOnlyArray2D`1[System.Int32] Labels 'get ' : 
    Int32 LabelCount 'get set' : 
  Methods:
    get_Blobs(): PrivateScope, Public, HideBySig, SpecialName
    get_Labels(): PrivateScope, Public, HideBySig, SpecialName
    get_LabelCount(): PrivateScope, Public, HideBySig, SpecialName
    FilterByLabel(Mat, Mat, Int32): PrivateScope, Public, HideBySig
    FilterByLabels(Mat, Mat, IEnumerable`1): PrivateScope, Public, HideBySig
    FilterByBlob(Mat, Mat, Blob): PrivateScope, Public, HideBySig
    FilterByBlobs(Mat, Mat, IEnumerable`1): PrivateScope, Public, HideBySig
    RenderBlobs(Mat): PrivateScope, Public, HideBySig
    GetLargestBlob(): PrivateScope, Public, HideBySig
Struct OpenCvSharp.AdaptiveThresholdTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.AdaptiveThresholdTypes MeanC = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.AdaptiveThresholdTypes GaussianC = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ColorConversionCodes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ColorConversionCodes BGR2BGRA = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2RGBA = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGRA2BGR = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGBA2RGB = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2RGBA = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2BGRA = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGBA2BGR = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGRA2RGB = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2RGB = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2BGR = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGRA2RGBA = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGBA2BGRA = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2GRAY = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2GRAY = 7 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes GRAY2BGR = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes GRAY2RGB = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes GRAY2BGRA = 9 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes GRAY2RGBA = 9 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGRA2GRAY = 10 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGBA2GRAY = 11 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2BGR565 = 12 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2BGR565 = 13 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR5652BGR = 14 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR5652RGB = 15 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGRA2BGR565 = 16 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGBA2BGR565 = 17 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR5652BGRA = 18 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR5652RGBA = 19 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes GRAY2BGR565 = 20 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR5652GRAY = 21 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2BGR555 = 22 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2BGR555 = 23 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR5552BGR = 24 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR5552RGB = 25 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGRA2BGR555 = 26 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGBA2BGR555 = 27 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR5552BGRA = 28 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR5552RGBA = 29 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes GRAY2BGR555 = 30 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR5552GRAY = 31 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2XYZ = 32 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2XYZ = 33 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes XYZ2BGR = 34 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes XYZ2RGB = 35 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2YCrCb = 36 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2YCrCb = 37 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YCrCb2BGR = 38 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YCrCb2RGB = 39 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2HSV = 40 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2HSV = 41 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2Lab = 44 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2Lab = 45 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2Luv = 50 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2Luv = 51 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2HLS = 52 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2HLS = 53 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes HSV2BGR = 54 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes HSV2RGB = 55 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes Lab2BGR = 56 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes Lab2RGB = 57 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes Luv2BGR = 58 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes Luv2RGB = 59 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes HLS2BGR = 60 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes HLS2RGB = 61 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2HSV_FULL = 66 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2HSV_FULL = 67 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2HLS_FULL = 68 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2HLS_FULL = 69 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes HSV2BGR_FULL = 70 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes HSV2RGB_FULL = 71 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes HLS2BGR_FULL = 72 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes HLS2RGB_FULL = 73 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes LBGR2Lab = 74 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes LRGB2Lab = 75 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes LBGR2Luv = 76 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes LRGB2Luv = 77 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes Lab2LBGR = 78 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes Lab2LRGB = 79 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes Luv2LBGR = 80 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes Luv2LRGB = 81 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2YUV = 82 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2YUV = 83 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGR = 84 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGB = 85 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGB_NV12 = 90 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGR_NV12 = 91 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGB_NV21 = 92 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGR_NV21 = 93 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV420sp2RGB = 92 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV420sp2BGR = 93 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGBA_NV12 = 94 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGRA_NV12 = 95 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGBA_NV21 = 96 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGRA_NV21 = 97 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV420sp2RGBA = 96 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV420sp2BGRA = 97 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGB_YV12 = 98 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGR_YV12 = 99 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGB_IYUV = 100 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGR_IYUV = 101 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGB_I420 = 100 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGR_I420 = 101 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV420p2RGB = 98 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV420p2BGR = 99 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGBA_YV12 = 102 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGRA_YV12 = 103 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGBA_IYUV = 104 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGRA_IYUV = 105 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGBA_I420 = 104 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGRA_I420 = 105 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV420p2RGBA = 102 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV420p2BGRA = 103 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2GRAY_420 = 106 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2GRAY_NV21 = 106 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2GRAY_NV12 = 106 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2GRAY_YV12 = 106 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2GRAY_IYUV = 106 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2GRAY_I420 = 106 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV420sp2GRAY = 106 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV420p2GRAY = 106 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGB_UYVY = 107 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGR_UYVY = 108 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGB_Y422 = 107 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGR_Y422 = 108 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGB_UYNV = 107 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGR_UYNV = 108 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGBA_UYVY = 111 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGRA_UYVY = 112 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGBA_Y422 = 111 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGRA_Y422 = 112 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGBA_UYNV = 111 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGRA_UYNV = 112 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGB_YUY2 = 115 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGR_YUY2 = 116 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGB_YVYU = 117 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGR_YVYU = 118 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGB_YUYV = 115 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGR_YUYV = 116 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGB_YUNV = 115 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGR_YUNV = 116 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGBA_YUY2 = 119 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGRA_YUY2 = 120 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGBA_YVYU = 121 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGRA_YVYU = 122 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGBA_YUYV = 119 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGRA_YUYV = 120 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2RGBA_YUNV = 119 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2BGRA_YUNV = 120 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2GRAY_UYVY = 123 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2GRAY_YUY2 = 124 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2GRAY_Y422 = 123 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2GRAY_UYNV = 123 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2GRAY_YVYU = 124 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2GRAY_YUYV = 124 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes YUV2GRAY_YUNV = 124 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGBA2mRGBA = 125 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes mRGBA2RGBA = 126 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2YUV_I420 = 127 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2YUV_I420 = 128 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2YUV_IYUV = 127 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2YUV_IYUV = 128 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGBA2YUV_I420 = 129 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGRA2YUV_I420 = 130 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGBA2YUV_IYUV = 129 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGRA2YUV_IYUV = 130 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGB2YUV_YV12 = 131 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGR2YUV_YV12 = 132 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes RGBA2YUV_YV12 = 133 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BGRA2YUV_YV12 = 134 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerBG2BGR = 46 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerGB2BGR = 47 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerRG2BGR = 48 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerGR2BGR = 49 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerBG2RGB = 48 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerGB2RGB = 49 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerRG2RGB = 46 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerGR2RGB = 47 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerBG2GRAY = 86 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerGB2GRAY = 87 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerRG2GRAY = 88 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerGR2GRAY = 89 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerBG2BGR_VNG = 62 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerGB2BGR_VNG = 63 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerRG2BGR_VNG = 64 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerGR2BGR_VNG = 65 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerBG2RGB_VNG = 64 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerGB2RGB_VNG = 65 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerRG2RGB_VNG = 62 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerGR2RGB_VNG = 63 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerBG2BGR_EA = 135 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerGB2BGR_EA = 136 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerRG2BGR_EA = 137 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerGR2BGR_EA = 138 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerBG2RGB_EA = 137 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerGB2RGB_EA = 138 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerRG2RGB_EA = 135 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes BayerGR2RGB_EA = 136 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColorConversionCodes COLORCVT_MAX = 139 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ColormapTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ColormapTypes Autumn = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Bone = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Jet = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Winter = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Rainbow = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Ocean = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Summer = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Spring = 7 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Cool = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Hsv = 9 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Pink = 10 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Hot = 11 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Parula = 12 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Magma = 13 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Inferno = 14 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Plasma = 15 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Viridis = 16 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Cividis = 17 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Twilight = 18 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes TwilightShifted = 19 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes Turbo = 20 : Public, Static, Literal, HasDefault
    OpenCvSharp.ColormapTypes DeepGreen = 21 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ConnectedComponentsAlgorithmsTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ConnectedComponentsAlgorithmsTypes WU = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ConnectedComponentsAlgorithmsTypes Default = -1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ConnectedComponentsAlgorithmsTypes GRANA = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ConnectedComponentsAlgorithmsTypes BOLELLI = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ConnectedComponentsAlgorithmsTypes SAUF = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.ConnectedComponentsAlgorithmsTypes BBDT = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.ConnectedComponentsAlgorithmsTypes SPAGHETTI = 5 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ConnectedComponentsTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ConnectedComponentsTypes Left = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ConnectedComponentsTypes Top = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ConnectedComponentsTypes Width = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ConnectedComponentsTypes Height = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.ConnectedComponentsTypes Area = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ContourApproximationModes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ContourApproximationModes ApproxNone = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ContourApproximationModes ApproxSimple = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ContourApproximationModes ApproxTC89L1 = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.ContourApproximationModes ApproxTC89KCOS = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.DistanceTransformLabelTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.DistanceTransformLabelTypes CComp = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.DistanceTransformLabelTypes Pixel = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.DistanceTransformMasks: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.DistanceTransformMasks Mask3 = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.DistanceTransformMasks Mask5 = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.DistanceTransformMasks Precise = 0 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.DistanceTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.DistanceTypes User = -1 : Public, Static, Literal, HasDefault
    OpenCvSharp.DistanceTypes L1 = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.DistanceTypes L2 = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.DistanceTypes C = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.DistanceTypes L12 = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.DistanceTypes Fair = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.DistanceTypes Welsch = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.DistanceTypes Huber = 7 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.FlipMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.FlipMode X = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.FlipMode Y = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.FlipMode XY = -1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.FloodFillFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.FloodFillFlags Link4 = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.FloodFillFlags Link8 = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.FloodFillFlags FixedRange = 65536 : Public, Static, Literal, HasDefault
    OpenCvSharp.FloodFillFlags MaskOnly = 131072 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.GrabCutClasses: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.GrabCutClasses BGD = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.GrabCutClasses FGD = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.GrabCutClasses PR_BGD = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.GrabCutClasses PR_FGD = 3 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.GrabCutModes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.GrabCutModes InitWithRect = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.GrabCutModes InitWithMask = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.GrabCutModes Eval = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.HistCompMethods: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.HistCompMethods Correl = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.HistCompMethods Chisqr = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.HistCompMethods Intersect = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.HistCompMethods Bhattacharyya = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.HistCompMethods Hellinger = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.HistCompMethods ChisqrAlt = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.HistCompMethods KLDiv = 5 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.HoughModes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.HoughModes Standard = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.HoughModes Probabilistic = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.HoughModes MultiScale = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.HoughModes Gradient = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.HoughModes GradientAlt = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.InterpolationFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.InterpolationFlags Nearest = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.InterpolationFlags Linear = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.InterpolationFlags Cubic = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.InterpolationFlags Area = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.InterpolationFlags Lanczos4 = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.InterpolationFlags LinearExact = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.InterpolationFlags Max = 7 : Public, Static, Literal, HasDefault
    OpenCvSharp.InterpolationFlags WarpFillOutliers = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.InterpolationFlags WarpInverseMap = 16 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.LineSegmentDetectorModes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.LineSegmentDetectorModes RefineNone = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.LineSegmentDetectorModes RefineStd = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.LineSegmentDetectorModes RefineAdv = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.LineTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.LineTypes Link8 = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.LineTypes Link4 = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.LineTypes AntiAlias = 16 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.MarkerTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.MarkerTypes Cross = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.MarkerTypes TiltedCross = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.MarkerTypes Star = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.MarkerTypes Diamond = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.MarkerTypes Square = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.MarkerTypes TriangleUp = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.MarkerTypes TriangleDown = 6 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.MorphShapes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.MorphShapes Rect = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.MorphShapes Cross = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.MorphShapes Ellipse = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.MorphTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.MorphTypes Erode = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.MorphTypes Dilate = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.MorphTypes Open = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.MorphTypes Close = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.MorphTypes Gradient = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.MorphTypes TopHat = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.MorphTypes BlackHat = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.MorphTypes HitMiss = 7 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.PixelConnectivity: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.PixelConnectivity Connectivity4 = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.PixelConnectivity Connectivity8 = 8 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.RectanglesIntersectTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.RectanglesIntersectTypes None = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.RectanglesIntersectTypes Partial = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.RectanglesIntersectTypes Full = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.RetrievalModes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.RetrievalModes External = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.RetrievalModes List = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.RetrievalModes CComp = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.RetrievalModes Tree = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.RetrievalModes FloodFill = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ShapeMatchModes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ShapeMatchModes I1 = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ShapeMatchModes I2 = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ShapeMatchModes I3 = 3 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.TemplateMatchModes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.TemplateMatchModes SqDiff = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.TemplateMatchModes SqDiffNormed = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.TemplateMatchModes CCorr = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.TemplateMatchModes CCorrNormed = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.TemplateMatchModes CCoeff = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.TemplateMatchModes CCoeffNormed = 5 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ThresholdTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ThresholdTypes Binary = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ThresholdTypes BinaryInv = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.ThresholdTypes Trunc = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.ThresholdTypes Tozero = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.ThresholdTypes TozeroInv = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.ThresholdTypes Mask = 7 : Public, Static, Literal, HasDefault
    OpenCvSharp.ThresholdTypes Otsu = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.ThresholdTypes Triangle = 16 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.WarpPolarMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.WarpPolarMode Linear = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.WarpPolarMode Log = 256 : Public, Static, Literal, HasDefault
Class OpenCvSharp.GeneralizedHough: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Properties:
    Int32 CannyLowThresh 'get set' : 
    Int32 CannyHighThresh 'get set' : 
    Double MinDist 'get set' : 
    Double Dp  'get set' : 
    Int32 MaxBufferSize 'get set' : 
  Methods:
    get_CannyLowThresh(): PrivateScope, Public, HideBySig, SpecialName
    set_CannyLowThresh(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CannyHighThresh(): PrivateScope, Public, HideBySig, SpecialName
    set_CannyHighThresh(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MinDist(): PrivateScope, Public, HideBySig, SpecialName
    set_MinDist(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dp(): PrivateScope, Public, HideBySig, SpecialName
    set_Dp(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MaxBufferSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxBufferSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    SetTemplate(InputArray, Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetTemplate(InputArray, InputArray, InputArray, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Detect(InputArray, OutputArray, OutputArray(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Detect(InputArray, InputArray, InputArray, OutputArray, OutputArray(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.GeneralizedHoughBallard: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.GeneralizedHough
  Properties:
    Int32 Levels 'get set' : 
    Int32 VotesThreshold 'get set' : 
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    get_Levels(): PrivateScope, Public, HideBySig, SpecialName
    set_Levels(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_VotesThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_VotesThreshold(Int32): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.GeneralizedHoughGuil: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.GeneralizedHough
  Properties:
    Double Xi  'get set' : 
    Int32 Levels 'get set' : 
    Double AngleEpsilon 'get set' : 
    Double MinAngle 'get set' : 
    Double MaxAngle 'get set' : 
    Double AngleStep 'get set' : 
    Int32 AngleThresh 'get set' : 
    Double MinScale 'get set' : 
    Double MaxScale 'get set' : 
    Double ScaleStep 'get set' : 
    Int32 ScaleThresh 'get set' : 
    Int32 PosThresh 'get set' : 
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    get_Xi(): PrivateScope, Public, HideBySig, SpecialName
    set_Xi(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Levels(): PrivateScope, Public, HideBySig, SpecialName
    set_Levels(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AngleEpsilon(): PrivateScope, Public, HideBySig, SpecialName
    set_AngleEpsilon(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MinAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_MinAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MaxAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AngleStep(): PrivateScope, Public, HideBySig, SpecialName
    set_AngleStep(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AngleThresh(): PrivateScope, Public, HideBySig, SpecialName
    set_AngleThresh(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MinScale(): PrivateScope, Public, HideBySig, SpecialName
    set_MinScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MaxScale(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleStep(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleStep(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleThresh(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleThresh(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PosThresh(): PrivateScope, Public, HideBySig, SpecialName
    set_PosThresh(Int32): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.LineIterator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(OpenCvSharp.Mat, OpenCvSharp.Point, OpenCvSharp.Point, OpenCvSharp.PixelConnectivity, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[OpenCvSharp.LineIterator+Pixel]
    System.Collections.IEnumerable
  Properties:
    IntPtr Ptr 'get ' : 
    IntPtr Ptr0 'get ' : 
    Int32 Step 'get ' : 
    Int32 ElemSize 'get ' : 
    Int32 Err  'get ' : 
    Int32 Count 'get ' : 
    Int32 MinusDelta 'get ' : 
    Int32 PlusDelta 'get ' : 
    Int32 MinusStep 'get ' : 
    Int32 PlusStep 'get ' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Ptr(): PrivateScope, Public, HideBySig, SpecialName
    get_Ptr0(): PrivateScope, Public, HideBySig, SpecialName
    get_Step(): PrivateScope, Public, HideBySig, SpecialName
    get_ElemSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Err(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_MinusDelta(): PrivateScope, Public, HideBySig, SpecialName
    get_PlusDelta(): PrivateScope, Public, HideBySig, SpecialName
    get_MinusStep(): PrivateScope, Public, HideBySig, SpecialName
    get_PlusStep(): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.LineSegmentDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Create(LineSegmentDetectorModes(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Detect(InputArray, OutputArray, OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Detect(InputArray, Vec4f[]&(Out), Double[]&(Out), Double[]&(Out), Double[]&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DrawSegments(InputOutputArray, InputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CompareSegments(Size, InputArray, InputArray, InputOutputArray(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct OpenCvSharp.CircleSegment: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(OpenCvSharp.Point2f, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.CircleSegment]
  Fields:
    OpenCvSharp.Point2f Center : Public
    Single Radius : Public
  Methods:
    Equals(CircleSegment): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Equality(CircleSegment, CircleSegment): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(CircleSegment, CircleSegment): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.HierarchyIndex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Next 'get set' : 
    Int32 Previous 'get set' : 
    Int32 Child 'get set' : 
    Int32 Parent 'get set' : 
  Methods:
    get_Next(): PrivateScope, Public, HideBySig, SpecialName
    set_Next(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Previous(): PrivateScope, Public, HideBySig, SpecialName
    set_Previous(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Child(): PrivateScope, Public, HideBySig, SpecialName
    set_Child(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, HideBySig, SpecialName
    set_Parent(Int32): PrivateScope, Public, HideBySig, SpecialName
    FromVec4i(Vec4i): PrivateScope, Public, Static, HideBySig
    ToVec4i(): PrivateScope, Public, HideBySig
Class OpenCvSharp.Line2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Vx  'get ' : 
    Double Vy  'get ' : 
    Double X1  'get ' : 
    Double Y1  'get ' : 
  Methods:
    get_Vx(): PrivateScope, Public, HideBySig, SpecialName
    get_Vy(): PrivateScope, Public, HideBySig, SpecialName
    get_X1(): PrivateScope, Public, HideBySig, SpecialName
    get_Y1(): PrivateScope, Public, HideBySig, SpecialName
    GetVectorRadian(): PrivateScope, Public, HideBySig
    GetVectorAngle(): PrivateScope, Public, HideBySig
    Distance(Point): PrivateScope, Public, HideBySig
    Distance(Point2f): PrivateScope, Public, HideBySig
    Distance(Point2d): PrivateScope, Public, HideBySig
    Distance(Double, Double): PrivateScope, Public, HideBySig
    FitSize(Int32, Int32, Point&(Out), Point&(Out)): PrivateScope, Public, HideBySig
Class OpenCvSharp.Line3D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Vx  'get ' : 
    Double Vy  'get ' : 
    Double Vz  'get ' : 
    Double X1  'get ' : 
    Double Y1  'get ' : 
    Double Z1  'get ' : 
  Methods:
    get_Vx(): PrivateScope, Public, HideBySig, SpecialName
    get_Vy(): PrivateScope, Public, HideBySig, SpecialName
    get_Vz(): PrivateScope, Public, HideBySig, SpecialName
    get_X1(): PrivateScope, Public, HideBySig, SpecialName
    get_Y1(): PrivateScope, Public, HideBySig, SpecialName
    get_Z1(): PrivateScope, Public, HideBySig, SpecialName
    PerpendicularFoot(Point3f): PrivateScope, Public, HideBySig
    PerpendicularFoot(Point3d): PrivateScope, Public, HideBySig
    PerpendicularFoot(Double, Double, Double): PrivateScope, Public, HideBySig
    Distance(Point3f): PrivateScope, Public, HideBySig
    Distance(Point3d): PrivateScope, Public, HideBySig
    Distance(Double, Double, Double): PrivateScope, Public, HideBySig
Struct OpenCvSharp.LineSegmentPoint: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(OpenCvSharp.Point, OpenCvSharp.Point): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.LineSegmentPoint]
  Fields:
    OpenCvSharp.Point P1 : Public
    OpenCvSharp.Point P2 : Public
  Methods:
    Equals(LineSegmentPoint): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Equality(LineSegmentPoint, LineSegmentPoint): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(LineSegmentPoint, LineSegmentPoint): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    LineIntersection(LineSegmentPoint, LineSegmentPoint): PrivateScope, Public, Static, HideBySig
    LineIntersection(LineSegmentPoint): PrivateScope, Public, HideBySig
    SegmentIntersection(LineSegmentPoint, LineSegmentPoint): PrivateScope, Public, Static, HideBySig
    SegmentIntersection(LineSegmentPoint): PrivateScope, Public, HideBySig
    IntersectedSegments(LineSegmentPoint, LineSegmentPoint): PrivateScope, Public, Static, HideBySig
    IntersectedSegments(LineSegmentPoint): PrivateScope, Public, HideBySig
    IntersectedLineAndSegment(LineSegmentPoint, LineSegmentPoint): PrivateScope, Public, Static, HideBySig
    LineAndSegmentIntersection(LineSegmentPoint, LineSegmentPoint): PrivateScope, Public, Static, HideBySig
    Length(): PrivateScope, Public, HideBySig
    Offset(Int32, Int32): PrivateScope, Public, HideBySig
    Offset(Point): PrivateScope, Public, HideBySig
Struct OpenCvSharp.LineSegmentPolar: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.LineSegmentPolar]
  Fields:
    Single Rho : Public
    Single Theta : Public
  Methods:
    Equals(LineSegmentPolar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Equality(LineSegmentPolar, LineSegmentPolar): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(LineSegmentPolar, LineSegmentPolar): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    LineIntersection(LineSegmentPolar, LineSegmentPolar): PrivateScope, Public, Static, HideBySig
    LineIntersection(LineSegmentPolar): PrivateScope, Public, HideBySig
    ToSegmentPoint(Double): PrivateScope, Public, HideBySig
    ToSegmentPointX(Int32, Int32): PrivateScope, Public, HideBySig
    ToSegmentPointY(Int32, Int32): PrivateScope, Public, HideBySig
    XPosOfLine(Int32): PrivateScope, Public, HideBySig
    YPosOfLine(Int32): PrivateScope, Public, HideBySig
Class OpenCvSharp.Moments: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double, Double, Double, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.InputArray, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[,], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[,], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[OpenCvSharp.Point], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[OpenCvSharp.Point2f], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double M00 : Public
    Double M10 : Public
    Double M01 : Public
    Double M20 : Public
    Double M11 : Public
    Double M02 : Public
    Double M30 : Public
    Double M21 : Public
    Double M12 : Public
    Double M03 : Public
    Double Mu20 : Public
    Double Mu11 : Public
    Double Mu02 : Public
    Double Mu30 : Public
    Double Mu21 : Public
    Double Mu12 : Public
    Double Mu03 : Public
    Double Nu20 : Public
    Double Nu11 : Public
    Double Nu02 : Public
    Double Nu30 : Public
    Double Nu21 : Public
    Double Nu12 : Public
    Double Nu03 : Public
  Methods:
    HuMoments(): PrivateScope, Public, HideBySig
Class OpenCvSharp.Subdiv2D: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Rect): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 PTLOC_ERROR = -2 : Public, Static, Literal, HasDefault
    Int32 PTLOC_OUTSIDE_RECT = -1 : Public, Static, Literal, HasDefault
    Int32 PTLOC_INSIDE = 0 : Public, Static, Literal, HasDefault
    Int32 PTLOC_VERTEX = 1 : Public, Static, Literal, HasDefault
    Int32 PTLOC_ON_EDGE = 2 : Public, Static, Literal, HasDefault
    Int32 NEXT_AROUND_ORG = 0 : Public, Static, Literal, HasDefault
    Int32 NEXT_AROUND_DST = 34 : Public, Static, Literal, HasDefault
    Int32 PREV_AROUND_ORG = 17 : Public, Static, Literal, HasDefault
    Int32 PREV_AROUND_DST = 51 : Public, Static, Literal, HasDefault
    Int32 NEXT_AROUND_LEFT = 19 : Public, Static, Literal, HasDefault
    Int32 NEXT_AROUND_RIGHT = 49 : Public, Static, Literal, HasDefault
    Int32 PREV_AROUND_LEFT = 32 : Public, Static, Literal, HasDefault
    Int32 PREV_AROUND_RIGHT = 2 : Public, Static, Literal, HasDefault
  Methods:
    Release(): PrivateScope, Public, HideBySig
    InitDelaunay(Rect): PrivateScope, Public, HideBySig
    Insert(Point2f): PrivateScope, Public, HideBySig
    Insert(IEnumerable`1): PrivateScope, Public, HideBySig
    Locate(Point2f, Int32&(Out), Int32&(Out)): PrivateScope, Public, HideBySig
    FindNearest(Point2f, Point2f&(Out)): PrivateScope, Public, HideBySig
    GetEdgeList(): PrivateScope, Public, HideBySig
    GetLeadingEdgeList(): PrivateScope, Public, HideBySig
    GetTriangleList(): PrivateScope, Public, HideBySig
    GetVoronoiFacetList(IEnumerable`1, Point2f[][]&(Out), Point2f[]&(Out)): PrivateScope, Public, HideBySig
    GetVertex(Int32, Int32&(Out)): PrivateScope, Public, HideBySig
    GetEdge(Int32, NextEdgeType): PrivateScope, Public, HideBySig
    NextEdge(Int32): PrivateScope, Public, HideBySig
    RotateEdge(Int32, Int32): PrivateScope, Public, HideBySig
    SymEdge(Int32): PrivateScope, Public, HideBySig
    EdgeOrg(Int32, Point2f&(Out)): PrivateScope, Public, HideBySig
    EdgeDst(Int32, Point2f&(Out)): PrivateScope, Public, HideBySig
Struct OpenCvSharp.NextEdgeType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.NextEdgeType NEXT_AROUND_ORG = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.NextEdgeType NEXT_AROUND_DST = 34 : Public, Static, Literal, HasDefault
    OpenCvSharp.NextEdgeType PREV_AROUND_ORG = 17 : Public, Static, Literal, HasDefault
    OpenCvSharp.NextEdgeType PREV_AROUND_DST = 51 : Public, Static, Literal, HasDefault
    OpenCvSharp.NextEdgeType NEXT_AROUND_LEFT = 19 : Public, Static, Literal, HasDefault
    OpenCvSharp.NextEdgeType NEXT_AROUND_RIGHT = 49 : Public, Static, Literal, HasDefault
    OpenCvSharp.NextEdgeType PREV_AROUND_LEFT = 32 : Public, Static, Literal, HasDefault
    OpenCvSharp.NextEdgeType PREV_AROUND_RIGHT = 2 : Public, Static, Literal, HasDefault
Class OpenCvSharp.EM: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Fields:
    Int32 DEFAULT_NCLUSTERS = 5 : Public, Static, Literal, HasDefault
    Int32 DEFAULT_MAX_ITERS = 100 : Public, Static, Literal, HasDefault
  Properties:
    Int32 ClustersNumber 'get set' : 
    Int32 CovarianceMatrixType 'get set' : 
    OpenCvSharp.TermCriteria TermCriteria 'get set' : 
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Load(String): PrivateScope, Public, Static, HideBySig
    LoadFromString(String): PrivateScope, Public, Static, HideBySig
    get_ClustersNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_ClustersNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CovarianceMatrixType(): PrivateScope, Public, HideBySig, SpecialName
    set_CovarianceMatrixType(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TermCriteria(): PrivateScope, Public, HideBySig, SpecialName
    set_TermCriteria(TermCriteria): PrivateScope, Public, HideBySig, SpecialName
    GetWeights(): PrivateScope, Public, HideBySig
    GetMeans(): PrivateScope, Public, HideBySig
    GetCovs(): PrivateScope, Public, HideBySig
    TrainEM(InputArray, OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrainE(InputArray, InputArray, InputArray(Optional, HasDefault), InputArray(Optional, HasDefault), OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrainM(InputArray, InputArray, OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Predict2(InputArray, OutputArray(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct OpenCvSharp.EMTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.EMTypes CovMatSpherical = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.EMTypes CovMatDiagonal = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.EMTypes CovMatGeneric = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.EMTypes CovMatDefault = 0 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.EMStartStep: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.EMStartStep E = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.EMStartStep M = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.EMStartStep Auto = 0 : Public, Static, Literal, HasDefault
Class OpenCvSharp.CascadeClassifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Empty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Load(String): PrivateScope, Public, HideBySig
    Read(FileNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DetectMultiScale(Mat, Double(Optional, HasDefault), Int32(Optional, HasDefault), HaarDetectionTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DetectMultiScale(Mat, Int32[]&(Out), Double[]&(Out), Double(Optional, HasDefault), Int32(Optional, HasDefault), HaarDetectionTypes(Optional, HasDefault), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsOldFormatCascade(): PrivateScope, Public, HideBySig
    GetOriginalWindowSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFeatureType(): PrivateScope, Public, HideBySig
Struct OpenCvSharp.HaarDetectionTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.HaarDetectionTypes DoCannyPruning = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.HaarDetectionTypes ScaleImage = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.HaarDetectionTypes FindBiggestObject = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.HaarDetectionTypes DoRoughSearch = 8 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.HistogramNormType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.HistogramNormType L2Hys = 0 : Public, Static, Literal, HasDefault
Class OpenCvSharp.HOGDescriptor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Nullable`1[OpenCvSharp.Size], System.Nullable`1[OpenCvSharp.Size], System.Nullable`1[OpenCvSharp.Size], System.Nullable`1[OpenCvSharp.Size], Int32, Int32, Double, OpenCvSharp.HistogramNormType, Double, Boolean, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single[] DefaultPeopleDetector : Public, Static, InitOnly
    Single[] DaimlerPeopleDetector : Public, Static, InitOnly
    Int32 L2Hys = 0 : Public, Static, Literal, HasDefault
    Int32 DefaultNlevels = 64 : Public, Static, Literal, HasDefault
  Properties:
    OpenCvSharp.Size WinSize 'get set' : 
    OpenCvSharp.Size BlockSize 'get set' : 
    OpenCvSharp.Size BlockStride 'get set' : 
    OpenCvSharp.Size CellSize 'get set' : 
    Int32 Nbins 'get set' : 
    Int32 DerivAperture 'get set' : 
    Double WinSigma 'get set' : 
    OpenCvSharp.HistogramNormType HistogramNormType 'get set' : 
    Double L2HysThreshold 'get set' : 
    Boolean GammaCorrection 'get set' : 
    Int32 NLevels 'get set' : 
    Boolean SignedGradient 'get set' : 
  Methods:
    get_WinSize(): PrivateScope, Public, HideBySig, SpecialName
    set_WinSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_BlockSize(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_BlockStride(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockStride(Size): PrivateScope, Public, HideBySig, SpecialName
    get_CellSize(): PrivateScope, Public, HideBySig, SpecialName
    set_CellSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_Nbins(): PrivateScope, Public, HideBySig, SpecialName
    set_Nbins(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DerivAperture(): PrivateScope, Public, HideBySig, SpecialName
    set_DerivAperture(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_WinSigma(): PrivateScope, Public, HideBySig, SpecialName
    set_WinSigma(Double): PrivateScope, Public, HideBySig, SpecialName
    get_HistogramNormType(): PrivateScope, Public, HideBySig, SpecialName
    set_HistogramNormType(HistogramNormType): PrivateScope, Public, HideBySig, SpecialName
    get_L2HysThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_L2HysThreshold(Double): PrivateScope, Public, HideBySig, SpecialName
    get_GammaCorrection(): PrivateScope, Public, HideBySig, SpecialName
    set_GammaCorrection(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NLevels(): PrivateScope, Public, HideBySig, SpecialName
    set_NLevels(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SignedGradient(): PrivateScope, Public, HideBySig, SpecialName
    set_SignedGradient(Boolean): PrivateScope, Public, HideBySig, SpecialName
    GetDefaultPeopleDetector(): PrivateScope, Public, Static, HideBySig
    GetDaimlerPeopleDetector(): PrivateScope, Public, Static, HideBySig
    SetSVMDetector(Single[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Load(String, String(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Save(String, String(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDescriptorSize(): PrivateScope, Public, HideBySig
    CheckDetectorSize(): PrivateScope, Public, HideBySig
    GetWinSigma(): PrivateScope, Public, HideBySig
    Compute(Mat, Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), Point[](Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Detect(Mat, Double(Optional, HasDefault), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), Point[](Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Detect(Mat, Double[]&(Out), Double(Optional, HasDefault), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), Point[](Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DetectMultiScale(Mat, Double(Optional, HasDefault), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DetectMultiScale(Mat, Double[]&(Out), Double(Optional, HasDefault), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ComputeGradient(Mat, Mat, Mat, Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DetectROI(Mat, Point[], Point[]&(Out), Double[]&(Out), Double(Optional, HasDefault), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
    DetectMultiScaleROI(Mat, Rect[]&(Out), DetectionROI[]&(Out), Double(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GroupRectangles(Rect[]&(Out), Double[]&(Out), Int32, Double): PrivateScope, Public, HideBySig
Class OpenCvSharp.DetectionROI: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double, OpenCvSharp.Point[], Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Scale 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[OpenCvSharp.Point] Locations 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[System.Double] Confidences 'get ' : 
  Methods:
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    get_Locations(): PrivateScope, Public, HideBySig, SpecialName
    get_Confidences(): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.QRCodeDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetEpsX(Double): PrivateScope, Public, HideBySig
    SetEpsY(Double): PrivateScope, Public, HideBySig
    Detect(InputArray, Point2f[]&(Out)): PrivateScope, Public, HideBySig
    Decode(InputArray, IEnumerable`1, OutputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    DetectAndDecode(InputArray, Point2f[]&(Out), OutputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    DetectMulti(InputArray, Point2f[]&(Out)): PrivateScope, Public, HideBySig
    DecodeMulti(InputArray, IEnumerable`1, String[]&(Out)): PrivateScope, Public, HideBySig
    DecodeMulti(InputArray, IEnumerable`1, String[]&(Out), Mat[]&(Out)): PrivateScope, Public, HideBySig
Class OpenCvSharp.SimilarRects: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Compare(Double, Rect, Rect): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.CalibrateCRF: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Process(IEnumerable`1, OutputArray, IEnumerable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.CalibrateDebevec: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.CalibrateCRF
  Properties:
    Single Lambda 'get set' : 
    Single Samples 'get set' : 
    Boolean Random 'get set' : 
  Methods:
    Create(Int32(Optional, HasDefault), Single(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_Lambda(): PrivateScope, Public, HideBySig, SpecialName
    set_Lambda(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Samples(): PrivateScope, Public, HideBySig, SpecialName
    set_Samples(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Random(): PrivateScope, Public, HideBySig, SpecialName
    set_Random(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.CalibrateRobertson: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.CalibrateCRF
  Properties:
    Int32 MaxIter 'get set' : 
    Single Threshold 'get set' : 
    OpenCvSharp.Mat Radiance 'get ' : 
  Methods:
    Create(Int32(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_MaxIter(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxIter(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Threshold(): PrivateScope, Public, HideBySig, SpecialName
    set_Threshold(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Radiance(): PrivateScope, Public, HideBySig, SpecialName
Struct OpenCvSharp.EdgePreservingMethods: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.EdgePreservingMethods RecursFilter = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.EdgePreservingMethods NormconvFilter = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.InpaintMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.InpaintMethod NS = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.InpaintMethod Telea = 1 : Public, Static, Literal, HasDefault
Class OpenCvSharp.MergeDebevec: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :OpenCvSharp.MergeExposures
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.MergeExposures: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Process(IEnumerable`1, OutputArray, IEnumerable`1, InputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.MergeMertens: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :OpenCvSharp.MergeExposures
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Process(IEnumerable`1, OutputArray): PrivateScope, Public, HideBySig
Struct OpenCvSharp.SeamlessCloneMethods: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.SeamlessCloneMethods NormalClone = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.SeamlessCloneMethods MixedClone = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.SeamlessCloneMethods MonochromeTransfer = 3 : Public, Static, Literal, HasDefault
Class OpenCvSharp.Tonemap: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Properties:
    Single Gamma 'get set' : 
  Methods:
    Create(Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Process(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Gamma(): PrivateScope, Public, HideBySig, SpecialName
    set_Gamma(Single): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.TonemapDrago: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :OpenCvSharp.Tonemap
  Properties:
    Single Saturation 'get set' : 
    Single Bias 'get set' : 
  Methods:
    Create(Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_Saturation(): PrivateScope, Public, HideBySig, SpecialName
    set_Saturation(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Bias(): PrivateScope, Public, HideBySig, SpecialName
    set_Bias(Single): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.TonemapMantiuk: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :OpenCvSharp.Tonemap
  Properties:
    Single Scale 'get set' : 
    Single Saturation 'get set' : 
  Methods:
    Create(Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Saturation(): PrivateScope, Public, HideBySig, SpecialName
    set_Saturation(Single): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.TonemapReinhard: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :OpenCvSharp.Tonemap
  Properties:
    Single Intensity 'get set' : 
    Single LightAdaptation 'get set' : 
    Single ColorAdaptation 'get set' : 
  Methods:
    Create(Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_Intensity(): PrivateScope, Public, HideBySig, SpecialName
    set_Intensity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_LightAdaptation(): PrivateScope, Public, HideBySig, SpecialName
    set_LightAdaptation(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ColorAdaptation(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorAdaptation(Single): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.HausdorffDistanceExtractor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ShapeDistanceExtractor
  Properties:
    OpenCvSharp.DistanceTypes DistanceFlag 'get set' : 
    Single RankProportion 'get set' : 
  Methods:
    Create(DistanceTypes(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_DistanceFlag(): PrivateScope, Public, HideBySig, SpecialName
    set_DistanceFlag(DistanceTypes): PrivateScope, Public, HideBySig, SpecialName
    get_RankProportion(): PrivateScope, Public, HideBySig, SpecialName
    set_RankProportion(Single): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.ShapeContextDistanceExtractor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ShapeDistanceExtractor
  Properties:
    Int32 AngularBins 'get set' : 
    Int32 RadialBins 'get set' : 
    Single InnerRadius 'get set' : 
    Single OuterRadius 'get set' : 
    Boolean RotationInvariant 'get set' : 
    Single ShapeContextWeight 'get set' : 
    Single ImageAppearanceWeight 'get set' : 
    Single BendingEnergyWeight 'get set' : 
    Int32 Iterations 'get set' : 
    Single StdDev 'get set' : 
  Methods:
    Create(Int32(Optional, HasDefault), Int32(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_AngularBins(): PrivateScope, Public, HideBySig, SpecialName
    set_AngularBins(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_RadialBins(): PrivateScope, Public, HideBySig, SpecialName
    set_RadialBins(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_InnerRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerRadius(Single): PrivateScope, Public, HideBySig, SpecialName
    get_OuterRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_OuterRadius(Single): PrivateScope, Public, HideBySig, SpecialName
    get_RotationInvariant(): PrivateScope, Public, HideBySig, SpecialName
    set_RotationInvariant(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShapeContextWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ShapeContextWeight(Single): PrivateScope, Public, HideBySig, SpecialName
    get_ImageAppearanceWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ImageAppearanceWeight(Single): PrivateScope, Public, HideBySig, SpecialName
    get_BendingEnergyWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_BendingEnergyWeight(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Iterations(): PrivateScope, Public, HideBySig, SpecialName
    set_Iterations(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StdDev(): PrivateScope, Public, HideBySig, SpecialName
    set_StdDev(Single): PrivateScope, Public, HideBySig, SpecialName
    SetImages(InputArray, InputArray): PrivateScope, Public, HideBySig
    GetImages(OutputArray, OutputArray): PrivateScope, Public, HideBySig
Class OpenCvSharp.ShapeDistanceExtractor: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    ComputeDistance(InputArray, InputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Stitcher: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
  Fields:
    Int32 ORIG_RESOL = -1 : Public, Static, Literal, HasDefault
  Properties:
    Double RegistrationResol 'get set' : 
    Double SeamEstimationResol 'get set' : 
    Double CompositingResol 'get set' : 
    Double PanoConfidenceThresh 'get set' : 
    Boolean WaveCorrection 'get set' : 
    OpenCvSharp.Detail.WaveCorrectKind WaveCorrectKind 'get set' : 
    System.Collections.Generic.IReadOnlyList`1[System.Int32] Component 'get ' : 
    Double WorkScale 'get ' : 
  Methods:
    Create(Mode(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_RegistrationResol(): PrivateScope, Public, HideBySig, SpecialName
    set_RegistrationResol(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SeamEstimationResol(): PrivateScope, Public, HideBySig, SpecialName
    set_SeamEstimationResol(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CompositingResol(): PrivateScope, Public, HideBySig, SpecialName
    set_CompositingResol(Double): PrivateScope, Public, HideBySig, SpecialName
    get_PanoConfidenceThresh(): PrivateScope, Public, HideBySig, SpecialName
    set_PanoConfidenceThresh(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WaveCorrection(): PrivateScope, Public, HideBySig, SpecialName
    set_WaveCorrection(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WaveCorrectKind(): PrivateScope, Public, HideBySig, SpecialName
    set_WaveCorrectKind(WaveCorrectKind): PrivateScope, Public, HideBySig, SpecialName
    get_Component(): PrivateScope, Public, HideBySig, SpecialName
    get_WorkScale(): PrivateScope, Public, HideBySig, SpecialName
    EstimateTransform(InputArray): PrivateScope, Public, HideBySig
    EstimateTransform(InputArray, Rect[][]): PrivateScope, Public, HideBySig
    EstimateTransform(IEnumerable`1): PrivateScope, Public, HideBySig
    EstimateTransform(IEnumerable`1, Rect[][]): PrivateScope, Public, HideBySig
    ComposePanorama(OutputArray): PrivateScope, Public, HideBySig
    ComposePanorama(InputArray, OutputArray): PrivateScope, Public, HideBySig
    ComposePanorama(IEnumerable`1, OutputArray): PrivateScope, Public, HideBySig
    Stitch(InputArray, OutputArray): PrivateScope, Public, HideBySig
    Stitch(IEnumerable`1, OutputArray): PrivateScope, Public, HideBySig
    Stitch(InputArray, Rect[][], OutputArray): PrivateScope, Public, HideBySig
    Stitch(IEnumerable`1, Rect[][], OutputArray): PrivateScope, Public, HideBySig
Class OpenCvSharp.BroxOpticalFlow: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DenseOpticalFlowExt
  Properties:
    Double Alpha 'get set' : 
    Double Gamma 'get set' : 
    Double ScaleFactor 'get set' : 
    Int32 InnerIterations 'get set' : 
    Int32 OuterIterations 'get set' : 
    Int32 SolverIterations 'get set' : 
  Methods:
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Gamma(): PrivateScope, Public, HideBySig, SpecialName
    set_Gamma(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    get_InnerIterations(): PrivateScope, Public, HideBySig, SpecialName
    set_InnerIterations(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OuterIterations(): PrivateScope, Public, HideBySig, SpecialName
    set_OuterIterations(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SolverIterations(): PrivateScope, Public, HideBySig, SpecialName
    set_SolverIterations(Int32): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.DenseOpticalFlowExt: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    CreateFarneback(): PrivateScope, Public, Static, HideBySig
    CreateFarneback_CUDA(): PrivateScope, Public, Static, HideBySig
    CreateDualTVL1(): PrivateScope, Public, Static, HideBySig
    CreateDualTVL1_CUDA(): PrivateScope, Public, Static, HideBySig
    CreateBrox_CUDA(): PrivateScope, Public, Static, HideBySig
    CreatePyrLK_CUDA(): PrivateScope, Public, Static, HideBySig
    CollectGarbage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Calc(InputArray, InputArray, OutputArray, OutputArray(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.DualTVL1OpticalFlow: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DenseOpticalFlowExt
  Properties:
    Double Tau 'get set' : 
    Double Lambda 'get set' : 
    Double Theta 'get set' : 
    Int32 ScalesNumber 'get set' : 
    Int32 WarpingsNumber 'get set' : 
    Double Epsilon 'get set' : 
    Int32 Iterations 'get set' : 
    Boolean UseInitialFlow 'get set' : 
  Methods:
    get_Tau(): PrivateScope, Public, HideBySig, SpecialName
    set_Tau(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Lambda(): PrivateScope, Public, HideBySig, SpecialName
    set_Lambda(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Theta(): PrivateScope, Public, HideBySig, SpecialName
    set_Theta(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScalesNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_ScalesNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_WarpingsNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_WarpingsNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Epsilon(): PrivateScope, Public, HideBySig, SpecialName
    set_Epsilon(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Iterations(): PrivateScope, Public, HideBySig, SpecialName
    set_Iterations(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UseInitialFlow(): PrivateScope, Public, HideBySig, SpecialName
    set_UseInitialFlow(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.FarnebackOpticalFlow: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DenseOpticalFlowExt
  Properties:
    Double PyrScale 'get set' : 
    Int32 LevelsNumber 'get set' : 
    Int32 WindowSize 'get set' : 
    Int32 Iterations 'get set' : 
    Int32 PolyN 'get set' : 
    Double PolySigma 'get set' : 
    Int32 Flags 'get set' : 
  Methods:
    get_PyrScale(): PrivateScope, Public, HideBySig, SpecialName
    set_PyrScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LevelsNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_LevelsNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_WindowSize(): PrivateScope, Public, HideBySig, SpecialName
    set_WindowSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Iterations(): PrivateScope, Public, HideBySig, SpecialName
    set_Iterations(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PolyN(): PrivateScope, Public, HideBySig, SpecialName
    set_PolyN(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PolySigma(): PrivateScope, Public, HideBySig, SpecialName
    set_PolySigma(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(Int32): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.FrameSource: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateFrameSource_Empty(): PrivateScope, Public, Static, HideBySig
    CreateFrameSource_Video(String): PrivateScope, Public, Static, HideBySig
    CreateFrameSource_Video_CUDA(String): PrivateScope, Public, Static, HideBySig
    CreateFrameSource_Camera(Int32): PrivateScope, Public, Static, HideBySig
    NextFrame(OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.PyrLKOpticalFlow: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DenseOpticalFlowExt
  Properties:
    Int32 WindowSize 'get set' : 
    Int32 MaxLevel 'get set' : 
    Int32 Iterations 'get set' : 
  Methods:
    get_WindowSize(): PrivateScope, Public, HideBySig, SpecialName
    set_WindowSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxLevel(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Iterations(): PrivateScope, Public, HideBySig, SpecialName
    set_Iterations(Int32): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.SuperResolution: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Properties:
    Int32 Scale 'get set' : 
    Int32 Iterations 'get set' : 
    Double Tau 'get set' : 
    Double Lambda 'get set' : 
    Double Alpha 'get set' : 
    Int32 KernelSize 'get set' : 
    Int32 BlurKernelSize 'get set' : 
    Double BlurSigma 'get set' : 
    Int32 TemporalAreaRadius 'get set' : 
  Methods:
    CreateBTVL1(): PrivateScope, Public, Static, HideBySig
    CreateBTVL1_CUDA(): PrivateScope, Public, Static, HideBySig
    SetInput(FrameSource): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextFrame(OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CollectGarbage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Iterations(): PrivateScope, Public, HideBySig, SpecialName
    set_Iterations(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Tau(): PrivateScope, Public, HideBySig, SpecialName
    set_Tau(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Lambda(): PrivateScope, Public, HideBySig, SpecialName
    set_Lambda(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Double): PrivateScope, Public, HideBySig, SpecialName
    get_KernelSize(): PrivateScope, Public, HideBySig, SpecialName
    set_KernelSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BlurKernelSize(): PrivateScope, Public, HideBySig, SpecialName
    set_BlurKernelSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BlurSigma(): PrivateScope, Public, HideBySig, SpecialName
    set_BlurSigma(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TemporalAreaRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_TemporalAreaRadius(Int32): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.TextDetector: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
  Methods:
    Detect(InputArray, Rect[]&(Out), Single[]&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.TextDetectorCNN: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.TextDetector
  Methods:
    Create(String, String, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Create(String, String): PrivateScope, Public, Static, HideBySig
    Detect(InputArray, Rect[]&(Out), Single[]&(Out)): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.CameraChannels: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.CameraChannels OpenNI_DepthMap = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.CameraChannels OpenNI_PointCloudMap = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.CameraChannels OpenNI_DisparityMap = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.CameraChannels OpenNI_DisparityMap32F = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.CameraChannels OpenNI_ValidDepthMask = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.CapturePosAviRatio: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.CapturePosAviRatio Start = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.CapturePosAviRatio End = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.CaptureType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.CaptureType File = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.CaptureType Camera = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.CaptureType NotSpecified = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.VideoAccelerationType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.VideoAccelerationType None = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoAccelerationType Any = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoAccelerationType D3D11 = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoAccelerationType VAAPI = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoAccelerationType MFX = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.VideoCaptureAPIs: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.VideoCaptureAPIs ANY = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs V4L = 200 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs V4L2 = 200 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs FIREWIRE = 300 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs FIREWARE = 300 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs IEEE1394 = 300 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs DC1394 = 300 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs CMU1394 = 300 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs DSHOW = 700 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs PVAPI = 800 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs OPENNI = 900 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs OPENNI_ASUS = 910 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs ANDROID = 1000 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs XIAPI = 1100 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs AVFOUNDATION = 1200 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs GIGANETIX = 1300 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs MSMF = 1400 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs WINRT = 1410 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs INTELPERC = 1500 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs REALSENSE = 1500 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs OPENNI2 = 1600 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs OPENNI2_ASUS = 1610 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs GPHOTO2 = 1700 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs GSTREAMER = 1800 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs FFMPEG = 1900 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs IMAGES = 2000 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs ARAVIS = 2100 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs OPENCV_MJPEG = 2200 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs INTEL_MFX = 2300 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs XINE = 2400 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureAPIs CAP_UEYE = 2500 : Public, Static, Literal, HasDefault
Class OpenCvSharp.VideoCapturePara: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.VideoAccelerationType, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.VideoCapturePara]
  Properties:
    OpenCvSharp.VideoAccelerationType AccelerationType 'get ' : 
    Int32 HwDeviceIndex 'get ' : 
  Methods:
    get_AccelerationType(): PrivateScope, Public, HideBySig, SpecialName
    get_HwDeviceIndex(): PrivateScope, Public, HideBySig, SpecialName
    GetParameters(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(VideoCapturePara, VideoCapturePara): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(VideoCapturePara, VideoCapturePara): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(VideoCapturePara): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    <Clone>$(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct OpenCvSharp.VideoCaptureProperties: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.VideoCaptureProperties PosMsec = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties PosFrames = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties PosAviRatio = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties FrameWidth = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties FrameHeight = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Fps = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties FourCC = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties FrameCount = 7 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Format = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Mode = 9 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Brightness = 10 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Contrast = 11 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Saturation = 12 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Hue = 13 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Gain = 14 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Exposure = 15 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties ConvertRgb = 16 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties WhiteBalanceBlueU = 17 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Rectification = 18 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Monocrome = 19 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Sharpness = 20 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties AutoExposure = 21 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Gamma = 22 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Temperature = 23 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Trigger = 24 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties TriggerDelay = 25 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties WhiteBalanceRedV = 26 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Zoom = 27 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Focus = 28 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Guid = 29 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties IsoSpeed = 30 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties BackLight = 32 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Pan = 33 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Tilt = 34 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Roll = 35 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Iris = 36 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Settings = 37 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties BufferSize = 38 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties AutoFocus = 39 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties SARNum = 40 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties SARDen = 41 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Backend = 42 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Channel = 43 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties AutoWB = 44 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties WBTemperature = 45 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties CodecPixelFormat = 46 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties BitRate = 47 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OrientationMeta = 48 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OrientationAuto = 49 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties HwAcceleration = 50 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties HwDevice = 51 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OpenNI_OutputMode = 100 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OpenNI_FrameMaxDepth = 101 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OpenNI_Baseline = 102 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OpenNI_FocalLength = 103 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OpenNI_Registration = 104 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OPENNI_ApproxFrameSync = 105 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OPENNI_MaxBufferSize = 106 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OPENNI_CircleBuffer = 107 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OPENNI_MaxTimeDuration = 108 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OPENNI_GeneratorPresent = 109 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OPENNI2_Sync = 110 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OPENNI2_Mirror = 111 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OpenNI_DepthGenerator = -2147483648 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OpenNI_ImageGenerator = 1073741824 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OpenNI_ImageGeneratorPresent = 1073741933 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OpenNI_ImageGeneratorOutputMode = 1073741924 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OpenNI_DepthGeneratorBaseline = 1073741926 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OpenNI_DepthGeneratorFocalLength = 1073741927 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties OpenNI_DepthGeneratorRegistrationON = 1073741928 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties GStreamerQueueLength = 200 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties PvAPIMulticastIP = 300 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties PVAPI_FrameStartTriggerMode = 301 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties PVAPI_DecimationHorizontal = 302 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties PVAPI_DecimationVertical = 303 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties PVAPI_BinningX = 304 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties PVAPI_BinningY = 305 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties PVAPI_PixelFormat = 306 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_Downsampling = 400 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_DataFormat = 401 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_OffsetX = 402 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_OffsetY = 403 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_TrgSource = 404 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_TrgSoftware = 405 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_GpiSelector = 406 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_GpiMode = 407 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_GpiLevel = 408 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_GpoSelector = 409 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_GpoMode = 410 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_LedSelector = 411 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_LedMode = 412 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_ManualWB = 413 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_AutoWB = 414 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_AEAG = 415 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_ExpPriority = 416 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_AEMaxLimit = 417 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_AGMaxLimit = 418 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_AEAGLevel = 419 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties XI_Timeout = 420 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties IOS_DeviceFocus = 9001 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties IOS_DeviceExposure = 9002 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties IOS_DeviceFlash = 9003 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties IOS_DeviceWhiteBalance = 9004 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties IOS_DeviceTorch = 9005 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties GIGA_FrameOffsetX = 10001 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties GIGA_FrameOffsetY = 10002 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties GIGA_FrameWidthMax = 10003 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties GIGA_FrameHeightMax = 10004 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties GIGA_FrameSensWidth = 10005 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties GIGA_FrameSensHeight = 10006 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties INTELPERC_ProfileCount = 11001 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties INTELPERC_ProfileIdx = 11002 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties INTELPERC_DepthLowConfidenceValue = 11003 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties INTELPERC_DepthSaturationValue = 11004 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties INTELPERC_DepthConfidenceThreshold = 11005 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties INTELPERC_DepthFocalLengthHorz = 11006 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties INTELPERC_DepthFocalLengthVert = 11007 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties GPhoto2_Preview = 17001 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties GPhoto2_WidgetEnumerate = 17002 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties GPhoto2_ReloadConfig = 17003 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties GPhoto2_ReloadOnChange = 17004 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties GPhoto2_CollectMsgs = 17005 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties GPhoto2_FlushMsgs = 17006 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Speed = 17007 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties Aperture = 17008 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties ExposureProgram = 17009 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoCaptureProperties ViewFinder = 17010 : Public, Static, Literal, HasDefault
Class OpenCvSharp.VideoWriterPara: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.VideoAccelerationType, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.VideoWriterPara]
  Properties:
    OpenCvSharp.VideoAccelerationType AccelerationType 'get ' : 
    Int32 HwDeviceIndex 'get ' : 
  Methods:
    get_AccelerationType(): PrivateScope, Public, HideBySig, SpecialName
    get_HwDeviceIndex(): PrivateScope, Public, HideBySig, SpecialName
    GetParameters(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(VideoWriterPara, VideoWriterPara): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(VideoWriterPara, VideoWriterPara): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(VideoWriterPara): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    <Clone>$(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct OpenCvSharp.VideoWriterProperties: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.VideoWriterProperties Quality = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoWriterProperties FrameBytes = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoWriterProperties NStripes = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoWriterProperties IsColor = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoWriterProperties Depth = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoWriterProperties HwAcceleration = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.VideoWriterProperties HwDevice = 7 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.FourCC: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[OpenCvSharp.FourCC]
  Fields:
    Int32 Value : Public, InitOnly
    Int32 AVC : Public, Static, InitOnly
    Int32 CVID : Public, Static, InitOnly
    Int32 DIB : Public, Static, InitOnly
    Int32 DIV3 : Public, Static, InitOnly
    Int32 DIVX : Public, Static, InitOnly
    Int32 DV25 : Public, Static, InitOnly
    Int32 DV50 : Public, Static, InitOnly
    Int32 DVC : Public, Static, InitOnly
    Int32 DVH1 : Public, Static, InitOnly
    Int32 DVHD : Public, Static, InitOnly
    Int32 DVSD : Public, Static, InitOnly
    Int32 DVSL : Public, Static, InitOnly
    Int32 H261 : Public, Static, InitOnly
    Int32 H263 : Public, Static, InitOnly
    Int32 H264 : Public, Static, InitOnly
    Int32 H265 : Public, Static, InitOnly
    Int32 HEVC : Public, Static, InitOnly
    Int32 I420 : Public, Static, InitOnly
    Int32 IV32 : Public, Static, InitOnly
    Int32 IV41 : Public, Static, InitOnly
    Int32 IV50 : Public, Static, InitOnly
    Int32 IYUB : Public, Static, InitOnly
    Int32 IYUV : Public, Static, InitOnly
    Int32 MJPG : Public, Static, InitOnly
    Int32 M4S2 : Public, Static, InitOnly
    Int32 MP42 : Public, Static, InitOnly
    Int32 MP43 : Public, Static, InitOnly
    Int32 MP4S : Public, Static, InitOnly
    Int32 MP4V : Public, Static, InitOnly
    Int32 MPG1 : Public, Static, InitOnly
    Int32 MPG2 : Public, Static, InitOnly
    Int32 MPG4 : Public, Static, InitOnly
    Int32 MSS1 : Public, Static, InitOnly
    Int32 MSS2 : Public, Static, InitOnly
    Int32 MSVC : Public, Static, InitOnly
    Int32 JPEG : Public, Static, InitOnly
    Int32 PIM1 : Public, Static, InitOnly
    Int32 WMV1 : Public, Static, InitOnly
    Int32 WMV2 : Public, Static, InitOnly
    Int32 WMV3 : Public, Static, InitOnly
    Int32 WVC1 : Public, Static, InitOnly
    Int32 XVID : Public, Static, InitOnly
    Int32 X264 : Public, Static, InitOnly
    Int32 Default = -1 : Public, Static, Literal, HasDefault
    Int32 Prompt = -1 : Public, Static, Literal, HasDefault
  Methods:
    FromFourChars(Char, Char, Char, Char): PrivateScope, Public, Static, HideBySig
    FromString(String): PrivateScope, Public, Static, HideBySig
    op_Implicit(FourCC): PrivateScope, Public, Static, HideBySig, SpecialName
    ToInt32(): PrivateScope, Public, HideBySig
    op_Implicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    FromInt32(Int32): PrivateScope, Public, Static, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(FourCC): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    op_Equality(FourCC, FourCC): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(FourCC, FourCC): PrivateScope, Public, Static, HideBySig, SpecialName
Class OpenCvSharp.VideoCapture: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, OpenCvSharp.VideoCaptureAPIs): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, OpenCvSharp.VideoCaptureAPIs, Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, OpenCvSharp.VideoCaptureAPIs, OpenCvSharp.VideoCapturePara): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, OpenCvSharp.VideoCaptureAPIs): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, OpenCvSharp.VideoCaptureAPIs, Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, OpenCvSharp.VideoCaptureAPIs, OpenCvSharp.VideoCapturePara): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    OpenCvSharp.CaptureType CaptureType 'get ' : 
    Int32 PosMsec 'get set' : 
    Int32 PosFrames 'get set' : 
    OpenCvSharp.CapturePosAviRatio PosAviRatio 'get set' : 
    Int32 FrameWidth 'get set' : 
    Int32 FrameHeight 'get set' : 
    Double Fps 'get set' : 
    System.String FourCC 'get set' : 
    Int32 FrameCount 'get ' : 
    Double Brightness 'get set' : 
    Double Contrast 'get set' : 
    Double Saturation 'get set' : 
    Double Hue 'get set' : 
    Int32 Format 'get set' : 
    Int32 Mode 'get set' : 
    Double Gain 'get set' : 
    Double Exposure 'get set' : 
    Boolean ConvertRgb 'get set' : 
    Double WhiteBalanceBlueU 'get set' : 
    Double Rectification 'get set' : 
    Double Monocrome 'get set' : 
    Double Sharpness 'get set' : 
    Double AutoExposure 'get set' : 
    Double Gamma 'get set' : 
    Double Temperature 'get set' : 
    Double Trigger 'get set' : 
    Double TriggerDelay 'get set' : 
    Double WhiteBalanceRedV 'get set' : 
    Double Zoom 'get set' : 
    Double Focus 'get set' : 
    Double Guid 'get set' : 
    Double IsoSpeed 'get set' : 
    Double BackLight 'get set' : 
    Double Pan 'get set' : 
    Double Tilt 'get set' : 
    Double Roll 'get set' : 
    Double Iris 'get set' : 
    Double Settings 'get set' : 
    Double BufferSize 'get set' : 
    Boolean AutoFocus 'get set' : 
    Double OpenNI_OutputMode 'get set' : 
    Double OpenNI_FrameMaxDepth 'get set' : 
    Double OpenNI_Baseline 'get set' : 
    Double OpenNI_FocalLength 'get set' : 
    Double OpenNI_Registration 'get set' : 
    Double OpenNI_ImageGeneratorOutputMode 'get set' : 
    Double OpenNI_DepthGeneratorBaseline 'get set' : 
    Double OpenNI_DepthGeneratorFocalLength 'get set' : 
    Double OpenNI_DepthGeneratorRegistrationON 'get set' : 
    Double GStreamerQueueLength 'get set' : 
    Double PvAPIMulticastIP 'get set' : 
    Double XI_Downsampling 'get set' : 
    Double XI_DataFormat 'get ' : 
    Double XI_OffsetX 'get set' : 
    Double XI_OffsetY 'get set' : 
    Double XI_TrgSource 'get set' : 
    Double XI_TrgSoftware 'get set' : 
    Double XI_GpiSelector 'get set' : 
    Double XI_GpiMode 'get set' : 
    Double XI_GpiLevel 'get set' : 
    Double XI_GpoSelector 'get set' : 
    Double XI_GpoMode 'get set' : 
    Double XI_LedSelector 'get set' : 
    Double XI_LedMode 'get set' : 
    Double XI_ManualWB 'get set' : 
    Double XI_AutoWB 'get set' : 
    Double XI_AEAG 'get set' : 
    Double XI_ExpPriority 'get set' : 
    Double XI_AEMaxLimit 'get set' : 
    Double XI_AGMaxLimit 'get set' : 
    Double XI_AEAGLevel 'get set' : 
    Double XI_Timeout 'get set' : 
  Methods:
    set_XI_GpoSelector(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_GpoMode(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_GpoMode(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_LedSelector(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_LedSelector(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_LedMode(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_LedMode(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_ManualWB(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_ManualWB(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_AutoWB(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_AutoWB(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_AEAG(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_AEAG(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_ExpPriority(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_ExpPriority(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_AEMaxLimit(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_AEMaxLimit(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_AGMaxLimit(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_AGMaxLimit(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_AEAGLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_AEAGLevel(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_Timeout(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_Timeout(Double): PrivateScope, Public, HideBySig, SpecialName
    Open(String, VideoCaptureAPIs(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Open(Int32, VideoCaptureAPIs(Optional, HasDefault)): PrivateScope, Public, HideBySig
    IsOpened(): PrivateScope, Public, HideBySig
    Release(): PrivateScope, Public, HideBySig
    Grab(): PrivateScope, Public, HideBySig
    Retrieve(OutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Retrieve(OutputArray, CameraChannels): PrivateScope, Public, HideBySig
    Retrieve(Mat, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Retrieve(Mat, CameraChannels): PrivateScope, Public, HideBySig
    RetrieveMat(): PrivateScope, Public, HideBySig
    Read(OutputArray): PrivateScope, Public, HideBySig
    Read(Mat): PrivateScope, Public, HideBySig
    Set(VideoCaptureProperties, Double): PrivateScope, Public, HideBySig
    Set(Int32, Double): PrivateScope, Public, HideBySig
    Get(VideoCaptureProperties): PrivateScope, Public, HideBySig
    Get(Int32): PrivateScope, Public, HideBySig
    GetBackendName(): PrivateScope, Public, HideBySig
    SetExceptionMode(Boolean): PrivateScope, Public, HideBySig
    GetExceptionMode(): PrivateScope, Public, HideBySig
    WaitAny(IEnumerable`1, Int32[]&(Out), Int64(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FromCamera(Int32, VideoCaptureAPIs(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FromFile(String, VideoCaptureAPIs(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_CaptureType(): PrivateScope, Public, HideBySig, SpecialName
    get_PosMsec(): PrivateScope, Public, HideBySig, SpecialName
    set_PosMsec(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PosFrames(): PrivateScope, Public, HideBySig, SpecialName
    set_PosFrames(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PosAviRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_PosAviRatio(CapturePosAviRatio): PrivateScope, Public, HideBySig, SpecialName
    get_FrameWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_FrameWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FrameHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_FrameHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Fps(): PrivateScope, Public, HideBySig, SpecialName
    set_Fps(Double): PrivateScope, Public, HideBySig, SpecialName
    get_FourCC(): PrivateScope, Public, HideBySig, SpecialName
    set_FourCC(String): PrivateScope, Public, HideBySig, SpecialName
    get_FrameCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Brightness(): PrivateScope, Public, HideBySig, SpecialName
    set_Brightness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Contrast(): PrivateScope, Public, HideBySig, SpecialName
    set_Contrast(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Saturation(): PrivateScope, Public, HideBySig, SpecialName
    set_Saturation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Hue(): PrivateScope, Public, HideBySig, SpecialName
    set_Hue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    set_Mode(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Gain(): PrivateScope, Public, HideBySig, SpecialName
    set_Gain(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Exposure(): PrivateScope, Public, HideBySig, SpecialName
    set_Exposure(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ConvertRgb(): PrivateScope, Public, HideBySig, SpecialName
    set_ConvertRgb(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_WhiteBalanceBlueU(): PrivateScope, Public, HideBySig, SpecialName
    set_WhiteBalanceBlueU(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Rectification(): PrivateScope, Public, HideBySig, SpecialName
    set_Rectification(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Monocrome(): PrivateScope, Public, HideBySig, SpecialName
    set_Monocrome(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Sharpness(): PrivateScope, Public, HideBySig, SpecialName
    set_Sharpness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AutoExposure(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoExposure(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Gamma(): PrivateScope, Public, HideBySig, SpecialName
    set_Gamma(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Temperature(): PrivateScope, Public, HideBySig, SpecialName
    set_Temperature(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Trigger(): PrivateScope, Public, HideBySig, SpecialName
    set_Trigger(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TriggerDelay(): PrivateScope, Public, HideBySig, SpecialName
    set_TriggerDelay(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WhiteBalanceRedV(): PrivateScope, Public, HideBySig, SpecialName
    set_WhiteBalanceRedV(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Zoom(): PrivateScope, Public, HideBySig, SpecialName
    set_Zoom(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Focus(): PrivateScope, Public, HideBySig, SpecialName
    set_Focus(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Guid(): PrivateScope, Public, HideBySig, SpecialName
    set_Guid(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IsoSpeed(): PrivateScope, Public, HideBySig, SpecialName
    set_IsoSpeed(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BackLight(): PrivateScope, Public, HideBySig, SpecialName
    set_BackLight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Pan(): PrivateScope, Public, HideBySig, SpecialName
    set_Pan(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Tilt(): PrivateScope, Public, HideBySig, SpecialName
    set_Tilt(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Roll(): PrivateScope, Public, HideBySig, SpecialName
    set_Roll(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Iris(): PrivateScope, Public, HideBySig, SpecialName
    set_Iris(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Settings(): PrivateScope, Public, HideBySig, SpecialName
    set_Settings(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BufferSize(): PrivateScope, Public, HideBySig, SpecialName
    set_BufferSize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AutoFocus(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoFocus(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_OpenNI_OutputMode(): PrivateScope, Public, HideBySig, SpecialName
    set_OpenNI_OutputMode(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OpenNI_FrameMaxDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_OpenNI_FrameMaxDepth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OpenNI_Baseline(): PrivateScope, Public, HideBySig, SpecialName
    set_OpenNI_Baseline(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OpenNI_FocalLength(): PrivateScope, Public, HideBySig, SpecialName
    set_OpenNI_FocalLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OpenNI_Registration(): PrivateScope, Public, HideBySig, SpecialName
    set_OpenNI_Registration(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OpenNI_ImageGeneratorOutputMode(): PrivateScope, Public, HideBySig, SpecialName
    set_OpenNI_ImageGeneratorOutputMode(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OpenNI_DepthGeneratorBaseline(): PrivateScope, Public, HideBySig, SpecialName
    set_OpenNI_DepthGeneratorBaseline(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OpenNI_DepthGeneratorFocalLength(): PrivateScope, Public, HideBySig, SpecialName
    set_OpenNI_DepthGeneratorFocalLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OpenNI_DepthGeneratorRegistrationON(): PrivateScope, Public, HideBySig, SpecialName
    set_OpenNI_DepthGeneratorRegistrationON(Double): PrivateScope, Public, HideBySig, SpecialName
    get_GStreamerQueueLength(): PrivateScope, Public, HideBySig, SpecialName
    set_GStreamerQueueLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_PvAPIMulticastIP(): PrivateScope, Public, HideBySig, SpecialName
    set_PvAPIMulticastIP(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_Downsampling(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_Downsampling(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_DataFormat(): PrivateScope, Public, HideBySig, SpecialName
    get_XI_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_OffsetX(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_OffsetY(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_TrgSource(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_TrgSource(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_TrgSoftware(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_TrgSoftware(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_GpiSelector(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_GpiSelector(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_GpiMode(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_GpiMode(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_GpiLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_XI_GpiLevel(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XI_GpoSelector(): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.VideoWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, OpenCvSharp.FourCC, Double, OpenCvSharp.Size, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, OpenCvSharp.VideoCaptureAPIs, OpenCvSharp.FourCC, Double, OpenCvSharp.Size, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, OpenCvSharp.FourCC, Double, OpenCvSharp.Size, Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, OpenCvSharp.FourCC, Double, OpenCvSharp.Size, OpenCvSharp.VideoWriterPara): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, OpenCvSharp.VideoCaptureAPIs, OpenCvSharp.FourCC, Double, OpenCvSharp.Size, Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, OpenCvSharp.VideoCaptureAPIs, OpenCvSharp.FourCC, Double, OpenCvSharp.Size, OpenCvSharp.VideoWriterPara): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FileName 'get set' : 
    Double Fps 'get set' : 
    OpenCvSharp.Size FrameSize 'get set' : 
    Boolean IsColor 'get set' : 
  Methods:
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    get_Fps(): PrivateScope, Public, HideBySig, SpecialName
    get_FrameSize(): PrivateScope, Public, HideBySig, SpecialName
    get_IsColor(): PrivateScope, Public, HideBySig, SpecialName
    Open(String, FourCC, Double, Size, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Open(String, VideoCaptureAPIs, FourCC, Double, Size, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    IsOpened(): PrivateScope, Public, HideBySig
    Release(): PrivateScope, Public, HideBySig
    Write(InputArray): PrivateScope, Public, HideBySig
    Set(VideoWriterProperties, Double): PrivateScope, Public, HideBySig
    Get(VideoWriterProperties): PrivateScope, Public, HideBySig
    FourCC(Char, Char, Char, Char): PrivateScope, Public, Static, HideBySig
    FourCC(String): PrivateScope, Public, Static, HideBySig
    GetBackendName(): PrivateScope, Public, HideBySig
Class OpenCvSharp.BackgroundSubtractor: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Apply(InputArray, OutputArray, Double(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBackgroundImage(OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.BackgroundSubtractorKNN: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.BackgroundSubtractor
  Properties:
    Int32 History 'get set' : 
    Int32 NSamples 'get set' : 
    Double Dist2Threshold 'get set' : 
    Int32 KNNSamples 'get set' : 
    Boolean DetectShadows 'get set' : 
    Int32 ShadowValue 'get set' : 
    Double ShadowThreshold 'get set' : 
  Methods:
    Create(Int32(Optional, HasDefault), Double(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_History(): PrivateScope, Public, HideBySig, SpecialName
    set_History(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NSamples(): PrivateScope, Public, HideBySig, SpecialName
    set_NSamples(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dist2Threshold(): PrivateScope, Public, HideBySig, SpecialName
    set_Dist2Threshold(Double): PrivateScope, Public, HideBySig, SpecialName
    get_KNNSamples(): PrivateScope, Public, HideBySig, SpecialName
    set_KNNSamples(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DetectShadows(): PrivateScope, Public, HideBySig, SpecialName
    set_DetectShadows(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShadowValue(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadowValue(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ShadowThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadowThreshold(Double): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.BackgroundSubtractorMOG2: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.BackgroundSubtractor
  Properties:
    Int32 History 'get set' : 
    Int32 NMixtures 'get set' : 
    Double BackgroundRatio 'get set' : 
    Double VarThreshold 'get set' : 
    Double VarThresholdGen 'get set' : 
    Double VarInit 'get set' : 
    Double VarMin 'get set' : 
    Double VarMax 'get set' : 
    Double ComplexityReductionThreshold 'get set' : 
    Boolean DetectShadows 'get set' : 
    Int32 ShadowValue 'get set' : 
    Double ShadowThreshold 'get set' : 
  Methods:
    Create(Int32(Optional, HasDefault), Double(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_History(): PrivateScope, Public, HideBySig, SpecialName
    set_History(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NMixtures(): PrivateScope, Public, HideBySig, SpecialName
    set_NMixtures(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundRatio(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VarThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_VarThreshold(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VarThresholdGen(): PrivateScope, Public, HideBySig, SpecialName
    set_VarThresholdGen(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VarInit(): PrivateScope, Public, HideBySig, SpecialName
    set_VarInit(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VarMin(): PrivateScope, Public, HideBySig, SpecialName
    set_VarMin(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VarMax(): PrivateScope, Public, HideBySig, SpecialName
    set_VarMax(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ComplexityReductionThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_ComplexityReductionThreshold(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DetectShadows(): PrivateScope, Public, HideBySig, SpecialName
    set_DetectShadows(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ShadowValue(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadowValue(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ShadowThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadowThreshold(Double): PrivateScope, Public, HideBySig, SpecialName
Struct OpenCvSharp.MotionTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.MotionTypes Translation = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.MotionTypes Euclidean = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.MotionTypes Affine = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.MotionTypes Homography = 3 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.OpticalFlowFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.OpticalFlowFlags None = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.OpticalFlowFlags PyrAReady = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.OpticalFlowFlags PyrBReady = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.OpticalFlowFlags UseInitialFlow = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.OpticalFlowFlags LkGetMinEigenvals = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.OpticalFlowFlags FarnebackGaussian = 256 : Public, Static, Literal, HasDefault
Class OpenCvSharp.KalmanFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    OpenCvSharp.Mat StatePre 'get set' : 
    OpenCvSharp.Mat StatePost 'get set' : 
    OpenCvSharp.Mat TransitionMatrix 'get set' : 
    OpenCvSharp.Mat ControlMatrix 'get set' : 
    OpenCvSharp.Mat MeasurementMatrix 'get set' : 
    OpenCvSharp.Mat ProcessNoiseCov 'get set' : 
    OpenCvSharp.Mat MeasurementNoiseCov 'get set' : 
    OpenCvSharp.Mat ErrorCovPre 'get set' : 
    OpenCvSharp.Mat Gain 'get set' : 
    OpenCvSharp.Mat ErrorCovPost 'get set' : 
  Methods:
    get_StatePre(): PrivateScope, Public, HideBySig, SpecialName
    set_StatePre(Mat): PrivateScope, Public, HideBySig, SpecialName
    get_StatePost(): PrivateScope, Public, HideBySig, SpecialName
    set_StatePost(Mat): PrivateScope, Public, HideBySig, SpecialName
    get_TransitionMatrix(): PrivateScope, Public, HideBySig, SpecialName
    set_TransitionMatrix(Mat): PrivateScope, Public, HideBySig, SpecialName
    get_ControlMatrix(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlMatrix(Mat): PrivateScope, Public, HideBySig, SpecialName
    get_MeasurementMatrix(): PrivateScope, Public, HideBySig, SpecialName
    set_MeasurementMatrix(Mat): PrivateScope, Public, HideBySig, SpecialName
    get_ProcessNoiseCov(): PrivateScope, Public, HideBySig, SpecialName
    set_ProcessNoiseCov(Mat): PrivateScope, Public, HideBySig, SpecialName
    get_MeasurementNoiseCov(): PrivateScope, Public, HideBySig, SpecialName
    set_MeasurementNoiseCov(Mat): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorCovPre(): PrivateScope, Public, HideBySig, SpecialName
    set_ErrorCovPre(Mat): PrivateScope, Public, HideBySig, SpecialName
    get_Gain(): PrivateScope, Public, HideBySig, SpecialName
    set_Gain(Mat): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorCovPost(): PrivateScope, Public, HideBySig, SpecialName
    set_ErrorCovPost(Mat): PrivateScope, Public, HideBySig, SpecialName
    Init(Int32, Int32, Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Predict(Mat(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Correct(Mat): PrivateScope, Public, HideBySig
Class OpenCvSharp.Tracker: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Init(Mat, Rect): PrivateScope, Public, HideBySig
    Update(Mat, Rect&): PrivateScope, Public, HideBySig
Class OpenCvSharp.TrackerGOTURN: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Tracker
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(Params): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.TrackerMIL: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Tracker
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(Params): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.WeChatQRCode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
  Methods:
    Create(String, String, String, String): PrivateScope, Public, Static, HideBySig
    DetectAndDecode(InputArray, Mat[]&(Out), String[]&(Out)): PrivateScope, Public, HideBySig
Class OpenCvSharp.RidgeDetectionFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Create(Nullable`1(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Nullable`1(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetRidgeFilteredImage(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.XPhoto.CvXPhoto: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Bm3dDenoising(InputArray, InputOutputArray, OutputArray, Single(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Single(Optional, HasDefault), NormTypes(Optional, HasDefault), Bm3dSteps(Optional, HasDefault), TransformTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Bm3dDenoising(InputArray, OutputArray, Single(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Single(Optional, HasDefault), NormTypes(Optional, HasDefault), Bm3dSteps(Optional, HasDefault), TransformTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DctDenoising(Mat, Mat, Double, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Inpaint(Mat, Mat, Mat, InpaintTypes): PrivateScope, Public, Static, HideBySig
    OilPainting(InputArray, OutputArray, Int32, Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ApplyChannelGains(InputArray, OutputArray, Single, Single, Single): PrivateScope, Public, Static, HideBySig
    CreateGrayworldWB(): PrivateScope, Public, Static, HideBySig
    CreateLearningBasedWB(String): PrivateScope, Public, Static, HideBySig
    CreateSimpleWB(): PrivateScope, Public, Static, HideBySig
Struct OpenCvSharp.XPhoto.Bm3dSteps: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.XPhoto.Bm3dSteps STEPALL = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.XPhoto.Bm3dSteps STEP1 = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.XPhoto.Bm3dSteps STEP2 = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.XPhoto.InpaintTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.XPhoto.InpaintTypes SHIFTMAP = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.XPhoto.InpaintTypes FSR_BEST = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.XPhoto.InpaintTypes FSR_FAST = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.XPhoto.TransformTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.XPhoto.TransformTypes HAAR = 0 : Public, Static, Literal, HasDefault
Class OpenCvSharp.XPhoto.GrayworldWB: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.XPhoto.WhiteBalancer
  Properties:
    Single SaturationThreshold 'get set' : 
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    get_SaturationThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_SaturationThreshold(Single): PrivateScope, Public, HideBySig, SpecialName
    BalanceWhite(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.XPhoto.LearningBasedWB: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.XPhoto.WhiteBalancer
  Properties:
    Int32 HistBinNum 'get set' : 
    Int32 RangeMaxVal 'get set' : 
    Single SaturationThreshold 'get set' : 
  Methods:
    Create(String): PrivateScope, Public, Static, HideBySig
    get_HistBinNum(): PrivateScope, Public, HideBySig, SpecialName
    set_HistBinNum(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_RangeMaxVal(): PrivateScope, Public, HideBySig, SpecialName
    set_RangeMaxVal(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SaturationThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_SaturationThreshold(Single): PrivateScope, Public, HideBySig, SpecialName
    BalanceWhite(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig
    ExtractSimpleFeatures(InputArray, OutputArray): PrivateScope, Public, HideBySig
Class OpenCvSharp.XPhoto.SimpleWB: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.XPhoto.WhiteBalancer
  Properties:
    Single InputMax 'get set' : 
    Single InputMin 'get set' : 
    Single OutputMax 'get set' : 
    Single OutputMin 'get set' : 
    Single P   'get set' : 
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    get_InputMax(): PrivateScope, Public, HideBySig, SpecialName
    set_InputMax(Single): PrivateScope, Public, HideBySig, SpecialName
    get_InputMin(): PrivateScope, Public, HideBySig, SpecialName
    set_InputMin(Single): PrivateScope, Public, HideBySig, SpecialName
    get_OutputMax(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputMax(Single): PrivateScope, Public, HideBySig, SpecialName
    get_OutputMin(): PrivateScope, Public, HideBySig, SpecialName
    set_OutputMin(Single): PrivateScope, Public, HideBySig, SpecialName
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    set_P(Single): PrivateScope, Public, HideBySig, SpecialName
    BalanceWhite(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.XPhoto.TonemapDurand: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :OpenCvSharp.Tonemap
  Properties:
    Single Saturation 'get set' : 
    Single Contrast 'get set' : 
    Single SigmaSpace 'get set' : 
    Single SigmaColor 'get set' : 
  Methods:
    Create(Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_Saturation(): PrivateScope, Public, HideBySig, SpecialName
    set_Saturation(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Contrast(): PrivateScope, Public, HideBySig, SpecialName
    set_Contrast(Single): PrivateScope, Public, HideBySig, SpecialName
    get_SigmaSpace(): PrivateScope, Public, HideBySig, SpecialName
    set_SigmaSpace(Single): PrivateScope, Public, HideBySig, SpecialName
    get_SigmaColor(): PrivateScope, Public, HideBySig, SpecialName
    set_SigmaColor(Single): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.XPhoto.WhiteBalancer: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    BalanceWhite(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class OpenCvSharp.XImgProc.CvXImgProc: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    NiblackThreshold(InputArray, OutputArray, Double, ThresholdTypes, Int32, Double, LocalBinarizationMethods(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Thinning(InputArray, OutputArray, ThinningTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    AnisotropicDiffusion(InputArray, OutputArray, Single, Single, Int32): PrivateScope, Public, Static, HideBySig
    BrightEdges(Mat, Mat, Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateQuaternionImage(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    QConj(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    QUnitary(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    QMultiply(InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    QDft(InputArray, OutputArray, DftFlags, Boolean): PrivateScope, Public, Static, HideBySig
    ColorMatchTemplate(InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    GradientDericheY(InputArray, OutputArray, Double, Double): PrivateScope, Public, Static, HideBySig
    GradientDericheX(InputArray, OutputArray, Double, Double): PrivateScope, Public, Static, HideBySig
    CreateEdgeBoxes(Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Int32(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateDTFilter(InputArray, Double, Double, EdgeAwareFiltersList(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DTFilter(InputArray, InputArray, OutputArray, Double, Double, EdgeAwareFiltersList(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateGuidedFilter(InputArray, Int32, Double): PrivateScope, Public, Static, HideBySig
    GuidedFilter(InputArray, InputArray, OutputArray, Int32, Double, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateAMFilter(Double, Double, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    AMFilter(InputArray, InputArray, OutputArray, Double, Double, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    JointBilateralFilter(InputArray, InputArray, OutputArray, Int32, Double, Double, BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BilateralTextureFilter(InputArray, OutputArray, Int32(Optional, HasDefault), Int32(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    RollingGuidanceFilter(InputArray, OutputArray, Int32(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault), BorderTypes(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FastBilateralSolverFilter(InputArray, InputArray, InputArray, OutputArray, Double(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateFastGlobalSmootherFilter(InputArray, Double, Double, Double(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    FastGlobalSmootherFilter(InputArray, InputArray, OutputArray, Double, Double, Double(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    L0Smooth(InputArray, OutputArray, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EdgePreservingFilter(InputArray, OutputArray, Int32, Double): PrivateScope, Public, Static, HideBySig
    CovarianceEstimation(InputArray, OutputArray, Int32, Int32): PrivateScope, Public, Static, HideBySig
    FastHoughTransform(InputArray, OutputArray, MatType, AngleRangeOption(Optional, HasDefault), HoughOP(Optional, HasDefault), HoughDeskewOption(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    HoughPoint2Line(Point, InputArray, AngleRangeOption(Optional, HasDefault), HoughDeskewOption(Optional, HasDefault), RulesOption(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateFastLineDetector(Int32(Optional, HasDefault), Single(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateSuperpixelLSC(InputArray, Int32(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GradientPaillouY(InputArray, OutputArray, Double, Double): PrivateScope, Public, Static, HideBySig
    GradientPaillouX(InputArray, OutputArray, Double, Double): PrivateScope, Public, Static, HideBySig
    PeiLinNormalization(InputArray): PrivateScope, Public, Static, HideBySig
    PeiLinNormalization(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    CreateSuperpixelSEEDS(Int32, Int32, Int32, Int32, Int32, Int32(Optional, HasDefault), Int32(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CreateRFFeatureGetter(): PrivateScope, Public, Static, HideBySig
    CreateStructuredEdgeDetection(String, RFFeatureGetter(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    WeightedMedianFilter(InputArray, InputArray, OutputArray, Int32, Double(Optional, HasDefault), WMFWeightType(Optional, HasDefault), Mat(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.XImgProc.EdgeBoxes: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Properties:
    Single Alpha 'get set' : 
    Single Beta 'get set' : 
    Single Eta 'get set' : 
    Single MinScore 'get set' : 
    Int32 MaxBoxes 'get set' : 
    Single EdgeMinMag 'get set' : 
    Single EdgeMergeThr 'get set' : 
    Single ClusterMinMag 'get set' : 
    Single MaxAspectRatio 'get set' : 
    Single MinBoxArea 'get set' : 
    Single Gamma 'get set' : 
    Single Kappa 'get set' : 
  Methods:
    Create(Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Int32(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_Alpha(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Alpha(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Beta(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Beta(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Eta(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Eta(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MinScore(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MinScore(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MaxBoxes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MaxBoxes(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EdgeMinMag(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_EdgeMinMag(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EdgeMergeThr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_EdgeMergeThr(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ClusterMinMag(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ClusterMinMag(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MaxAspectRatio(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MaxAspectRatio(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MinBoxArea(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MinBoxArea(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Gamma(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Gamma(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Kappa(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Kappa(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBoundingBoxes(InputArray, InputArray, Rect[]&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.XImgProc.AdaptiveManifoldFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Properties:
    Double SigmaS 'get set' : 
    Double SigmaR 'get set' : 
    Int32 TreeHeight 'get set' : 
    Int32 PCAIterations 'get set' : 
    Boolean AdjustOutliers 'get set' : 
    Boolean UseRNG 'get set' : 
  Methods:
    Create(Double, Double, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_SigmaS(): PrivateScope, Public, HideBySig, SpecialName
    set_SigmaS(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SigmaR(): PrivateScope, Public, HideBySig, SpecialName
    set_SigmaR(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TreeHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_TreeHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PCAIterations(): PrivateScope, Public, HideBySig, SpecialName
    set_PCAIterations(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AdjustOutliers(): PrivateScope, Public, HideBySig, SpecialName
    set_AdjustOutliers(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_UseRNG(): PrivateScope, Public, HideBySig, SpecialName
    set_UseRNG(Boolean): PrivateScope, Public, HideBySig, SpecialName
    Filter(InputArray, OutputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.XImgProc.DTFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Create(InputArray, Double, Double, EdgeAwareFiltersList(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Filter(InputArray, OutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.XImgProc.FastBilateralSolverFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Create(InputArray, Double, Double, Double, Double(Optional, HasDefault), Int32(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Filter(InputArray, InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.XImgProc.FastGlobalSmootherFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Create(InputArray, Double, Double, Double(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Filter(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.XImgProc.GuidedFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Create(InputArray, Int32, Double): PrivateScope, Public, Static, HideBySig
    Filter(InputArray, OutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct OpenCvSharp.XImgProc.AngleRangeOption: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.XImgProc.AngleRangeOption ARO_0_45 = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.AngleRangeOption ARO_45_90 = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.AngleRangeOption ARO_90_135 = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.AngleRangeOption ARO_315_0 = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.AngleRangeOption ARO_315_45 = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.AngleRangeOption ARO_45_135 = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.AngleRangeOption ARO_315_135 = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.AngleRangeOption ARO_CTR_HOR = 7 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.AngleRangeOption ARO_CTR_VER = 8 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.XImgProc.EdgeAwareFiltersList: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.XImgProc.EdgeAwareFiltersList DTF_NC = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.EdgeAwareFiltersList DTF_IC = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.EdgeAwareFiltersList DTF_RF = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.EdgeAwareFiltersList GUIDED_FILTER = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.EdgeAwareFiltersList AM_FILTER = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.XImgProc.HoughDeskewOption: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.XImgProc.HoughDeskewOption RAW = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.HoughDeskewOption DESKEW = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.XImgProc.HoughOP: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.XImgProc.HoughOP FHT_MIN = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.HoughOP FHT_MAX = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.HoughOP FHT_ADD = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.HoughOP FHT_AVE = 3 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.XImgProc.LocalBinarizationMethods: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.XImgProc.LocalBinarizationMethods Niblack = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.LocalBinarizationMethods Sauvola = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.LocalBinarizationMethods Wolf = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.LocalBinarizationMethods Nick = 3 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.XImgProc.RulesOption: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.XImgProc.RulesOption STRICT = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.RulesOption IGNORE_BORDERS = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.XImgProc.SLICType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.XImgProc.SLICType SLIC = 100 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.SLICType SLICO = 101 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.SLICType MSLIC = 102 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.XImgProc.ThinningTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.XImgProc.ThinningTypes ZHANGSUEN = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.ThinningTypes GUOHALL = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.XImgProc.WMFWeightType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.XImgProc.WMFWeightType EXP = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.WMFWeightType IV1 = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.WMFWeightType IV2 = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.WMFWeightType COS = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.WMFWeightType JAC = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.XImgProc.WMFWeightType OFF = 5 : Public, Static, Literal, HasDefault
Class OpenCvSharp.XImgProc.FastLineDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Create(Int32(Optional, HasDefault), Single(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), Int32(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Detect(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Detect(InputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DrawSegments(InputOutputArray, InputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DrawSegments(InputOutputArray, IEnumerable`1, Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.XImgProc.RFFeatureGetter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    GetFeatures(Mat, Mat, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.XImgProc.StructuredEdgeDetection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Create(String, RFFeatureGetter(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetBoundingBoxes(InputArray, InputArray, Rect[]&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DetectEdges(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ComputeOrientation(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EdgesNms(InputArray, InputArray, OutputArray, Int32(Optional, HasDefault), Int32(Optional, HasDefault), Single(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.XImgProc.SuperpixelLSC: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Create(InputArray, Int32(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetNumberOfSuperpixels(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Iterate(Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLabels(OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLabelContourMask(OutputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EnforceLabelConnectivity(Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.XImgProc.SuperpixelSEEDS: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Create(Int32, Int32, Int32, Int32, Int32, Int32(Optional, HasDefault), Int32(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetNumberOfSuperpixels(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Iterate(InputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLabels(OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLabelContourMask(OutputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.XImgProc.SuperpixelSLIC: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Create(InputArray, SLICType(Optional, HasDefault), Int32(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetNumberOfSuperpixels(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Iterate(Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLabels(OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLabelContourMask(OutputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EnforceLabelConnectivity(Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.XImgProc.Segmentation.GraphSegmentation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Properties:
    Double Sigma 'get set' : 
    Single K   'get set' : 
    Int32 MinSize 'get set' : 
  Methods:
    Create(Double(Optional, HasDefault), Single(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_Sigma(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Sigma(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_K(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_K(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MinSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MinSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ProcessImage(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.XImgProc.Segmentation.SelectiveSearchSegmentation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    SetBaseImage(InputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SwitchToSingleStrategy(Int32(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SwitchToSelectiveSearchFast(Int32(Optional, HasDefault), Int32(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SwitchToSelectiveSearchQuality(Int32(Optional, HasDefault), Int32(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddImage(InputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearImages(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddGraphSegmentation(GraphSegmentation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearGraphSegmentations(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddStrategy(SelectiveSearchSegmentationStrategy): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClearStrategies(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Process(Rect[]&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.XImgProc.Segmentation.SelectiveSearchSegmentationStrategy: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Properties:
    OpenCvSharp.Ptr PtrObj 'get set' : 
  Methods:
    get_PtrObj(): PrivateScope, Public, HideBySig, SpecialName
    SetImage(InputArray, InputArray, InputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Get(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Merge(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.XImgProc.Segmentation.SelectiveSearchSegmentationStrategyColor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.XImgProc.Segmentation.SelectiveSearchSegmentationStrategy
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.XImgProc.Segmentation.SelectiveSearchSegmentationStrategySize: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.XImgProc.Segmentation.SelectiveSearchSegmentationStrategy
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.XImgProc.Segmentation.SelectiveSearchSegmentationStrategyTexture: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.XImgProc.Segmentation.SelectiveSearchSegmentationStrategy
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.XImgProc.Segmentation.SelectiveSearchSegmentationStrategyFill: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.XImgProc.Segmentation.SelectiveSearchSegmentationStrategy
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.XImgProc.Segmentation.SelectiveSearchSegmentationStrategyMultiple: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.XImgProc.Segmentation.SelectiveSearchSegmentationStrategy
  Methods:
    SetImage(InputArray, InputArray, InputArray, Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Get(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Merge(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Create(): PrivateScope, Public, Static, HideBySig
    Create(SelectiveSearchSegmentationStrategy): PrivateScope, Public, Static, HideBySig
    Create(SelectiveSearchSegmentationStrategy, SelectiveSearchSegmentationStrategy): PrivateScope, Public, Static, HideBySig
    Create(SelectiveSearchSegmentationStrategy, SelectiveSearchSegmentationStrategy, SelectiveSearchSegmentationStrategy): PrivateScope, Public, Static, HideBySig
    Create(SelectiveSearchSegmentationStrategy, SelectiveSearchSegmentationStrategy, SelectiveSearchSegmentationStrategy, SelectiveSearchSegmentationStrategy): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.XFeatures2D.BriefDescriptorExtractor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Fields:
    Int32 PATCH_SIZE = 48 : Public, Static, Literal, HasDefault
    Int32 KERNEL_SIZE = 9 : Public, Static, Literal, HasDefault
  Methods:
    Create(Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.XFeatures2D.FREAK: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Methods:
    Create(Boolean(Optional, HasDefault), Boolean(Optional, HasDefault), Single(Optional, HasDefault), Int32(Optional, HasDefault), IEnumerable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.XFeatures2D.LATCH: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Methods:
    Create(Int32(Optional, HasDefault), Boolean(Optional, HasDefault), Int32(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.XFeatures2D.LUCID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Methods:
    Create(Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.XFeatures2D.StarDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Methods:
    Create(Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.XFeatures2D.SURF: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Properties:
    Double HessianThreshold 'get set' : 
    Int32 NOctaves 'get set' : 
    Int32 NOctaveLayers 'get set' : 
    Boolean Extended 'get set' : 
    Boolean Upright 'get set' : 
  Methods:
    Create(Double, Int32(Optional, HasDefault), Int32(Optional, HasDefault), Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_HessianThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_HessianThreshold(Double): PrivateScope, Public, HideBySig, SpecialName
    get_NOctaves(): PrivateScope, Public, HideBySig, SpecialName
    set_NOctaves(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NOctaveLayers(): PrivateScope, Public, HideBySig, SpecialName
    set_NOctaveLayers(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Extended(): PrivateScope, Public, HideBySig, SpecialName
    set_Extended(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Upright(): PrivateScope, Public, HideBySig, SpecialName
    set_Upright(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct OpenCvSharp.Tracking.TrackerTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.Tracking.TrackerTypes Boosting = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.Tracking.TrackerTypes GOTURN = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.Tracking.TrackerTypes TLD = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.Tracking.TrackerTypes KCF = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.Tracking.TrackerTypes MedianFlow = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.Tracking.TrackerTypes MIL = 5 : Public, Static, Literal, HasDefault
Class OpenCvSharp.Tracking.TrackerCSRT: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Tracker
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(Params): PrivateScope, Public, Static, HideBySig
    SetInitialMask(InputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Tracking.TrackerKCF: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Tracker
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(Params): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Text.BaseOCR: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
  Methods:
    Run(Mat, String&(Out), Rect[]&(Out), String[]&(Out), Single[]&(Out), ComponentLevels(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Run(Mat, Mat, String&(Out), Rect[]&(Out), String[]&(Out), Single[]&(Out), ComponentLevels(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct OpenCvSharp.Text.ComponentLevels: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.Text.ComponentLevels Word = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.Text.ComponentLevels TextLine = 1 : Public, Static, Literal, HasDefault
Class OpenCvSharp.Text.CvText: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    DetectTextSWT(InputArray, Boolean, OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Text.OCRTesseract: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :OpenCvSharp.Text.BaseOCR
  Methods:
    Create(String(Optional, HasDefault), String(Optional, HasDefault), String(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Run(Mat, String&(Out), Rect[]&(Out), String[]&(Out), Single[]&(Out), ComponentLevels(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    Run(Mat, Mat, String&(Out), Rect[]&(Out), String[]&(Out), Single[]&(Out), ComponentLevels(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig
    SetWhiteList(String): PrivateScope, Public, HideBySig
Class OpenCvSharp.Detail.AffineBestOf2NearestMatcher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Detail.BestOf2NearestMatcher
    Void .ctor(Boolean, Boolean, Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Detail.BestOf2NearestMatcher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Detail.FeaturesMatcher
    Void .ctor(Boolean, Single, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CollectGarbage(): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.Detail.CvDetail: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ComputeImageFeatures(Feature2D, IEnumerable`1, IEnumerable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ComputeImageFeatures(Feature2D, InputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Detail.FeaturesMatcher: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
  Methods:
    Apply(ImageFeatures, ImageFeatures): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Apply(IEnumerable`1, Mat(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsThreadSafe(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CollectGarbage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Detail.ImageFeatures: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32, OpenCvSharp.Size, System.Collections.Generic.IReadOnlyList`1[OpenCvSharp.KeyPoint], OpenCvSharp.Mat): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 ImgIdx 'get ' : 
    OpenCvSharp.Size ImgSize 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[OpenCvSharp.KeyPoint] Keypoints 'get ' : 
    OpenCvSharp.Mat Descriptors 'get ' : 
  Methods:
    get_ImgIdx(): PrivateScope, Public, HideBySig, SpecialName
    get_ImgSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Keypoints(): PrivateScope, Public, HideBySig, SpecialName
    get_Descriptors(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct OpenCvSharp.Detail.WImageFeatures: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 ImgIdx : Public
    OpenCvSharp.Size ImgSize : Public
    IntPtr Keypoints : Public
    IntPtr Descriptors : Public
Class OpenCvSharp.Detail.MatchesInfo: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Int32, Int32, System.Collections.Generic.IReadOnlyList`1[OpenCvSharp.DMatch], System.Collections.Generic.IReadOnlyList`1[System.Byte], Int32, OpenCvSharp.Mat, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.Detail.MatchesInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 SrcImgIdx 'get ' : 
    Int32 DstImgIdx 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[OpenCvSharp.DMatch] Matches 'get ' : 
    System.Collections.Generic.IReadOnlyList`1[System.Byte] InliersMask 'get ' : 
    Int32 NumInliers 'get ' : 
    OpenCvSharp.Mat H 'get ' : 
    Double Confidence 'get ' : 
  Methods:
    get_SrcImgIdx(): PrivateScope, Public, HideBySig, SpecialName
    get_DstImgIdx(): PrivateScope, Public, HideBySig, SpecialName
    get_Matches(): PrivateScope, Public, HideBySig, SpecialName
    get_InliersMask(): PrivateScope, Public, HideBySig, SpecialName
    get_NumInliers(): PrivateScope, Public, HideBySig, SpecialName
    get_H(): PrivateScope, Public, HideBySig, SpecialName
    get_Confidence(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct OpenCvSharp.Detail.WaveCorrectKind: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.Detail.WaveCorrectKind Horizontal = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.Detail.WaveCorrectKind Vertical = 1 : Public, Static, Literal, HasDefault
Class OpenCvSharp.Detail.FeaturesFinder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Detail.BundleAdjusterBase: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Detail.WarperCreator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Detail.ExposureCompensator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Detail.SeamFinder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Detail.Blender: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Detail.CameraParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Quality.QualityBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Properties:
    Boolean Empty 'get ' : 
  Methods:
    get_Empty(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetQualityMap(OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Compute(InputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Quality.QualityBRISQUE: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Quality.QualityBase
  Methods:
    Create(String, String): PrivateScope, Public, Static, HideBySig
    Create(SVM, Mat): PrivateScope, Public, Static, HideBySig
    Compute(InputArray, String, String): PrivateScope, Public, Static, HideBySig
    ComputeFeatures(InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Quality.QualityGMSD: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Quality.QualityBase
  Methods:
    Create(InputArray): PrivateScope, Public, Static, HideBySig
    Compute(InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Quality.QualityMSE: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Quality.QualityBase
  Methods:
    Create(InputArray): PrivateScope, Public, Static, HideBySig
    Compute(InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Quality.QualityPSNR: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Quality.QualityBase
  Properties:
    Double MaxPixelValue 'get set' : 
  Methods:
    get_MaxPixelValue(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxPixelValue(Double): PrivateScope, Public, HideBySig, SpecialName
    Create(InputArray, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Compute(InputArray, InputArray, OutputArray, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Quality.QualitySSIM: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Quality.QualityBase
  Methods:
    Create(InputArray): PrivateScope, Public, Static, HideBySig
    Compute(InputArray, InputArray, OutputArray): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.OptFlow.CvOptFlow: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    UpdateMotionHistory(InputArray, InputOutputArray, Double, Double): PrivateScope, Public, Static, HideBySig
    CalcMotionGradient(InputArray, OutputArray, OutputArray, Double, Double, Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    CalcGlobalOrientation(InputArray, InputArray, InputArray, Double, Double): PrivateScope, Public, Static, HideBySig
    SegmentMotion(InputArray, OutputArray, Rect[]&(Out), Double, Double): PrivateScope, Public, Static, HideBySig
    CalcOpticalFlowSF(InputArray, InputArray, OutputArray, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    CalcOpticalFlowSF(InputArray, InputArray, OutputArray, Int32, Int32, Int32, Double, Double, Int32, Double, Double, Double, Int32, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    CalcOpticalFlowSparseToDense(InputArray, InputArray, OutputArray, Int32(Optional, HasDefault), Int32(Optional, HasDefault), Single(Optional, HasDefault), Boolean(Optional, HasDefault), Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.ML.ANN_MLP: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ML.StatModel
  Properties:
    OpenCvSharp.TermCriteria TermCriteria 'get set' : 
    Double BackpropWeightScale 'get set' : 
    Double BackpropMomentumScale 'get set' : 
    Double RpropDW0 'get set' : 
    Double RpropDWPlus 'get set' : 
    Double RpropDWMinus 'get set' : 
    Double RpropDWMin 'get set' : 
    Double RpropDWMax 'get set' : 
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Load(String): PrivateScope, Public, Static, HideBySig
    LoadFromString(String): PrivateScope, Public, Static, HideBySig
    get_TermCriteria(): PrivateScope, Public, HideBySig, SpecialName
    set_TermCriteria(TermCriteria): PrivateScope, Public, HideBySig, SpecialName
    get_BackpropWeightScale(): PrivateScope, Public, HideBySig, SpecialName
    set_BackpropWeightScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BackpropMomentumScale(): PrivateScope, Public, HideBySig, SpecialName
    set_BackpropMomentumScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RpropDW0(): PrivateScope, Public, HideBySig, SpecialName
    set_RpropDW0(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RpropDWPlus(): PrivateScope, Public, HideBySig, SpecialName
    set_RpropDWPlus(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RpropDWMinus(): PrivateScope, Public, HideBySig, SpecialName
    set_RpropDWMinus(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RpropDWMin(): PrivateScope, Public, HideBySig, SpecialName
    set_RpropDWMin(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RpropDWMax(): PrivateScope, Public, HideBySig, SpecialName
    set_RpropDWMax(Double): PrivateScope, Public, HideBySig, SpecialName
    SetTrainMethod(TrainingMethods, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTrainMethod(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetActivationFunction(ActivationFunctions, Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLayerSizes(InputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLayerSizes(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.ML.Boost: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ML.DTrees
  Properties:
    Types BoostType 'get set' : 
    Int32 WeakCount 'get set' : 
    Double WeightTrimRate 'get set' : 
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Load(String): PrivateScope, Public, Static, HideBySig
    LoadFromString(String): PrivateScope, Public, Static, HideBySig
    get_BoostType(): PrivateScope, Public, HideBySig, SpecialName
    set_BoostType(Types): PrivateScope, Public, HideBySig, SpecialName
    get_WeakCount(): PrivateScope, Public, HideBySig, SpecialName
    set_WeakCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_WeightTrimRate(): PrivateScope, Public, HideBySig, SpecialName
    set_WeightTrimRate(Double): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.ML.DTrees: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ML.StatModel
  Properties:
    Int32 MaxCategories 'get set' : 
    Int32 MaxDepth 'get set' : 
    Int32 MinSampleCount 'get set' : 
    Int32 CVFolds 'get set' : 
    Boolean UseSurrogates 'get set' : 
    Boolean Use1SERule 'get set' : 
    Boolean TruncatePrunedTree 'get set' : 
    Single RegressionAccuracy 'get set' : 
    OpenCvSharp.Mat Priors 'get set' : 
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Load(String): PrivateScope, Public, Static, HideBySig
    LoadFromString(String): PrivateScope, Public, Static, HideBySig
    get_MaxCategories(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxCategories(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxDepth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MinSampleCount(): PrivateScope, Public, HideBySig, SpecialName
    set_MinSampleCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CVFolds(): PrivateScope, Public, HideBySig, SpecialName
    set_CVFolds(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UseSurrogates(): PrivateScope, Public, HideBySig, SpecialName
    set_UseSurrogates(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Use1SERule(): PrivateScope, Public, HideBySig, SpecialName
    set_Use1SERule(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_TruncatePrunedTree(): PrivateScope, Public, HideBySig, SpecialName
    set_TruncatePrunedTree(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RegressionAccuracy(): PrivateScope, Public, HideBySig, SpecialName
    set_RegressionAccuracy(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Priors(): PrivateScope, Public, HideBySig, SpecialName
    set_Priors(Mat): PrivateScope, Public, HideBySig, SpecialName
    GetRoots(): PrivateScope, Public, HideBySig
    GetNodes(): PrivateScope, Public, HideBySig
    GetSplits(): PrivateScope, Public, HideBySig
    GetSubsets(): PrivateScope, Public, HideBySig
Struct OpenCvSharp.ML.SampleTypes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ML.SampleTypes RowSample = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ML.SampleTypes ColSample = 1 : Public, Static, Literal, HasDefault
Class OpenCvSharp.ML.KNearest: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ML.StatModel
  Properties:
    Int32 DefaultK 'get set' : 
    Boolean IsClassifier 'get set' : 
    Int32 Emax 'get set' : 
    Types AlgorithmType 'get set' : 
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Load(String): PrivateScope, Public, Static, HideBySig
    LoadFromString(String): PrivateScope, Public, Static, HideBySig
    get_DefaultK(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultK(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsClassifier(): PrivateScope, Public, HideBySig, SpecialName
    set_IsClassifier(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Emax(): PrivateScope, Public, HideBySig, SpecialName
    set_Emax(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AlgorithmType(): PrivateScope, Public, HideBySig, SpecialName
    set_AlgorithmType(Types): PrivateScope, Public, HideBySig, SpecialName
    FindNearest(InputArray, Int32, OutputArray, OutputArray(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
Class OpenCvSharp.ML.LogisticRegression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ML.StatModel
  Properties:
    Double LearningRate 'get set' : 
    Int32 Iterations 'get set' : 
    RegKinds Regularization 'get set' : 
    Methods TrainMethod 'get set' : 
    Int32 MiniBatchSize 'get set' : 
    OpenCvSharp.TermCriteria TermCriteria 'get set' : 
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Load(String): PrivateScope, Public, Static, HideBySig
    LoadFromString(String): PrivateScope, Public, Static, HideBySig
    get_LearningRate(): PrivateScope, Public, HideBySig, SpecialName
    set_LearningRate(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Iterations(): PrivateScope, Public, HideBySig, SpecialName
    set_Iterations(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Regularization(): PrivateScope, Public, HideBySig, SpecialName
    set_Regularization(RegKinds): PrivateScope, Public, HideBySig, SpecialName
    get_TrainMethod(): PrivateScope, Public, HideBySig, SpecialName
    set_TrainMethod(Methods): PrivateScope, Public, HideBySig, SpecialName
    get_MiniBatchSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MiniBatchSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TermCriteria(): PrivateScope, Public, HideBySig, SpecialName
    set_TermCriteria(TermCriteria): PrivateScope, Public, HideBySig, SpecialName
    Predict(InputArray, OutputArray(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetLearntThetas(): PrivateScope, Public, HideBySig
Class OpenCvSharp.ML.NormalBayesClassifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ML.StatModel
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Load(String): PrivateScope, Public, Static, HideBySig
    LoadFromString(String): PrivateScope, Public, Static, HideBySig
    PredictProb(InputArray, OutputArray, OutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
Struct OpenCvSharp.ML.ParamGrid: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double MinVal : Public
    Double MaxVal : Public
    Double LogStep : Public
Class OpenCvSharp.ML.RTrees: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ML.DTrees
  Properties:
    Boolean CalculateVarImportance 'get set' : 
    Int32 ActiveVarCount 'get set' : 
    OpenCvSharp.TermCriteria TermCriteria 'get set' : 
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Load(String): PrivateScope, Public, Static, HideBySig
    LoadFromString(String): PrivateScope, Public, Static, HideBySig
    get_CalculateVarImportance(): PrivateScope, Public, HideBySig, SpecialName
    set_CalculateVarImportance(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ActiveVarCount(): PrivateScope, Public, HideBySig, SpecialName
    set_ActiveVarCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TermCriteria(): PrivateScope, Public, HideBySig, SpecialName
    set_TermCriteria(TermCriteria): PrivateScope, Public, HideBySig, SpecialName
    GetVarImportance(): PrivateScope, Public, HideBySig
Class OpenCvSharp.ML.StatModel: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    GetVarCount(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Empty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsTrained(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsClassifier(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Train(TrainData, Int32(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Train(InputArray, SampleTypes, InputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CalcError(TrainData, Boolean, OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Predict(InputArray, OutputArray(Optional, HasDefault), Flags(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.ML.SVM: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ML.StatModel
  Properties:
    Types Type 'get set' : 
    Double Gamma 'get set' : 
    Double Coef0 'get set' : 
    Double Degree 'get set' : 
    Double C   'get set' : 
    Double Nu  'get set' : 
    Double P   'get set' : 
    OpenCvSharp.Mat ClassWeights 'get set' : 
    OpenCvSharp.TermCriteria TermCriteria 'get set' : 
    KernelTypes KernelType 'get set' : 
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Load(String): PrivateScope, Public, Static, HideBySig
    LoadFromString(String): PrivateScope, Public, Static, HideBySig
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Types): PrivateScope, Public, HideBySig, SpecialName
    get_Gamma(): PrivateScope, Public, HideBySig, SpecialName
    set_Gamma(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Coef0(): PrivateScope, Public, HideBySig, SpecialName
    set_Coef0(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Degree(): PrivateScope, Public, HideBySig, SpecialName
    set_Degree(Double): PrivateScope, Public, HideBySig, SpecialName
    get_C(): PrivateScope, Public, HideBySig, SpecialName
    set_C(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Nu(): PrivateScope, Public, HideBySig, SpecialName
    set_Nu(Double): PrivateScope, Public, HideBySig, SpecialName
    get_P(): PrivateScope, Public, HideBySig, SpecialName
    set_P(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ClassWeights(): PrivateScope, Public, HideBySig, SpecialName
    set_ClassWeights(Mat): PrivateScope, Public, HideBySig, SpecialName
    get_TermCriteria(): PrivateScope, Public, HideBySig, SpecialName
    set_TermCriteria(TermCriteria): PrivateScope, Public, HideBySig, SpecialName
    get_KernelType(): PrivateScope, Public, HideBySig, SpecialName
    set_KernelType(KernelTypes): PrivateScope, Public, HideBySig, SpecialName
    TrainAuto(TrainData, Int32(Optional, HasDefault), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), Nullable`1(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetSupportVectors(): PrivateScope, Public, HideBySig
    GetDecisionFunction(Int32, OutputArray, OutputArray): PrivateScope, Public, HideBySig
    GetDefaultGrid(ParamTypes): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.ML.TrainData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct OpenCvSharp.LineDescriptor.KeyLine: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Int32, Int32, OpenCvSharp.Point2f, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Single, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single Angle : Public, InitOnly
    Int32 ClassId : Public, InitOnly
    Int32 Octave : Public, InitOnly
    OpenCvSharp.Point2f Pt : Public, InitOnly
    Single Response : Public, InitOnly
    Single Size : Public, InitOnly
    Single StartPointX : Public, InitOnly
    Single StartPointY : Public, InitOnly
    Single EndPointX : Public, InitOnly
    Single EndPointY : Public, InitOnly
    Single SPointInOctaveX : Public, InitOnly
    Single SPointInOctaveY : Public, InitOnly
    Single EPointInOctaveX : Public, InitOnly
    Single EPointInOctaveY : Public, InitOnly
    Single LineLength : Public, InitOnly
    Int32 NumOfPixels : Public, InitOnly
  Properties:
    OpenCvSharp.Point2f StartPoint 'get ' : 
    OpenCvSharp.Point2f EndPoint 'get ' : 
    OpenCvSharp.Point2f StartPointInOctave 'get ' : 
    OpenCvSharp.Point2f EndPointInOctave 'get ' : 
  Methods:
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_StartPointInOctave(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPointInOctave(): PrivateScope, Public, HideBySig, SpecialName
Struct OpenCvSharp.LineDescriptor.LSDParam: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double, Double, Double, Double, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Double Scale : Public, InitOnly
    Double SigmaScale : Public, InitOnly
    Double Quant : Public, InitOnly
    Double AngTh : Public, InitOnly
    Double LogEps : Public, InitOnly
    Double DensityTh : Public, InitOnly
    Int32 NBins : Public, InitOnly
Class OpenCvSharp.ImgHash.AverageHash: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ImgHash.ImgHashBase
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.ImgHash.BlockMeanHash: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ImgHash.ImgHashBase
  Methods:
    Create(BlockMeanHashMode(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SetMode(BlockMeanHashMode): PrivateScope, Public, HideBySig
    GetMean(): PrivateScope, Public, HideBySig
Class OpenCvSharp.ImgHash.ColorMomentHash: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ImgHash.ImgHashBase
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Compute(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig
Struct OpenCvSharp.ImgHash.BlockMeanHashMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.ImgHash.BlockMeanHashMode Mode0 = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.ImgHash.BlockMeanHashMode Mode1 = 1 : Public, Static, Literal, HasDefault
Class OpenCvSharp.ImgHash.ImgHashBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Compute(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Compare(InputArray, InputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.ImgHash.MarrHildrethHash: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ImgHash.ImgHashBase
  Properties:
    Single Alpha 'get set' : 
    Single Scale 'get set' : 
  Methods:
    Create(Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    SetKernelParam(Single(Optional, HasDefault), Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Single): PrivateScope, Public, HideBySig, SpecialName
    Compute(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.ImgHash.PHash: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ImgHash.ImgHashBase
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Compute(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.ImgHash.RadialVarianceHash: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.ImgHash.ImgHashBase
  Properties:
    Double Sigma 'get set' : 
    Int32 NumOfAngleLine 'get set' : 
  Methods:
    Create(Double(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    get_Sigma(): PrivateScope, Public, HideBySig, SpecialName
    set_Sigma(Double): PrivateScope, Public, HideBySig, SpecialName
    get_NumOfAngleLine(): PrivateScope, Public, HideBySig, SpecialName
    set_NumOfAngleLine(Int32): PrivateScope, Public, HideBySig, SpecialName
    Compute(InputArray, OutputArray): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.Segmentation.IntelligentScissorsMB: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetWeights(Single, Single, Single): PrivateScope, Public, HideBySig
    SetGradientMagnitudeMaxLimit(Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetEdgeFeatureZeroCrossingParameters(Single(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetEdgeFeatureCannyParameters(Double, Double, Int32(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    ApplyImage(InputArray): PrivateScope, Public, HideBySig
    ApplyImageFeatures(InputArray, InputArray, InputArray, InputArray(Optional, HasDefault)): PrivateScope, Public, HideBySig
    BuildMap(Point): PrivateScope, Public, HideBySig
    GetContour(Point, OutputArray, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
Struct OpenCvSharp.Flann.FlannCentersInit: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.Flann.FlannCentersInit Random = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.Flann.FlannCentersInit Gonzales = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.Flann.FlannCentersInit KMeansPP = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.Flann.FlannDistance: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.Flann.FlannDistance Euclidean = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.Flann.FlannDistance L2 = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.Flann.FlannDistance Manhattan = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.Flann.FlannDistance L1 = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.Flann.FlannDistance Minkowski = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.Flann.FlannDistance Max = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.Flann.FlannDistance HistIntersect = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.Flann.FlannDistance Hellinger = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.Flann.FlannDistance ChiSquare = 7 : Public, Static, Literal, HasDefault
    OpenCvSharp.Flann.FlannDistance CS = 7 : Public, Static, Literal, HasDefault
    OpenCvSharp.Flann.FlannDistance KullbackLeibler = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.Flann.FlannDistance KL = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.Flann.FlannDistance Hamming = 9 : Public, Static, Literal, HasDefault
Class OpenCvSharp.Flann.Index: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(OpenCvSharp.InputArray, OpenCvSharp.Flann.IndexParams, OpenCvSharp.Flann.FlannDistance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    KnnSearch(Single[], Int32[]&(Out), Single[]&(Out), Int32, SearchParams): PrivateScope, Public, HideBySig
    KnnSearch(Mat, Mat, Mat, Int32, SearchParams): PrivateScope, Public, HideBySig
    KnnSearch(Mat, Int32[]&(Out), Single[]&(Out), Int32, SearchParams): PrivateScope, Public, HideBySig
    RadiusSearch(Single[], Int32[], Single[], Double, Int32, SearchParams): PrivateScope, Public, HideBySig
    RadiusSearch(Mat, Mat, Mat, Double, Int32, SearchParams): PrivateScope, Public, HideBySig
    RadiusSearch(Mat, Int32[], Single[], Double, Int32, SearchParams): PrivateScope, Public, HideBySig
    Save(String): PrivateScope, Public, HideBySig
Class OpenCvSharp.Flann.AutotunedIndexParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Flann.IndexParams
    Void .ctor(Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Flann.CompositeIndexParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Flann.IndexParams
    Void .ctor(Int32, Int32, Int32, OpenCvSharp.Flann.FlannCentersInit, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Flann.IndexParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetString(String, String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetInt(String, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetDouble(String, Double(Optional, HasDefault)): PrivateScope, Public, HideBySig
    SetString(String, String): PrivateScope, Public, HideBySig
    SetInt(String, Int32): PrivateScope, Public, HideBySig
    SetDouble(String, Double): PrivateScope, Public, HideBySig
    SetFloat(String, Single): PrivateScope, Public, HideBySig
    SetBool(String, Boolean): PrivateScope, Public, HideBySig
    SetAlgorithm(Int32): PrivateScope, Public, HideBySig
Class OpenCvSharp.Flann.KDTreeIndexParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Flann.IndexParams
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Flann.KMeansIndexParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Flann.IndexParams
    Void .ctor(Int32, Int32, OpenCvSharp.Flann.FlannCentersInit, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Flann.LinearIndexParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Flann.IndexParams
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Flann.LshIndexParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Flann.IndexParams
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Flann.SavedIndexParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Flann.IndexParams
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Flann.SearchParams: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Flann.IndexParams
    Void .ctor(Int32, Single, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class OpenCvSharp.Features2D.SIFT: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Feature2D
  Methods:
    Create(Int32(Optional, HasDefault), Int32(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Face.Facemark: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    LoadModel(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Fit(InputArray, InputArray, Point2f[][]&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Face.FacemarkAAM: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :OpenCvSharp.Face.Facemark
  Methods:
    Create(Params(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Face.FacemarkLBF: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :OpenCvSharp.Face.Facemark
  Methods:
    Create(Params(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Face.BasicFaceRecognizer: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.Face.FaceRecognizer
  Methods:
    GetNumComponents(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetNumComponents(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetThreshold(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetThreshold(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetProjections(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLabels(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEigenValues(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEigenVectors(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMean(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Face.EigenFaceRecognizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Face.BasicFaceRecognizer
  Methods:
    Create(Int32(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Face.FaceRecognizer: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :OpenCvSharp.Algorithm
  Methods:
    Train(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Update(IEnumerable`1, IEnumerable`1): PrivateScope, Public, HideBySig
    Predict(InputArray): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Predict(InputArray, Int32&(Out), Double&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Read(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Write(FileStorage): PrivateScope, Public, Virtual, HideBySig
    Read(FileNode): PrivateScope, Public, Virtual, HideBySig
    SetLabelInfo(Int32, String): PrivateScope, Public, HideBySig
    GetLabelInfo(Int32): PrivateScope, Public, HideBySig
    GetLabelsByString(String): PrivateScope, Public, HideBySig
    GetThreshold(): PrivateScope, Public, HideBySig
    SetThreshold(Double): PrivateScope, Public, HideBySig
Class OpenCvSharp.Face.FisherFaceRecognizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Face.BasicFaceRecognizer
  Methods:
    Create(Int32(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Face.LBPHFaceRecognizer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.Face.FaceRecognizer
  Methods:
    Create(Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Int32(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetGridX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGridX(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGridY(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGridY(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRadius(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRadius(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetNeighbors(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetNeighbors(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetThreshold(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetThreshold(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHistograms(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetLabels(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.DnnSuperres.DnnSuperResImpl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadModel(String): PrivateScope, Public, HideBySig
    ReadModel(String, String): PrivateScope, Public, HideBySig
    SetModel(String, Int32): PrivateScope, Public, HideBySig
    SetPreferableBackend(Backend): PrivateScope, Public, HideBySig
    SetPreferableTarget(Target): PrivateScope, Public, HideBySig
    Upsample(InputArray, OutputArray): PrivateScope, Public, HideBySig
    UpsampleMultioutput(InputArray, Mat[]&(Out), IEnumerable`1, IEnumerable`1): PrivateScope, Public, HideBySig
    GetScale(): PrivateScope, Public, HideBySig
    GetAlgorithm(): PrivateScope, Public, HideBySig
Struct OpenCvSharp.Dnn.Backend: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.Dnn.Backend DEFAULT = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.Dnn.Backend HALIDE = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.Dnn.Backend INFERENCE_ENGINE = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.Dnn.Backend OPENCV = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.Dnn.Backend VKCOM = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.Dnn.Backend CUDA = 5 : Public, Static, Literal, HasDefault
Class OpenCvSharp.Dnn.CvDnn: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ReadNetFromDarknet(String, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromDarknet(Byte[], Byte[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromDarknet(Stream, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromCaffe(String, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromCaffe(Byte[], Byte[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromCaffe(ReadOnlySpan`1, ReadOnlySpan`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromCaffe(Stream, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromTensorflow(String, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromTensorflow(Byte[], Byte[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromTensorflow(Stream, Stream(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromTorch(String, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNet(String, String(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadTorchBlob(String, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromOnnx(String): PrivateScope, Public, Static, HideBySig
    ReadNetFromOnnx(Byte[]): PrivateScope, Public, Static, HideBySig
    ReadNetFromOnnx(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    ReadNetFromOnnx(Stream): PrivateScope, Public, Static, HideBySig
    ReadTensorFromONNX(String): PrivateScope, Public, Static, HideBySig
    BlobFromImage(Mat, Double(Optional, HasDefault), Size(Optional, HasDefault), Scalar(Optional, HasDefault), Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    BlobFromImages(IEnumerable`1, Double, Size(Optional, HasDefault), Scalar(Optional, HasDefault), Boolean(Optional, HasDefault), Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ShrinkCaffeModel(String, String, IEnumerable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    WriteTextGraph(String, String): PrivateScope, Public, Static, HideBySig
    NMSBoxes(IEnumerable`1, IEnumerable`1, Single, Single, Int32[]&(Out), Single(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    NMSBoxes(IEnumerable`1, IEnumerable`1, Single, Single, Int32[]&(Out), Single(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    NMSBoxes(IEnumerable`1, IEnumerable`1, Single, Single, Int32[]&(Out), Single(Optional, HasDefault), Int32(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ResetMyriadDevice(): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Dnn.Net: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    ReadFromModelOptimizer(String, String): PrivateScope, Public, Static, HideBySig
    ReadNetFromDarknet(String, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromDarknet(Byte[], Byte[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromDarknet(ReadOnlySpan`1, ReadOnlySpan`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromCaffe(String, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromCaffe(Byte[], Byte[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromCaffe(ReadOnlySpan`1, ReadOnlySpan`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromTensorflow(String, String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromTensorflow(Byte[], Byte[](Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromTensorflow(ReadOnlySpan`1, ReadOnlySpan`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromTorch(String, Boolean(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNet(String, String(Optional, HasDefault), String(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    ReadNetFromModelOptimizer(String, String): PrivateScope, Public, Static, HideBySig
    ReadNetFromONNX(String): PrivateScope, Public, Static, HideBySig
    ReadNetFromONNX(Byte[]): PrivateScope, Public, Static, HideBySig
    ReadNetFromONNX(ReadOnlySpan`1): PrivateScope, Public, Static, HideBySig
    Empty(): PrivateScope, Public, HideBySig
    Dump(): PrivateScope, Public, HideBySig
    DumpToFile(String): PrivateScope, Public, HideBySig
    GetLayerId(String): PrivateScope, Public, HideBySig
    GetLayerNames(): PrivateScope, Public, HideBySig
    Connect(String, String): PrivateScope, Public, HideBySig
    Connect(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SetInputsNames(IEnumerable`1): PrivateScope, Public, HideBySig
    Forward(String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Forward(IEnumerable`1, String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    Forward(IEnumerable`1, IEnumerable`1): PrivateScope, Public, HideBySig
    SetHalideScheduler(String): PrivateScope, Public, HideBySig
    SetPreferableBackend(Backend): PrivateScope, Public, HideBySig
    SetPreferableTarget(Target): PrivateScope, Public, HideBySig
    SetInput(Mat, String(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetUnconnectedOutLayers(): PrivateScope, Public, HideBySig
    GetUnconnectedOutLayersNames(): PrivateScope, Public, HideBySig
    EnableFusion(Boolean): PrivateScope, Public, HideBySig
    GetPerfProfile(Double[]&(Out)): PrivateScope, Public, HideBySig
Struct OpenCvSharp.Dnn.Target: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.Dnn.Target CPU = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.Dnn.Target OPENCL = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.Dnn.Target OPENCL_FP16 = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.Dnn.Target MYRIAD = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.Dnn.Target VULKAN = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.Dnn.Target FPGA = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.Dnn.Target CUDA = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.Dnn.Target CUDA_FP16 = 7 : Public, Static, Literal, HasDefault
    OpenCvSharp.Dnn.Target HDDL = 8 : Public, Static, Literal, HasDefault
Class OpenCvSharp.Aruco.CvAruco: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    DetectMarkers(InputArray, Dictionary, Point2f[][]&(Out), Int32[]&(Out), DetectorParameters, Point2f[][]&(Out)): PrivateScope, Public, Static, HideBySig
    EstimatePoseSingleMarkers(Point2f[][], Single, InputArray, InputArray, OutputArray, OutputArray, OutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DrawDetectedMarkers(InputArray, Point2f[][], IEnumerable`1): PrivateScope, Public, Static, HideBySig
    DrawDetectedMarkers(InputArray, Point2f[][], IEnumerable`1, Scalar): PrivateScope, Public, Static, HideBySig
    GetPredefinedDictionary(PredefinedDictionaryName): PrivateScope, Public, Static, HideBySig
    ReadDictionary(String): PrivateScope, Public, Static, HideBySig
    DetectCharucoDiamond(InputArray, Point2f[][], IEnumerable`1, Single, Point2f[][]&(Out), Vec4i[]&(Out), InputArray(Optional, HasDefault), InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DrawDetectedDiamonds(InputArray, Point2f[][], IEnumerable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DrawDetectedDiamonds(InputArray, Point2f[][], IEnumerable`1, Scalar): PrivateScope, Public, Static, HideBySig
Struct OpenCvSharp.Aruco.DetectorParameters: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 AdaptiveThreshWinSizeMin : Public
    Int32 AdaptiveThreshWinSizeMax : Public
    Int32 AdaptiveThreshWinSizeStep : Public
    Double AdaptiveThreshConstant : Public
    Double MinMarkerPerimeterRate : Public
    Double MaxMarkerPerimeterRate : Public
    Double PolygonalApproxAccuracyRate : Public
    Double MinCornerDistanceRate : Public
    Int32 MinDistanceToBorder : Public
    Double MinMarkerDistanceRate : Public
    OpenCvSharp.Aruco.CornerRefineMethod CornerRefinementMethod : Public, HasFieldMarshal
    Int32 CornerRefinementWinSize : Public
    Int32 CornerRefinementMaxIterations : Public
    Double CornerRefinementMinAccuracy : Public
    Int32 MarkerBorderBits : Public
    Int32 PerspectiveRemovePixelPerCell : Public
    Double PerspectiveRemoveIgnoredMarginPerCell : Public
    Double MaxErroneousBitsInBorderRate : Public
    Double MinOtsuStdDev : Public
    Double ErrorCorrectionRate : Public
    Single AprilTagQuadDecimate : Public
    Single AprilTagQuadSigma : Public
    Int32 AprilTagMinClusterPixels : Public
    Int32 AprilTagMaxNmaxima : Public
    Single AprilTagCriticalRad : Public
    Single AprilTagMaxLineFitMse : Public
    Int32 AprilTagMinWhiteBlackDiff : Public
    Int32 AprilTagDeglitch : Public
    Boolean DetectInvertedMarker : Public, HasFieldMarshal
    Boolean UseAruco3Detection : Public, HasFieldMarshal
    Int32 MinSideLengthCanonicalImg : Public
    Single MinMarkerLengthRatioOriginalImg : Public
Class OpenCvSharp.Aruco.Dictionary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
  Properties:
    OpenCvSharp.Mat BytesList 'get ' : 
    Int32 MarkerSize 'get set' : 
    Int32 MaxCorrectionBits 'get set' : 
  Methods:
    get_BytesList(): PrivateScope, Public, HideBySig, SpecialName
    get_MarkerSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MarkerSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxCorrectionBits(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxCorrectionBits(Int32): PrivateScope, Public, HideBySig, SpecialName
    Identify(Mat, Int32&(Out), Int32&(Out), Double): PrivateScope, Public, HideBySig
    GetDistanceToId(InputArray, Int32, Boolean(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GenerateImageMarker(Int32, Int32, OutputArray, Int32(Optional, HasDefault)): PrivateScope, Public, HideBySig
    GetByteListFromBits(Mat): PrivateScope, Public, Static, HideBySig
    GetBitsFromByteList(Mat, Int32): PrivateScope, Public, Static, HideBySig
Struct OpenCvSharp.Aruco.CornerRefineMethod: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.Aruco.CornerRefineMethod None = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.CornerRefineMethod Subpix = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.CornerRefineMethod Contour = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.CornerRefineMethod AprilTag = 3 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.Aruco.PredefinedDictionaryName: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict4X4_50 = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict4X4_100 = 1 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict4X4_250 = 2 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict4X4_1000 = 3 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict5X5_50 = 4 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict5X5_100 = 5 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict5X5_250 = 6 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict5X5_1000 = 7 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict6X6_50 = 8 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict6X6_100 = 9 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict6X6_250 = 10 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict6X6_1000 = 11 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict7X7_50 = 12 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict7X7_100 = 13 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict7X7_250 = 14 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName Dict7X7_1000 = 15 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName DictArucoOriginal = 16 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName DictAprilTag_16h5 = 17 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName DictAprilTag_25h9 = 18 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName DictAprilTag_36h10 = 19 : Public, Static, Literal, HasDefault
    OpenCvSharp.Aruco.PredefinedDictionaryName DictAprilTag_36h11 = 20 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.Internal.ExceptionStatus: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenCvSharp.Internal.ExceptionStatus NotOccurred = 0 : Public, Static, Literal, HasDefault
    OpenCvSharp.Internal.ExceptionStatus Occurred = 1 : Public, Static, Literal, HasDefault
Class OpenCvSharp.Internal.NativeMethods: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, HasSecurity
  Fields:
    OpenCvSharp.CvErrorCallback ErrorHandlerThrowException : Public, Static, InitOnly
    OpenCvSharp.CvErrorCallback ErrorHandlerIgnorance : Public, Static, InitOnly
    OpenCvSharp.CvErrorCallback ErrorHandlerDefault : Public, Static
    System.String DllExtern = OpenCvSharpExtern : Public, Static, Literal, HasDefault
  Methods:
    ximgproc_SuperpixelLSC_getNumberOfSuperpixels(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_SuperpixelLSC_iterate(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_SuperpixelLSC_getLabels(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_SuperpixelLSC_getLabelContourMask(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_SuperpixelLSC_enforceLabelConnectivity(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_createSuperpixelLSC(IntPtr, Int32, Single, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_SuperpixelSEEDS_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_SuperpixelSEEDS_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_SuperpixelSEEDS_getNumberOfSuperpixels(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_SuperpixelSEEDS_iterate(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_SuperpixelSEEDS_getLabels(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_SuperpixelSEEDS_getLabelContourMask(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_createSuperpixelSEEDS(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_SuperpixelSLIC_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_SuperpixelSLIC_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_SuperpixelSLIC_getNumberOfSuperpixels(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_SuperpixelSLIC_iterate(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_SuperpixelSLIC_getLabels(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_SuperpixelSLIC_getLabelContourMask(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_SuperpixelSLIC_enforceLabelConnectivity(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_createSuperpixelSLIC(IntPtr, Int32, Int32, Single, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyMultiple_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyMultiple_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentation_setBaseImage(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentation_switchToSingleStrategy(IntPtr, Int32, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentation_switchToSelectiveSearchFast(IntPtr, Int32, Int32, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentation_switchToSelectiveSearchQuality(IntPtr, Int32, Int32, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentation_addImage(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentation_clearImages(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentation_addGraphSegmentation(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentation_clearGraphSegmentations(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentation_addStrategy(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentation_clearStrategies(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentation_process(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_createSelectiveSearchSegmentation(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_Ptr_SelectiveSearchSegmentation_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_Ptr_SelectiveSearchSegmentation_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_createRFFeatureGetter(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_RFFeatureGetter_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_RFFeatureGetter_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_RFFeatureGetter_getFeatures(IntPtr, IntPtr, IntPtr, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_createStructuredEdgeDetection(String(HasFieldMarshal), IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_StructuredEdgeDetection_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_StructuredEdgeDetection_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_StructuredEdgeDetection_detectEdges(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_StructuredEdgeDetection_computeOrientation(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_StructuredEdgeDetection_edgesNms(IntPtr, IntPtr, IntPtr, IntPtr, Int32, Int32, Single, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_SuperpixelLSC_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_SuperpixelLSC_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_GraphSegmentation_setSigma(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_GraphSegmentation_getSigma(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_GraphSegmentation_setK(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_GraphSegmentation_getK(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_GraphSegmentation_setMinSize(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_GraphSegmentation_getMinSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentationStrategy_setImage(IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentationStrategy_get(IntPtr, Int32, Int32, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentationStrategy_merge(IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_createSelectiveSearchSegmentationStrategyColor(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_createSelectiveSearchSegmentationStrategySize(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_createSelectiveSearchSegmentationStrategyTexture(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_createSelectiveSearchSegmentationStrategyFill(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyColor_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategySize_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyTexture_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyFill_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyColor_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategySize_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyTexture_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_Ptr_SelectiveSearchSegmentationStrategyFill_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentationStrategyMultiple_addStrategy(IntPtr, IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_SelectiveSearchSegmentationStrategyMultiple_clearStrategies(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_createSelectiveSearchSegmentationStrategyMultiple0(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_createSelectiveSearchSegmentationStrategyMultiple1(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_createSelectiveSearchSegmentationStrategyMultiple2(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_createSelectiveSearchSegmentationStrategyMultiple3(IntPtr, IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_createSelectiveSearchSegmentationStrategyMultiple4(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_bilateralTextureFilter(IntPtr, IntPtr, Int32, Int32, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_rollingGuidanceFilter(IntPtr, IntPtr, Int32, Double, Double, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_FastBilateralSolverFilter_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_FastBilateralSolverFilter_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_FastBilateralSolverFilter_filter(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_createFastBilateralSolverFilter(IntPtr, Double, Double, Double, Double, Int32, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_fastBilateralSolverFilter(IntPtr, IntPtr, IntPtr, IntPtr, Double, Double, Double, Double, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_FastGlobalSmootherFilter_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_FastGlobalSmootherFilter_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_FastGlobalSmootherFilter_filter(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_createFastGlobalSmootherFilter(IntPtr, Double, Double, Double, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_fastGlobalSmootherFilter(IntPtr, IntPtr, IntPtr, Double, Double, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_l0Smooth(IntPtr, IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_FastLineDetector_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_FastLineDetector_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_FastLineDetector_detect_OutputArray(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_FastLineDetector_detect_vector(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_FastLineDetector_drawSegments_InputArray(IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_FastLineDetector_drawSegments_vector(IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_createFastLineDetector(Int32, Single, Double, Double, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_RidgeDetectionFilter_create(Int32, Int32, Int32, Int32, Int32, Double, Double, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_RidgeDetectionFilter_getRidgeFilteredImage(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_RidgeDetectionFilter_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_RidgeDetectionFilter_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_createGraphSegmentation(Double, Single, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_Ptr_GraphSegmentation_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_Ptr_GraphSegmentation_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_segmentation_GraphSegmentation_processImage(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_DTFilter_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_DTFilter_filter(IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_createDTFilter(IntPtr, Double, Double, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_dtFilter(IntPtr, IntPtr, IntPtr, Double, Double, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_GuidedFilter_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_GuidedFilter_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_GuidedFilter_filter(IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_createGuidedFilter(IntPtr, Int32, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_guidedFilter(IntPtr, IntPtr, IntPtr, Int32, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_AdaptiveManifoldFilter_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_AdaptiveManifoldFilter_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_AdaptiveManifoldFilter_filter(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_AdaptiveManifoldFilter_collectGarbage(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_AdaptiveManifoldFilter_getSigmaS(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_AdaptiveManifoldFilter_setSigmaS(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_AdaptiveManifoldFilter_getSigmaR(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_AdaptiveManifoldFilter_setSigmaR(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_AdaptiveManifoldFilter_getTreeHeight(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_AdaptiveManifoldFilter_setTreeHeight(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_AdaptiveManifoldFilter_getPCAIterations(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_AdaptiveManifoldFilter_setPCAIterations(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_AdaptiveManifoldFilter_getAdjustOutliers(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_AdaptiveManifoldFilter_setAdjustOutliers(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_AdaptiveManifoldFilter_getUseRNG(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_AdaptiveManifoldFilter_setUseRNG(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_createAMFilter(Double, Double, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_amFilter(IntPtr, IntPtr, IntPtr, Double, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_jointBilateralFilter(IntPtr, IntPtr, IntPtr, Int32, Double, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_getAlpha(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_setAlpha(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_getBeta(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_setBeta(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_getEta(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_setEta(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_getMinScore(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_setMinScore(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_getMaxBoxes(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_setMaxBoxes(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_getEdgeMinMag(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_setEdgeMinMag(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_getEdgeMergeThr(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_setEdgeMergeThr(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_getClusterMinMag(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_setClusterMinMag(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_getMaxAspectRatio(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_setMaxAspectRatio(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_getMinBoxArea(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_setMinBoxArea(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_getGamma(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_setGamma(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_getKappa(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_setKappa(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_createEdgeBoxes(Single, Single, Single, Single, Int32, Single, Single, Single, Single, Single, Single, Single, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_EdgeBoxes_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_EdgeBoxes_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_Ptr_DTFilter_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_anisotropicDiffusion(IntPtr, IntPtr, Single, Single, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_BrightEdges(IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_createQuaternionImage(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_qconj(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_qunitary(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_qmultiply(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_qdft(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_colorMatchTemplate(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_GradientDericheY(IntPtr, IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_GradientDericheX(IntPtr, IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_edgePreservingFilter(IntPtr, IntPtr, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_covarianceEstimation(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_FastHoughTransform(IntPtr, IntPtr, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_HoughPoint2Line(Point, IntPtr, Int32, Int32, Int32, Vec4i&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_GradientPaillouY(IntPtr, IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_GradientPaillouX(IntPtr, IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_PeiLinNormalization_Mat23d(IntPtr, Double*): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_PeiLinNormalization_OutputArray(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_rl_threshold(IntPtr, IntPtr, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_rl_dilate(IntPtr, IntPtr, IntPtr, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_rl_erode(IntPtr, IntPtr, IntPtr, Int32, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_rl_getStructuringElement(Int32, Size, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_rl_paint(IntPtr, IntPtr, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_rl_isRLMorphologyPossible(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_rl_createRLEImage(Point3i[], IntPtr, IntPtr, Size): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_rl_morphologyEx(IntPtr, IntPtr, Int32, IntPtr, Int32, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_weightedMedianFilter(IntPtr, IntPtr, IntPtr, Int32, Double, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_EdgeBoxes_getBoundingBoxes(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_new1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_new2(Int32, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_init(IntPtr, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_predict(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_correct(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_statePre(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_statePost(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_transitionMatrix(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_controlMatrix(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_measurementMatrix(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_processNoiseCov(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_measurementNoiseCov(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_errorCovPre(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_gain(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_KalmanFilter_errorCovPost(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_Tracker_init(IntPtr, IntPtr, Rect): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_Tracker_update(IntPtr, IntPtr, Rect&, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_TrackerMIL_create1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_TrackerMIL_create2(Params*, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_Ptr_TrackerMIL_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_Ptr_TrackerMIL_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_TrackerGOTURN_create1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_TrackerGOTURN_create2(Params*, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_Ptr_TrackerGOTURN_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_Ptr_TrackerGOTURN_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_niBlackThreshold(IntPtr, IntPtr, Double, Int32, Int32, Double, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ximgproc_thinning(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_setShadowThreshold(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_createBackgroundSubtractorKNN(Int32, Double, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_Ptr_BackgroundSubtractorKNN_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_Ptr_BackgroundSubtractorKNN_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorKNN_getHistory(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorKNN_setHistory(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorKNN_getNSamples(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorKNN_setNSamples(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorKNN_getDist2Threshold(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorKNN_setDist2Threshold(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorKNN_getkNNSamples(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorKNN_setkNNSamples(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorKNN_getDetectShadows(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorKNN_setDetectShadows(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorKNN_getShadowValue(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorKNN_setShadowValue(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorKNN_getShadowThreshold(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorKNN_setShadowThreshold(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_CamShift(IntPtr, Rect&, TermCriteria, RotatedRect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_meanShift(IntPtr, Rect&, TermCriteria, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_buildOpticalFlowPyramid1(IntPtr, IntPtr, Size, Int32, Int32, Int32, Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_buildOpticalFlowPyramid2(IntPtr, IntPtr, Size, Int32, Int32, Int32, Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_calcOpticalFlowPyrLK_InputArray(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Size, Int32, TermCriteria, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_calcOpticalFlowPyrLK_vector(IntPtr, IntPtr, Point2f[], Int32, IntPtr, IntPtr, IntPtr, Size, Int32, TermCriteria, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_calcOpticalFlowFarneback(IntPtr, IntPtr, IntPtr, Double, Int32, Int32, Int32, Int32, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_computeECC(IntPtr, IntPtr, IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_findTransformECC1(IntPtr, IntPtr, IntPtr, Int32, TermCriteria, IntPtr, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_findTransformECC2(IntPtr, IntPtr, IntPtr, Int32, TermCriteria, IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_Ptr_BackgroundSubtractor_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_Ptr_BackgroundSubtractor_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_createBackgroundSubtractorMOG2(Int32, Double, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_Ptr_BackgroundSubtractorMOG2_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_Ptr_BackgroundSubtractorMOG2_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_getHistory(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_setHistory(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_getNMixtures(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_setNMixtures(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_getBackgroundRatio(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_setBackgroundRatio(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_getVarThreshold(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_setVarThreshold(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_getVarThresholdGen(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_setVarThresholdGen(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_getVarInit(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_setVarInit(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_getVarMin(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_setVarMin(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_getVarMax(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_setVarMax(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_getComplexityReductionThreshold(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_setComplexityReductionThreshold(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_getDetectShadows(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_setDetectShadows(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_getShadowValue(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_setShadowValue(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractorMOG2_getShadowThreshold(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_getTemporalAreaRadius(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_setTemporalAreaRadius(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_getOpticalFlow(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_setOpticalFlow(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    text_OCRTesseract_run1(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    text_OCRTesseract_run2(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    text_OCRTesseract_setWhiteList(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    text_OCRTesseract_create(String(HasFieldMarshal), String(HasFieldMarshal), String(HasFieldMarshal), Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    text_Ptr_OCRTesseract_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    text_OCRTesseract_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    text_detectTextSWT(IntPtr, IntPtr, Int32, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    text_TextDetector_detect(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    text_TextDetectorCNN_detect(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    text_TextDetectorCNN_create1(String(HasFieldMarshal), String(HasFieldMarshal), Size[](HasFieldMarshal), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    text_TextDetectorCNN_create2(String(HasFieldMarshal), String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    text_Ptr_TextDetectorCNN_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    text_Ptr_TextDetectorCNN_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    tracking_TrackerKCF_create1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    tracking_TrackerKCF_create2(Params, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    tracking_Ptr_TrackerKCF_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    tracking_Ptr_TrackerKCF_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    tracking_TrackerCSRT_create1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    tracking_TrackerCSRT_create2(Params&, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    tracking_Ptr_TrackerCSRT_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    tracking_Ptr_TrackerCSRT_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    tracking_TrackerCSRT_setInitialMask(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractor_getBackgroundImage(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    video_BackgroundSubtractor_apply(IntPtr, IntPtr, IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_createFrameSource_Video_CUDA(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_createFrameSource_Camera(Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_Ptr_FrameSource_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_Ptr_FrameSource_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_setInput(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_nextFrame(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_reset(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_collectGarbage(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_createSuperResolution_BTVL1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_createSuperResolution_BTVL1_CUDA(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_Ptr_SuperResolution_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_Ptr_SuperResolution_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_getScale(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_setScale(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_getIterations(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_setIterations(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_getTau(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_setTau(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_getLambda(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_setLambda(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_getAlpha(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_setAlpha(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_getKernelSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_setKernelSize(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_getBlurKernelSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_setBlurKernelSize(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_getBlurSigma(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_SuperResolution_setBlurSigma(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_createOptFlow_Brox_CUDA(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_Ptr_BroxOpticalFlow_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_Ptr_BroxOpticalFlow_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_BroxOpticalFlow_getAlpha(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_BroxOpticalFlow_setAlpha(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_BroxOpticalFlow_getGamma(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_BroxOpticalFlow_setGamma(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_BroxOpticalFlow_getScaleFactor(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_BroxOpticalFlow_setScaleFactor(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_BroxOpticalFlow_getInnerIterations(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_BroxOpticalFlow_setInnerIterations(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_BroxOpticalFlow_getOuterIterations(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_BroxOpticalFlow_setOuterIterations(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_BroxOpticalFlow_getSolverIterations(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_BroxOpticalFlow_setSolverIterations(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_createOptFlow_PyrLK_CUDA(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_Ptr_PyrLKOpticalFlow_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_Ptr_PyrLKOpticalFlow_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_PyrLKOpticalFlow_getWindowSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_PyrLKOpticalFlow_setWindowSize(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_PyrLKOpticalFlow_getMaxLevel(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_PyrLKOpticalFlow_setMaxLevel(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_PyrLKOpticalFlow_getIterations(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_PyrLKOpticalFlow_setIterations(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FrameSource_nextFrame(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FrameSource_reset(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_createFrameSource_Empty(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_createFrameSource_Video(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FarnebackOpticalFlow_getIterations(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FarnebackOpticalFlow_setIterations(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FarnebackOpticalFlow_getPolyN(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FarnebackOpticalFlow_setPolyN(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FarnebackOpticalFlow_getPolySigma(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FarnebackOpticalFlow_setPolySigma(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FarnebackOpticalFlow_getFlags(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FarnebackOpticalFlow_setFlags(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_createOptFlow_DualTVL1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_createOptFlow_DualTVL1_CUDA(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_Ptr_DualTVL1OpticalFlow_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_Ptr_DualTVL1OpticalFlow_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_getTau(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_setTau(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_getLambda(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_setLambda(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_getTheta(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_setTheta(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_getScalesNumber(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_setScalesNumber(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_getWarpingsNumber(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_setWarpingsNumber(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_getEpsilon(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_setEpsilon(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_getIterations(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_setIterations(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_getUseInitialFlow(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DualTVL1OpticalFlow_setUseInitialFlow(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_stitch1_MatArray(IntPtr, IntPtr[](HasFieldMarshal), Int32, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_stitch2_InputArray(IntPtr, IntPtr, IntPtr[], Int32, Int32[], IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_stitch2_MatArray(IntPtr, IntPtr[], Int32, IntPtr[], Int32, Int32[], IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_component(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_workScale(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_computeImageFeatures1(IntPtr, IntPtr[], Int32, IntPtr, IntPtr[]): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_computeImageFeatures2(IntPtr, IntPtr, WImageFeatures*, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_FeaturesMatcher_apply(IntPtr, WImageFeatures&, WImageFeatures&, Int32&(Out), Int32&(Out), IntPtr, IntPtr, Int32&(Out), IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_FeaturesMatcher_apply2(IntPtr, WImageFeatures[], Int32, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_FeaturesMatcher_isThreadSafe(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_FeaturesMatcher_collectGarbage(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_BestOf2NearestMatcher_new(Int32, Single, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_BestOf2NearestMatcher_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_BestOf2NearestMatcher_collectGarbage(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_AffineBestOf2NearestMatcher_new(Int32, Int32, Single, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_AffineBestOf2NearestMatcher_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DenseOpticalFlowExt_calc(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_DenseOpticalFlowExt_collectGarbage(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_createOptFlow_Farneback(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_createOptFlow_Farneback_CUDA(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_Ptr_FarnebackOpticalFlow_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_Ptr_FarnebackOpticalFlow_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FarnebackOpticalFlow_getPyrScale(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FarnebackOpticalFlow_setPyrScale(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FarnebackOpticalFlow_getLevelsNumber(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FarnebackOpticalFlow_setLevelsNumber(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FarnebackOpticalFlow_getWindowSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    superres_FarnebackOpticalFlow_setWindowSize(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_HausdorffDistanceExtractor_setDistanceFlag(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_HausdorffDistanceExtractor_getDistanceFlag(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_HausdorffDistanceExtractor_setRankProportion(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_HausdorffDistanceExtractor_getRankProportion(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_createHausdorffDistanceExtractor(Int32, Single, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_create(Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Ptr_Stitcher_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Ptr_Stitcher_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_registrationResol(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_setRegistrationResol(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_seamEstimationResol(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_setSeamEstimationResol(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_compositingResol(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_setCompositingResol(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_panoConfidenceThresh(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_setPanoConfidenceThresh(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_waveCorrection(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_setWaveCorrection(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_waveCorrectKind(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_setWaveCorrectKind(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_estimateTransform_InputArray1(IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_estimateTransform_InputArray2(IntPtr, IntPtr, IntPtr[], Int32, Int32[], Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_estimateTransform_MatArray1(IntPtr, IntPtr[], Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_estimateTransform_MatArray2(IntPtr, IntPtr[], Int32, IntPtr[], Int32, Int32[], Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_composePanorama1(IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_composePanorama2_InputArray(IntPtr, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_composePanorama2_MatArray(IntPtr, IntPtr[], Int32, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    stitching_Stitcher_stitch1_InputArray(IntPtr, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeDistanceExtractor_computeDistance(IntPtr, IntPtr, IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_Ptr_ShapeContextDistanceExtractor_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_Ptr_ShapeContextDistanceExtractor_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_setAngularBins(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_getAngularBins(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_setRadialBins(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_getRadialBins(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_setInnerRadius(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_getInnerRadius(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_setOuterRadius(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_getOuterRadius(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_setRotationInvariant(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_getRotationInvariant(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_setShapeContextWeight(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_getShapeContextWeight(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_setImageAppearanceWeight(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_getImageAppearanceWeight(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_setBendingEnergyWeight(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_getBendingEnergyWeight(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_setImages(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_getImages(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_setIterations(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_getIterations(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_setStdDev(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_ShapeContextDistanceExtractor_getStdDev(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_createShapeContextDistanceExtractor(Int32, Int32, Single, Single, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_Ptr_HausdorffDistanceExtractor_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    shape_Ptr_HausdorffDistanceExtractor_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Tonemap_getGamma(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Tonemap_setGamma(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_createTonemap(Single, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_Tonemap_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_Tonemap_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_TonemapDrago_getSaturation(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_TonemapDrago_setSaturation(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_TonemapDrago_getBias(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_TonemapDrago_setBias(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_createTonemapDrago(Single, Single, Single, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_TonemapDrago_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_TonemapDrago_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_TonemapReinhard_getIntensity(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_TonemapReinhard_setIntensity(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_TonemapReinhard_getLightAdaptation(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_TonemapReinhard_setLightAdaptation(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_TonemapReinhard_getColorAdaptation(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_TonemapReinhard_setColorAdaptation(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_createTonemapReinhard(Single, Single, Single, Single, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_TonemapReinhard_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_TonemapReinhard_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_TonemapMantiuk_getScale(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_TonemapMantiuk_setScale(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_TonemapMantiuk_getSaturation(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_TonemapMantiuk_setSaturation(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_createTonemapMantiuk(Single, Single, Single, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_TonemapMantiuk_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_TonemapMantiuk_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_stylization(IntPtr, IntPtr, Single, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_createCalibrateDebevec(Int32, Single, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_CalibrateDebevec_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_CalibrateDebevec_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_CalibrateDebevec_getLambda(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_CalibrateDebevec_setLambda(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_CalibrateDebevec_getSamples(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_CalibrateDebevec_setSamples(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_CalibrateDebevec_getRandom(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_CalibrateDebevec_setRandom(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_createCalibrateRobertson(Int32, Single, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_CalibrateRobertson_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_CalibrateRobertson_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_CalibrateRobertson_getMaxIter(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_CalibrateRobertson_setMaxIter(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_CalibrateRobertson_getThreshold(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_CalibrateRobertson_setThreshold(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_CalibrateRobertson_getRadiance(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_CalibrateCRF_process(IntPtr, IntPtr[], Int32, IntPtr, Single[](In, HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_createMergeDebevec(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_MergeDebevec_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_MergeDebevec_get(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_createMergeMertens(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_MergeMertens_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Ptr_MergeMertens_get(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_MergeExposures_process(IntPtr, IntPtr[], Int32, IntPtr, Single[](In, HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_MergeMertens_process(IntPtr, IntPtr[], Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_Tonemap_process(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_L2HysThreshold_set(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_gammaCorrection_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_nlevels_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_signedGradient_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_QRCodeDetector_new(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_QRCodeDetector_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_QRCodeDetector_setEpsX(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_QRCodeDetector_setEpsY(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_QRCodeDetector_detect(IntPtr, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_QRCodeDetector_decode(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_QRCodeDetector_detectAndDecode(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_QRCodeDetector_detectMulti(IntPtr, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_QRCodeDetector_decodeMulti(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_QRCodeDetector_decodeMulti_NoStraightQrCode(IntPtr, IntPtr, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_inpaint(IntPtr, IntPtr, IntPtr, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_fastNlMeansDenoising(IntPtr, IntPtr, Single, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_fastNlMeansDenoisingColored(IntPtr, IntPtr, Single, Single, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_fastNlMeansDenoisingMulti(IntPtr[], Int32, IntPtr, Int32, Int32, Single, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_fastNlMeansDenoisingColoredMulti(IntPtr[], Int32, IntPtr, Int32, Int32, Single, Single, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_denoise_TVL1(IntPtr[], Int32, IntPtr, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_decolor(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_seamlessClone(IntPtr, IntPtr, IntPtr, Point, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_colorChange(IntPtr, IntPtr, IntPtr, Single, Single, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_illuminationChange(IntPtr, IntPtr, IntPtr, Single, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_textureFlattening(IntPtr, IntPtr, IntPtr, Single, Single, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_edgePreservingFilter(IntPtr, IntPtr, Int32, Single, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_detailEnhance(IntPtr, IntPtr, Single, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    photo_pencilSketch(IntPtr, IntPtr, IntPtr, Single, Single, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_detect1(IntPtr, IntPtr, IntPtr, Double, Size, Size, Point[](In), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_detect2(IntPtr, IntPtr, IntPtr, IntPtr, Double, Size, Size, Point[](In), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_detectMultiScale1(IntPtr, IntPtr, IntPtr, Double, Size, Size, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_detectMultiScale2(IntPtr, IntPtr, IntPtr, IntPtr, Double, Size, Size, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_computeGradient(IntPtr, IntPtr, IntPtr, IntPtr, Size, Size): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_detectROI(IntPtr, IntPtr, Point[], Int32, IntPtr, IntPtr, Double, Size, Size): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_detectMultiScaleROI(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_groupRectangles(IntPtr, IntPtr, IntPtr, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_winSize_get(IntPtr, Size&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_blockSize_get(IntPtr, Size&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_blockStride_get(IntPtr, Size&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_cellSize_get(IntPtr, Size&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_nbins_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_derivAperture_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_winSigma_get(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_histogramNormType_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_L2HysThreshold_get(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_gammaCorrection_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_nlevels_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_signedGradient_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_winSize_set(IntPtr, Size): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_blockSize_set(IntPtr, Size): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_blockStride_set(IntPtr, Size): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_cellSize_set(IntPtr, Size): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_nbins_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_derivAperture_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_winSigma_set(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_histogramNormType_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_SimpleWB_P_set(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_groupRectangles1(IntPtr, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_groupRectangles2(IntPtr, IntPtr, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_groupRectangles3(IntPtr, Int32, Double, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_groupRectangles4(IntPtr, IntPtr, IntPtr, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_groupRectangles_meanshift(IntPtr, IntPtr, IntPtr, Double, Size): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_CascadeClassifier_read(IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_CascadeClassifier_new(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_CascadeClassifier_newFromFile(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_CascadeClassifier_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_CascadeClassifier_empty(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_CascadeClassifier_load(IntPtr, String(HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_CascadeClassifier_detectMultiScale1(IntPtr, IntPtr, IntPtr, Double, Int32, Int32, Size, Size): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_CascadeClassifier_detectMultiScale2(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Double, Int32, Int32, Size, Size, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_CascadeClassifier_isOldFormatCascade(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_CascadeClassifier_getOriginalWindowSize(IntPtr, Size&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_CascadeClassifier_getFeatureType(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_new1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_new2(Size, Size, Size, Size, Int32, Int32, Double, HistogramNormType(HasFieldMarshal), Double, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_new3(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_getDescriptorSize(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_checkDetectorSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_getWinSigma(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_setSVMDetector(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_load(IntPtr, String(HasFieldMarshal), String(HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_save(IntPtr, String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    objdetect_HOGDescriptor_compute(IntPtr, IntPtr, IntPtr, Size, Size, Point[](In), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_Ptr_GrayworldWB_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_GrayworldWB_balanceWhite(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_GrayworldWB_SaturationThreshold_get(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_GrayworldWB_SaturationThreshold_set(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_createLearningBasedWB(String, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_Ptr_LearningBasedWB_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_Ptr_LearningBasedWB_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_LearningBasedWB_balanceWhite(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_LearningBasedWB_extractSimpleFeatures(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_LearningBasedWB_HistBinNum_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_LearningBasedWB_RangeMaxVal_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_LearningBasedWB_SaturationThreshold_set(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_LearningBasedWB_HistBinNum_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_LearningBasedWB_RangeMaxVal_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_LearningBasedWB_SaturationThreshold_get(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_createSimpleWB(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_Ptr_SimpleWB_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_Ptr_SimpleWB_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_SimpleWB_balanceWhite(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_SimpleWB_InputMax_get(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_SimpleWB_InputMax_set(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_SimpleWB_InputMin_get(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_SimpleWB_InputMin_set(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_SimpleWB_OutputMax_get(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_SimpleWB_OutputMax_set(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_SimpleWB_OutputMin_get(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_SimpleWB_OutputMin_set(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_SimpleWB_P_get(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_SURF_getNOctaves(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_SURF_getNOctaveLayers(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_SURF_getExtended(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_SURF_getUpright(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_SURF_setHessianThreshold(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_SURF_setNOctaves(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_SURF_setNOctaveLayers(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_SURF_setExtended(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_SURF_setUpright(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_bm3dDenoising1(IntPtr, IntPtr, IntPtr, Single, Int32, Int32, Int32, Int32, Int32, Int32, Single, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_bm3dDenoising2(IntPtr, IntPtr, Single, Int32, Int32, Int32, Int32, Int32, Int32, Single, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_dctDenoising(IntPtr, IntPtr, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_inpaint(IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_oilPainting(IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_TonemapDurand_getSaturation(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_TonemapDurand_setSaturation(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_TonemapDurand_getContrast(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_TonemapDurand_setContrast(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_TonemapDurand_getSigmaSpace(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_TonemapDurand_setSigmaSpace(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_TonemapDurand_getSigmaColor(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_TonemapDurand_setSigmaColor(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_createTonemapDurand(Single, Single, Single, Single, Single, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_Ptr_TonemapDurand_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_Ptr_TonemapDurand_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_applyChannelGains(IntPtr, IntPtr, Single, Single, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_createGrayworldWB(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xphoto_Ptr_GrayworldWB_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoWriter_getBackendName(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    wechat_qrcode_create1(String(HasFieldMarshal), String(HasFieldMarshal), String(HasFieldMarshal), String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    wechat_qrcode_WeChatQRCode_detectAndDecode(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    wechat_qrcode_Ptr_WeChatQRCode_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    wechat_qrcode_Ptr_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_BriefDescriptorExtractor_create(Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_Ptr_BriefDescriptorExtractor_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_BriefDescriptorExtractor_read(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_BriefDescriptorExtractor_write(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_BriefDescriptorExtractor_descriptorSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_BriefDescriptorExtractor_descriptorType(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_Ptr_BriefDescriptorExtractor_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_FREAK_create(Int32, Int32, Single, Int32, Int32[], Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_Ptr_FREAK_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_Ptr_FREAK_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_StarDetector_create(Int32, Int32, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_Ptr_StarDetector_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_Ptr_StarDetector_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_LUCID_create(Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_Ptr_LUCID_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_Ptr_LUCID_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_LATCH_create(Int32, Int32, Int32, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_Ptr_LATCH_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_Ptr_LATCH_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_SURF_create(Double, Int32, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_Ptr_SURF_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_Ptr_SURF_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    xfeatures2d_SURF_getHessianThreshold(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_isOpened(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_release(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_grab(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_retrieve_OutputArray(IntPtr, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_retrieve_Mat(IntPtr, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_operatorRightShift_Mat(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_read_OutputArray(IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_read_Mat(IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_set(IntPtr, Int32, Double, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_get(IntPtr, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_getBackendName(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_setExceptionMode(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_getExceptionMode(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_waitAny(IntPtr[], UIntPtr, IntPtr, Int64, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoWriter_new1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoWriter_new2(String(HasFieldMarshal), Int32, Double, Size, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoWriter_new3(String(HasFieldMarshal), Int32, Int32, Double, Size, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoWriter_new4(String(HasFieldMarshal), Int32, Double, Size, Int32[](In), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoWriter_new5(String(HasFieldMarshal), Int32, Int32, Double, Size, Int32[](In), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoWriter_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoWriter_open1(IntPtr, String(HasFieldMarshal), Int32, Double, Size, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoWriter_open2(IntPtr, String(HasFieldMarshal), Int32, Int32, Double, Size, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoWriter_isOpened(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoWriter_release(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoWriter_write(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoWriter_set(IntPtr, Int32, Double, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoWriter_get(IntPtr, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoWriter_fourcc(SByte, SByte, SByte, SByte, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_DMatch_getSize1(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_DMatch_getSize2(IntPtr, UIntPtr[](In, Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_DMatch_copy(IntPtr, IntPtr[]): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_DMatch_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_Point_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_Point_new2(UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_Point_getSize1(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_Point_getSize2(IntPtr, UIntPtr[](In, Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_Point_copy(IntPtr, IntPtr[]): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_Point_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_Point2f_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_Point2f_getSize1(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_Point2f_getSize2(IntPtr, UIntPtr[](In, Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_Point2f_copy(IntPtr, IntPtr[]): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_Point2f_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_string_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_string_new2(UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_string_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_string_getElements(IntPtr, IntPtr[](HasFieldMarshal), Int32[](HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_string_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_new1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_new2(String(HasFieldMarshal), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_new3(Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_new4(String(HasFieldMarshal), Int32, Int32[](In), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_new5(Int32, Int32, Int32[](In), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_open1(IntPtr, String(HasFieldMarshal), Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    videoio_VideoCapture_open2(IntPtr, Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_DTrees_Split_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_ImageFeatures_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_ImageFeatures_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_ImageFeatures_getKeypointsSize(IntPtr, UIntPtr[](Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_ImageFeatures_getElements(IntPtr, WImageFeatures[](Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_ImageFeatures_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_uchar_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_uchar_getSize1(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_uchar_getSize2(IntPtr, UIntPtr[](In, Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_uchar_copy(IntPtr, IntPtr[]): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_uchar_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_int_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_int_getSize1(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_int_getSize2(IntPtr, UIntPtr[](In, Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_int_copy(IntPtr, IntPtr[]): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_int_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_double_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_double_getSize1(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_double_getSize2(IntPtr, UIntPtr[](In, Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_double_copy(IntPtr, IntPtr[]): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_double_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_KeyPoint_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_KeyPoint_new3(IntPtr[], Int32, Int32[]): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_KeyPoint_getSize1(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_KeyPoint_getSize2(IntPtr, UIntPtr[](In, Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_KeyPoint_copy(IntPtr, IntPtr[]): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_KeyPoint_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_vector_DMatch_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_RotatedRect_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_RotatedRect_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_KeyPoint_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_KeyPoint_new2(UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_KeyPoint_new3(KeyPoint[](In), UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_KeyPoint_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_KeyPoint_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_KeyPoint_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_DMatch_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_DMatch_new2(UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_DMatch_new3(DMatch[](In), UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_DMatch_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_DMatch_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_DMatch_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Mat_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Mat_new2(UInt32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Mat_new3(IntPtr[], UInt32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Mat_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Mat_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Mat_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Mat_assignToArray(IntPtr, IntPtr[](HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_DTrees_Node_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_DTrees_Node_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_DTrees_Node_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_DTrees_Node_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_DTrees_Split_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_DTrees_Split_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_DTrees_Split_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2f_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2f_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2d_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2d_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2d_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2d_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point3f_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point3f_new2(UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point3f_new3(Point3f[](In), UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point3f_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point3f_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point3f_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Rect_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Rect_new2(UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Rect_new3(Rect[](In), UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Rect_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Rect_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Rect_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Rect2d_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Rect2d_new2(UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Rect2d_new3(Rect2d[](In), UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Rect2d_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Rect2d_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Rect2d_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_RotatedRect_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_RotatedRect_new2(UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_RotatedRect_new3(RotatedRect[](In), UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_RotatedRect_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec3f_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec3f_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec3f_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec3f_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec4f_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec4f_new3(Vec4f[](In), UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec4f_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec4f_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec4f_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec4i_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec4i_new3(Vec4i[](In), UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec4i_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec4i_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec4i_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec6f_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec6f_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec6f_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec6f_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2i_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2i_new2(UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2i_new3(Point[](In), UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2i_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2i_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2i_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2f_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2f_new2(UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2f_new3(Point2f[](In), UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Point2f_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_uchar_new2(UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_uchar_new3(Byte[](In), UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_uchar_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_uchar_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_uchar_copy(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_uchar_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_int32_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_int32_new2(UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_int32_new3(Int32[](In), UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_int32_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_int32_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_int32_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_float_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_float_new2(UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_float_new3(Single[](In), UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_float_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_float_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_float_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_double_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_double_new2(UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_double_new3(Double[](In), UIntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_double_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_double_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_double_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec2f_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec2f_getSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec2f_getPointer(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_Vec2f_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_QualityPSNR_staticCompute(IntPtr, IntPtr, IntPtr, Double, Scalar&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_QualityPSNR_getMaxPixelValue(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_QualityPSNR_setMaxPixelValue(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_Ptr_QualityPSNR_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_createQualitySSIM(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_Ptr_QualitySSIM_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_Ptr_QualitySSIM_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_QualitySSIM_staticCompute(IntPtr, IntPtr, IntPtr, Scalar&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_createQualityGMSD(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_Ptr_QualityGMSD_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_Ptr_QualityGMSD_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_QualityGMSD_staticCompute(IntPtr, IntPtr, IntPtr, Scalar&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_createQualityMSE(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_Ptr_QualityMSE_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_Ptr_QualityMSE_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_QualityMSE_staticCompute(IntPtr, IntPtr, IntPtr, Scalar&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_createQualityBRISQUE1(String(HasFieldMarshal), String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_createQualityBRISQUE2(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_Ptr_QualityBRISQUE_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_Ptr_QualityBRISQUE_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_QualityBRISQUE_staticCompute(IntPtr, String(HasFieldMarshal), String(HasFieldMarshal), Scalar&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_QualityBRISQUE_computeFeatures(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    string_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    string_new2(Byte[](HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    string_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    string_c_str(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    string_size(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    vector_uchar_new1(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_PHash_create(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_Ptr_PHash_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_Ptr_PHash_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_RadialVarianceHash_create(Double, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_Ptr_RadialVarianceHash_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_Ptr_RadialVarianceHash_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_RadialVarianceHash_setNumOfAngleLine(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_RadialVarianceHash_setSigma(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_RadialVarianceHash_getNumOfAngleLine(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_RadialVarianceHash_getSigma(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    line_descriptor_LSDDetector_new1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    line_descriptor_LSDDetector_new2(Double, Double, Double, Double, Double, Double, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    line_descriptor_LSDDetector_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    line_descriptor_LSDDetector_detect1(IntPtr, IntPtr, IntPtr, Int32, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    line_descriptor_LSDDetector_detect2(IntPtr, IntPtr[], Int32, IntPtr, Int32, Int32, IntPtr[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    optflow_motempl_updateMotionHistory(IntPtr, IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    optflow_motempl_calcMotionGradient(IntPtr, IntPtr, IntPtr, Double, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    optflow_motempl_calcGlobalOrientation(IntPtr, IntPtr, IntPtr, Double, Double, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    optflow_motempl_segmentMotion(IntPtr, IntPtr, IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    optflow_calcOpticalFlowSF1(IntPtr, IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    optflow_calcOpticalFlowSF2(IntPtr, IntPtr, IntPtr, Int32, Int32, Int32, Double, Double, Int32, Double, Double, Double, Int32, Double, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    optflow_calcOpticalFlowSparseToDense(IntPtr, IntPtr, IntPtr, Int32, Int32, Single, Int32, Single, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_QualityBase_compute(IntPtr, IntPtr, Scalar&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_QualityBase_getQualityMap(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_QualityBase_clear(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_QualityBase_empty(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_createQualityPSNR(IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    quality_Ptr_QualityPSNR_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_imwrite_multi_NotWindows(String(HasFieldMarshal), IntPtr, Int32[](In), Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_imwrite_multi_Windows(String(HasFieldMarshal), IntPtr, Int32[](In), Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_imwrite_multi(String, IntPtr, Int32[], Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    imgcodecs_imdecode_Mat(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_imdecode_vector(Byte*, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_imdecode_InputArray(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_imencode_vector(String(HasFieldMarshal), IntPtr, IntPtr, Int32[](In), Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_haveImageReader_NotWindows(String(HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_haveImageReader_Windows(String(HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_haveImageReader(String, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    imgcodecs_haveImageWriter(String(HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_ImgHashBase_compute(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_ImgHashBase_compare(IntPtr, IntPtr, IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_AverageHash_create(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_Ptr_AverageHash_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_Ptr_AverageHash_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_BlockMeanHash_create(Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_Ptr_BlockMeanHash_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_Ptr_BlockMeanHash_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_BlockMeanHash_setMode(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_BlockMeanHash_getMean(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_ColorMomentHash_create(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_Ptr_ColorMomentHash_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_Ptr_ColorMomentHash_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_MarrHildrethHash_create(Single, Single, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_Ptr_MarrHildrethHash_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_Ptr_MarrHildrethHash_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_MarrHildrethHash_setKernelParam(IntPtr, Single, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_MarrHildrethHash_getAlpha(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    img_hash_MarrHildrethHash_getScale(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_waitKey(Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_waitKeyEx(Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_resizeWindow(String(HasFieldMarshal), Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_moveWindow(String(HasFieldMarshal), Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_setWindowProperty(String(HasFieldMarshal), Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_setWindowTitle(String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_getWindowProperty(String(HasFieldMarshal), Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_getWindowImageRect(String(HasFieldMarshal), Rect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_setMouseCallback(String, MouseCallback(HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_getMouseWheelDelta(Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_selectROI1(String(HasFieldMarshal), IntPtr, Int32, Int32, Rect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_selectROI2(IntPtr, Int32, Int32, Rect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_selectROIs(String(HasFieldMarshal), IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_createTrackbar(String(HasFieldMarshal), String(HasFieldMarshal), IntPtr, Int32, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_createTrackbar(String(HasFieldMarshal), String(HasFieldMarshal), IntPtr, Int32, TrackbarCallbackNative, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_createTrackbar(String(HasFieldMarshal), String(HasFieldMarshal), Int32&, Int32, TrackbarCallbackNative, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_getTrackbarPos(String(HasFieldMarshal), String(HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_setTrackbarPos(String, String, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_setTrackbarMax(String(HasFieldMarshal), String(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_setTrackbarMin(String(HasFieldMarshal), String(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_cvGetWindowHandle(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_imread_NotWindows(String(HasFieldMarshal), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_imread_Windows(String(HasFieldMarshal), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_imread(String, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig
    imgcodecs_imreadmulti_NotWindows(String(HasFieldMarshal), IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_imreadmulti_Windows(String(HasFieldMarshal), IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_imreadmulti(String, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    imgcodecs_imwrite_NotWindows(String(HasFieldMarshal), IntPtr, Int32[](In), Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_imwrite_Windows(String(HasFieldMarshal), IntPtr, Int32[](In), Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgcodecs_imwrite(String, IntPtr, Int32[], Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    flann_Ptr_LinearIndexParams_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_KDTreeIndexParams_new(Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_KDTreeIndexParams_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_KDTreeIndexParams_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_KMeansIndexParams_new(Int32, Int32, FlannCentersInit(HasFieldMarshal), Single, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_KMeansIndexParams_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_KMeansIndexParams_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_LshIndexParams_new(Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_LshIndexParams_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_LshIndexParams_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_CompositeIndexParams_new(Int32, Int32, Int32, FlannCentersInit, Single, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_CompositeIndexParams_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_CompositeIndexParams_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_AutotunedIndexParams_new(Single, Single, Single, Single, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_AutotunedIndexParams_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_AutotunedIndexParams_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_SavedIndexParams_new(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_SavedIndexParams_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_SavedIndexParams_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_SearchParams_new(Int32, Single, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_SearchParams_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_SearchParams_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_namedWindow(String(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_destroyWindow(String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_destroyAllWindows(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_startWindowThread(Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_imshow(String(HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    highgui_imshow_umat(String(HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_superres_DnnSuperResImpl_setPreferableTarget(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_superres_DnnSuperResImpl_upsample(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_superres_DnnSuperResImpl_upsampleMultioutput(IntPtr, IntPtr, IntPtr, Int32[], Int32, String[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_superres_DnnSuperResImpl_getScale(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_superres_DnnSuperResImpl_getAlgorithm(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Index_new(IntPtr, IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Index_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Index_knnSearch1(IntPtr, Single[](In), Int32, Int32[](Out), Single[](Out), Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Index_knnSearch2(IntPtr, IntPtr, IntPtr, IntPtr, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Index_knnSearch3(IntPtr, IntPtr, Int32[](Out), Single[](Out), Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Index_radiusSearch1(IntPtr, Single[](In), Int32, Int32[](Out), Int32, Single[](Out), Int32, Double, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Index_radiusSearch2(IntPtr, IntPtr, IntPtr, IntPtr, Double, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Index_radiusSearch3(IntPtr, IntPtr, Int32[](Out), Int32, Single[](Out), Int32, Double, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Index_save(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_IndexParams_new(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_IndexParams_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_IndexParams_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_IndexParams_getString(IntPtr, String(HasFieldMarshal), String(HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_IndexParams_getInt(IntPtr, String(HasFieldMarshal), Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_IndexParams_getDouble(IntPtr, String(HasFieldMarshal), Double, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_IndexParams_setString(IntPtr, String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_IndexParams_setInt(IntPtr, String(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_IndexParams_setDouble(IntPtr, String(HasFieldMarshal), Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_IndexParams_setFloat(IntPtr, String(HasFieldMarshal), Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_IndexParams_setBool(IntPtr, String(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_IndexParams_setAlgorithm(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_LinearIndexParams_new(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    flann_Ptr_LinearIndexParams_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_Ptr_BackgroundSubtractorGMG_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_getMaxFeatures(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_setMaxFeatures(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_getNumFrames(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_setNumFrames(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_getQuantizationLevels(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_setQuantizationLevels(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_getBackgroundPrior(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_setBackgroundPrior(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_getSmoothingRadius(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_setSmoothingRadius(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_getDecisionThreshold(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_setDecisionThreshold(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_getMinVal(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_setMinVal(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_getMaxVal(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorGMG_setMaxVal(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_superres_DnnSuperResImpl_new1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_superres_DnnSuperResImpl_new2(String(HasFieldMarshal), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_superres_DnnSuperResImpl_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_superres_DnnSuperResImpl_readModel1(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_superres_DnnSuperResImpl_readModel2(IntPtr, String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_superres_DnnSuperResImpl_setModel(IntPtr, String(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_superres_DnnSuperResImpl_setPreferableBackend(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_getPredefinedDictionary(Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_readDictionary(String, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_detectCharucoDiamond(IntPtr, IntPtr[](HasFieldMarshal), Int32, Int32[], IntPtr, Single, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_drawDetectedDiamonds(IntPtr, IntPtr[](HasFieldMarshal), Int32, Int32[], IntPtr, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_Dictionary_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_Dictionary_setMarkerSize(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_Dictionary_setMaxCorrectionBits(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_Dictionary_getBytesList(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_Dictionary_getMarkerSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_Dictionary_getMaxCorrectionBits(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_Dictionary_identify(IntPtr, IntPtr, Int32&(Out), Int32&(Out), Double, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_Dictionary_getDistanceToId(IntPtr, IntPtr, Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_Dictionary_generateImageMarker(IntPtr, Int32, Int32, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_Dictionary_getByteListFromBits(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_Dictionary_getBitsFromByteList(IntPtr, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_createBackgroundSubtractorMOG(Int32, Int32, Double, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_Ptr_BackgroundSubtractorMOG_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_Ptr_BackgroundSubtractorMOG_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorMOG_getHistory(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorMOG_setHistory(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorMOG_getNMixtures(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorMOG_setNMixtures(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorMOG_getBackgroundRatio(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorMOG_setBackgroundRatio(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorMOG_getNoiseSigma(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_BackgroundSubtractorMOG_setNoiseSigma(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_createBackgroundSubtractorGMG(Int32, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    bgsegm_Ptr_BackgroundSubtractorGMG_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_getDegree(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_setDegree(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_getC(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_setC(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_getP(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_setP(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_getNu(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_setNu(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_getClassWeights(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_setClassWeights(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_getTermCriteria(IntPtr, TermCriteria&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_setTermCriteria(IntPtr, TermCriteria): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_getKernelType(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_setKernel(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_getSupportVectors(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_getDecisionFunction(IntPtr, Int32, IntPtr, IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_getDefaultGrid(Int32, ParamGrid&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_create(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_SVM_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_SVM_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_load(String, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_loadFromString(String, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    HandleException(ExceptionStatus): PrivateScope, Public, Static, HideBySig
    LoadLibraries(IEnumerable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    TryPInvoke(): PrivateScope, Public, Static, HideBySig
    IsWindows(): PrivateScope, Public, Static, HideBySig
    IsUnix(): PrivateScope, Public, Static, HideBySig
    IsMono(): PrivateScope, Public, Static, HideBySig
    IsWasm(): PrivateScope, Public, Static, HideBySig
    aruco_detectMarkers(IntPtr, IntPtr, IntPtr, IntPtr, DetectorParameters&, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_drawDetectedMarkers(IntPtr, IntPtr[](HasFieldMarshal), Int32, Int32[], Int32[](HasFieldMarshal), Int32, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_drawDetectedMarkers(IntPtr, IntPtr[](HasFieldMarshal), Int32, Int32[], IntPtr, Int32, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    aruco_estimatePoseSingleMarkers(IntPtr[](HasFieldMarshal), Int32, Int32[], Single, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_NormalBayesClassifier_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_NormalBayesClassifier_load(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_NormalBayesClassifier_loadFromString(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_RTrees_getCalculateVarImportance(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_RTrees_setCalculateVarImportance(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_RTrees_getActiveVarCount(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_RTrees_setActiveVarCount(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_RTrees_getTermCriteria(IntPtr, TermCriteria&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_RTrees_setTermCriteria(IntPtr, TermCriteria): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_RTrees_getVarImportance(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_RTrees_create(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_RTrees_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_RTrees_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_RTrees_load(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_RTrees_loadFromString(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_StatModel_clear(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_StatModel_getVarCount(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_StatModel_empty(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_StatModel_isTrained(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_StatModel_isClassifier(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_StatModel_train2(IntPtr, IntPtr, Int32, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_StatModel_predict(IntPtr, IntPtr, IntPtr, Int32, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_getType(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_setType(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_getGamma(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_setGamma(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_getCoef0(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_SVM_setCoef0(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_KNearest_findNearest(IntPtr, IntPtr, Int32, IntPtr, IntPtr, IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_KNearest_create(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_KNearest_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_KNearest_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_KNearest_load(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_KNearest_loadFromString(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_getLearningRate(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_setLearningRate(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_getIterations(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_setIterations(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_getRegularization(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_setRegularization(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_getTrainMethod(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_setTrainMethod(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_getMiniBatchSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_setMiniBatchSize(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_getTermCriteria(IntPtr, TermCriteria&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_setTermCriteria(IntPtr, TermCriteria): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_predict(IntPtr, IntPtr, IntPtr, Int32, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_get_learnt_thetas(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_create(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_LogisticRegression_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_LogisticRegression_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_load(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_LogisticRegression_loadFromString(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_NormalBayesClassifier_predictProb(IntPtr, IntPtr, IntPtr, IntPtr, Int32, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_NormalBayesClassifier_create(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_NormalBayesClassifier_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_load(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_loadFromString(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_getClustersNumber(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_setClustersNumber(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_getCovarianceMatrixType(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_setCovarianceMatrixType(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_getTermCriteria(IntPtr, TermCriteria&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_setTermCriteria(IntPtr, TermCriteria): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_getWeights(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_getMeans(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_getCovs(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_predict2(IntPtr, IntPtr, IntPtr, Vec2d&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_trainEM(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_trainE(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_trainM(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_create(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_EM_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_EM_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_load(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_EM_loadFromString(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_KNearest_getDefaultK(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_KNearest_setDefaultK(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_KNearest_getIsClassifier(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_KNearest_setIsClassifier(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_KNearest_getEmax(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_KNearest_setEmax(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_KNearest_getAlgorithmType(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_KNearest_setAlgorithmType(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_Boost_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Boost_load(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Boost_loadFromString(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_getMaxCategories(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_setMaxCategories(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_getMaxDepth(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_setMaxDepth(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_getMinSampleCount(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_setMinSampleCount(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_getCVFolds(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_setCVFolds(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_getUseSurrogates(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_setUseSurrogates(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_getUse1SERule(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_setUse1SERule(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_getTruncatePrunedTree(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_setTruncatePrunedTree(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_getRegressionAccuracy(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_setRegressionAccuracy(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_getPriors(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_setPriors(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_getRoots(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_getNodes(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_getSplits(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_getSubsets(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_DTrees_create(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_DTrees_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_DTrees_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_getBackpropWeightScale(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_setBackpropWeightScale(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_getBackpropMomentumScale(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_setBackpropMomentumScale(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_getRpropDW0(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_setRpropDW0(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_getRpropDWPlus(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_setRpropDWPlus(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_getRpropDWMinus(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_setRpropDWMinus(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_getRpropDWMin(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_setRpropDWMin(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_getRpropDWMax(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_setRpropDWMax(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_getWeights(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_create(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_ANN_MLP_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_ANN_MLP_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_load(String, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_loadFromString(String, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Boost_getBoostType(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Boost_setBoostType(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Boost_getWeakCount(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Boost_setWeakCount(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Boost_getWeightTrimRate(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Boost_setWeightTrimRate(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Boost_create(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_Ptr_Boost_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_segmentation_IntelligentScissorsMB_buildMap(IntPtr, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_segmentation_IntelligentScissorsMB_getContour(IntPtr, Point, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_new1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_new2(Rect, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_initDelaunay(IntPtr, Rect): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_insert1(IntPtr, Point2f, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_insert2(IntPtr, Point2f[](HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_locate(IntPtr, Point2f, Int32&(Out), Int32&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_findNearest(IntPtr, Point2f, Point2f&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_getEdgeList(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_getLeadingEdgeList(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_getTriangleList(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_getVoronoiFacetList(IntPtr, Int32[](In, HasFieldMarshal), Int32, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_getVertex(IntPtr, Int32, Int32&(Out), Point2f&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_getEdge(IntPtr, Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_nextEdge(IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_rotateEdge(IntPtr, Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_symEdge(IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_edgeOrg(IntPtr, Int32, Point2f&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Subdiv2D_edgeDst(IntPtr, Int32, Point2f&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_setTrainMethod(IntPtr, Int32, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_getTrainMethod(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_setActivationFunction(IntPtr, Int32, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_setLayerSizes(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_getLayerSizes(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_getTermCriteria(IntPtr, TermCriteria&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    ml_ANN_MLP_setTermCriteria(IntPtr, TermCriteria): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineIterator_new(IntPtr, Point, Point, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineIterator_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineIterator_getValuePosAndShiftToNext(IntPtr, IntPtr&(Out), Point&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineIterator_ptr_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineIterator_ptr0_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineIterator_step_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineIterator_elemSize_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineIterator_err_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineIterator_count_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineIterator_minusDelta_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineIterator_plusDelta_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineIterator_minusStep_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineIterator_plusStep_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineSegmentDetector_detect_OutputArray(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineSegmentDetector_detect_vector(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineSegmentDetector_drawSegments(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_LineSegmentDetector_compareSegments(IntPtr, Size, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_createLineSegmentDetector(Int32, Double, Double, Double, Double, Double, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Ptr_LineSegmentDetector_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Ptr_LineSegmentDetector_get(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_segmentation_IntelligentScissorsMB_new(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_segmentation_IntelligentScissorsMB_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_segmentation_IntelligentScissorsMB_setWeights(IntPtr, Single, Single, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_segmentation_IntelligentScissorsMB_setGradientMagnitudeMaxLimit(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_segmentation_IntelligentScissorsMB_setEdgeFeatureZeroCrossingParameters(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_segmentation_IntelligentScissorsMB_setEdgeFeatureCannyParameters(IntPtr, Double, Double, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_segmentation_IntelligentScissorsMB_applyImage(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_segmentation_IntelligentScissorsMB_applyImageFeatures(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughBallard_getVotesThreshold(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_createGeneralizedHoughGuil(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Ptr_GeneralizedHoughGuil_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Ptr_GeneralizedHoughGuil_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_setXi(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_getXi(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_setLevels(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_getLevels(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_setAngleEpsilon(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_getAngleEpsilon(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_setMinAngle(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_getMinAngle(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_setMaxAngle(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_getMaxAngle(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_setAngleStep(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_getAngleStep(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_setAngleThresh(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_getAngleThresh(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_setMinScale(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_getMinScale(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_setMaxScale(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_getMaxScale(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_setScaleStep(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_getScaleStep(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_setScaleThresh(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_getScaleThresh(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_setPosThresh(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughGuil_getPosThresh(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Ptr_CLAHE_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Ptr_CLAHE_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_CLAHE_apply(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_CLAHE_setClipLimit(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_CLAHE_getClipLimit(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_CLAHE_setTilesGridSize(IntPtr, Size): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_CLAHE_getTilesGridSize(IntPtr, Size&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_CLAHE_collectGarbage(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHough_setTemplate1(IntPtr, IntPtr, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHough_setTemplate2(IntPtr, IntPtr, IntPtr, IntPtr, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHough_detect1(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHough_detect2(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHough_setCannyLowThresh(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHough_getCannyLowThresh(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHough_setCannyHighThresh(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHough_getCannyHighThresh(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHough_setMinDist(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHough_getMinDist(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHough_setDp(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHough_getDp(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHough_setMaxBufferSize(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHough_getMaxBufferSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_createGeneralizedHoughBallard(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Ptr_GeneralizedHoughBallard_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Ptr_GeneralizedHoughBallard_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughBallard_setLevels(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughBallard_getLevels(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GeneralizedHoughBallard_setVotesThreshold(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_applyColorMap2(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_line(IntPtr, Point, Point, Scalar, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_arrowedLine(IntPtr, Point, Point, Scalar, Int32, Int32, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_rectangle_InputOutputArray_Point(IntPtr, Point, Point, Scalar, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_rectangle_InputOutputArray_Rect(IntPtr, Rect, Scalar, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_rectangle_Mat_Point(IntPtr, Point, Point, Scalar, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_rectangle_Mat_Rect(IntPtr, Rect, Scalar, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_circle(IntPtr, Point, Int32, Scalar, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_ellipse1(IntPtr, Point, Size, Double, Double, Double, Scalar, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_ellipse2(IntPtr, RotatedRect, Scalar, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_drawMarker(IntPtr, Point, Scalar, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fillConvexPoly_Mat(IntPtr, Point[], Int32, Scalar, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fillConvexPoly_InputOutputArray(IntPtr, IntPtr, Scalar, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fillPoly_Mat(IntPtr, IntPtr[], Int32[], Int32, Scalar, Int32, Int32, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fillPoly_InputOutputArray(IntPtr, IntPtr, Scalar, Int32, Int32, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_polylines_Mat(IntPtr, IntPtr[], Int32[], Int32, Int32, Scalar, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_polylines_InputOutputArray(IntPtr, IntPtr, Int32, Scalar, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_drawContours_vector(IntPtr, IntPtr[], Int32, Int32[], Int32, Scalar, Int32, Int32, Vec4i[], Int32, Int32, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_drawContours_vector(IntPtr, IntPtr[], Int32, Int32[], Int32, Scalar, Int32, Int32, IntPtr, Int32, Int32, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_drawContours_InputArray(IntPtr, IntPtr[], Int32, Int32, Scalar, Int32, Int32, IntPtr, Int32, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_clipLine1(Size, Point&, Point&, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_clipLine2(Rect, Point&, Point&, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_ellipse2Poly_int(Point, Size, Int32, Int32, Int32, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_ellipse2Poly_double(Point2d, Size2d, Int32, Int32, Int32, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_putText(IntPtr, String(HasFieldMarshal), Point, Int32, Double, Scalar, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_getTextSize(String(HasFieldMarshal), Int32, Double, Int32, Int32&(Out), Size&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_getFontScaleFromHeight(Int32, Int32, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_createCLAHE(Double, Size, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_convexityDefects_Point(Point[], Int32, Int32[], Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_convexityDefects_Point2f(Point2f[], Int32, Int32[], Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_isContourConvex_InputArray(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_isContourConvex_Point(Point[], Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_isContourConvex_Point2f(Point2f[], Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_intersectConvexConvex_InputArray(IntPtr, IntPtr, IntPtr, Int32, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_intersectConvexConvex_Point(Point[], Int32, Point[], Int32, IntPtr, Int32, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_intersectConvexConvex_Point2f(Point2f[], Int32, Point2f[], Int32, IntPtr, Int32, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fitEllipse_InputArray(IntPtr, RotatedRect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fitEllipse_Point(Point[], Int32, RotatedRect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fitEllipse_Point2f(Point2f[], Int32, RotatedRect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fitEllipseAMS_InputArray(IntPtr, RotatedRect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fitEllipseAMS_Point(Point[], Int32, RotatedRect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fitEllipseAMS_Point2f(Point2f[], Int32, RotatedRect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fitEllipseDirect_InputArray(IntPtr, RotatedRect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fitEllipseDirect_Point(Point[], Int32, RotatedRect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fitEllipseDirect_Point2f(Point2f[], Int32, RotatedRect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fitLine_InputArray(IntPtr, IntPtr, Int32, Double, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fitLine_Point(Point[], Int32, Single[](In, Out), Int32, Double, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fitLine_Point2f(Point2f[], Int32, Single[](In, Out), Int32, Double, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fitLine_Point3i(Point3i[], Int32, Single[](In, Out), Int32, Double, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_fitLine_Point3f(Point3f[], Int32, Single[](In, Out), Int32, Double, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_pointPolygonTest_InputArray(IntPtr, Point2f, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_pointPolygonTest_Point(Point[], Int32, Point2f, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_pointPolygonTest_Point2f(Point2f[], Int32, Point2f, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_rotatedRectangleIntersection_OutputArray(RotatedRect, RotatedRect, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_rotatedRectangleIntersection_vector(RotatedRect, RotatedRect, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_applyColorMap1(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_arcLength_InputArray(IntPtr, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_arcLength_Point(Point[], Int32, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_arcLength_Point2f(Point2f[], Int32, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_boundingRect_InputArray(IntPtr, Rect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_boundingRect_Point(Point[], Int32, Rect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_boundingRect_Point2f(Point2f[], Int32, Rect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_contourArea_InputArray(IntPtr, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_contourArea_Point(Point[](HasFieldMarshal), Int32, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_contourArea_Point2f(Point2f[](HasFieldMarshal), Int32, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_minAreaRect_InputArray(IntPtr, RotatedRect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_minAreaRect_Point(Point[](HasFieldMarshal), Int32, RotatedRect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_minAreaRect_Point2f(Point2f[](HasFieldMarshal), Int32, RotatedRect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_boxPoints_OutputArray(RotatedRect, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_boxPoints_Point2f(RotatedRect, Point2f[](Out, HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_minEnclosingCircle_InputArray(IntPtr, Point2f&(Out), Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_minEnclosingCircle_Point(Point[], Int32, Point2f&(Out), Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_minEnclosingCircle_Point2f(Point2f[], Int32, Point2f&(Out), Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_minEnclosingTriangle_InputOutputArray(IntPtr, IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_minEnclosingTriangle_Point(Point[](In, HasFieldMarshal), Int32, IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_minEnclosingTriangle_Point2f(Point2f[](In, HasFieldMarshal), Int32, IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_matchShapes_InputArray(IntPtr, IntPtr, Int32, Double, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_matchShapes_Point(Point[], Int32, Point[], Int32, Int32, Double, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_convexHull_InputArray(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_convexHull_Point_ReturnsPoints(Point[], Int32, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_convexHull_Point2f_ReturnsPoints(Point2f[], Int32, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_convexHull_Point_ReturnsIndices(Point[], Int32, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_convexHull_Point2f_ReturnsIndices(Point2f[], Int32, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_convexityDefects_InputArray(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_calcBackProject(IntPtr[], Int32, Int32[], IntPtr, IntPtr, IntPtr[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_compareHist(IntPtr, IntPtr, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_equalizeHist(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_EMD(IntPtr, IntPtr, Int32, IntPtr, Single&(Out), IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_watershed(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_pyrMeanShiftFiltering(IntPtr, IntPtr, Double, Double, Int32, TermCriteria): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_grabCut(IntPtr, IntPtr, Rect, IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_distanceTransformWithLabels(IntPtr, IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_distanceTransform(IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_floodFill1(IntPtr, Point, Scalar, Rect&(Out), Scalar, Scalar, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_floodFill2(IntPtr, IntPtr, Point, Scalar, Rect&(Out), Scalar, Scalar, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_blendLinear(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_cvtColor(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_cvtColorTwoPlane(IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_demosaicing(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_moments(IntPtr, Int32, NativeStruct&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_matchTemplate(IntPtr, IntPtr, IntPtr, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_connectedComponentsWithAlgorithm(IntPtr, IntPtr, Int32, Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_connectedComponents(IntPtr, IntPtr, Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_connectedComponentsWithStatsWithAlgorithm(IntPtr, IntPtr, IntPtr, IntPtr, Int32, Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_connectedComponentsWithStats(IntPtr, IntPtr, IntPtr, IntPtr, Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_findContours1_vector(IntPtr, IntPtr, IntPtr, Int32, Int32, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_findContours1_OutputArray(IntPtr, IntPtr, IntPtr, Int32, Int32, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_findContours2_vector(IntPtr, IntPtr, Int32, Int32, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_findContours2_OutputArray(IntPtr, IntPtr, Int32, Int32, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_approxPolyDP_InputArray(IntPtr, IntPtr, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_approxPolyDP_Point(Point[], Int32, IntPtr, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_approxPolyDP_Point2f(Point2f[], Int32, IntPtr, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_warpPerspective_MisArray(IntPtr, IntPtr, Single[,](HasFieldMarshal), Int32, Int32, Size, Int32, Int32, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_remap(IntPtr, IntPtr, IntPtr, IntPtr, Int32, Int32, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_convertMaps(IntPtr, IntPtr, IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_getRotationMatrix2D(Point2f, Double, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_invertAffineTransform(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_getPerspectiveTransform1(Point2f[], Point2f[], IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_getPerspectiveTransform2(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_getAffineTransform1(Point2f[], Point2f[], IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_getAffineTransform2(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_getRectSubPix(IntPtr, Size, Point2f, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_logPolar(IntPtr, IntPtr, Point2f, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_linearPolar(IntPtr, IntPtr, Point2f, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_warpPolar(IntPtr, IntPtr, Size, Point2f, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_integral1(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_integral2(IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_integral3(IntPtr, IntPtr, IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_accumulate(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_accumulateSquare(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_accumulateProduct(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_accumulateWeighted(IntPtr, IntPtr, Double, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_phaseCorrelate(IntPtr, IntPtr, IntPtr, Double&(Out), Point2d&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_createHanningWindow(IntPtr, Size, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_threshold(IntPtr, IntPtr, Double, Double, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_adaptiveThreshold(IntPtr, IntPtr, Double, Int32, Int32, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_pyrDown(IntPtr, IntPtr, Size, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_buildPyramid(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_pyrUp(IntPtr, IntPtr, Size, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_calcHist(IntPtr[], Int32, Int32[], IntPtr, IntPtr, Int32, Int32[], IntPtr[], Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_bilateralFilter(IntPtr, IntPtr, Int32, Double, Double, BorderTypes): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_boxFilter(IntPtr, IntPtr, Int32, Size, Point, Int32, BorderTypes): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_sqrBoxFilter(IntPtr, IntPtr, Int32, Size, Point, Int32, BorderTypes): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_blur(IntPtr, IntPtr, Size, Point, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_filter2D(IntPtr, IntPtr, Int32, IntPtr, Point, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_sepFilter2D(IntPtr, IntPtr, Int32, IntPtr, IntPtr, Point, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Sobel(IntPtr, IntPtr, Int32, Int32, Int32, Int32, Double, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_spatialGradient(IntPtr, IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Scharr(IntPtr, IntPtr, Int32, Int32, Int32, Double, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Laplacian(IntPtr, IntPtr, Int32, Int32, Double, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Canny1(IntPtr, IntPtr, Double, Double, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_Canny2(IntPtr, IntPtr, IntPtr, Double, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_cornerMinEigenVal(IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_cornerHarris(IntPtr, IntPtr, Int32, Int32, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_cornerEigenValsAndVecs(IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_preCornerDetect(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_cornerSubPix(IntPtr, IntPtr, Size, Size, TermCriteria): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_goodFeaturesToTrack(IntPtr, IntPtr, Int32, Double, Double, IntPtr, Int32, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_HoughLines(IntPtr, IntPtr, Double, Double, Int32, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_HoughLinesP(IntPtr, IntPtr, Double, Double, Int32, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_HoughLinesPointSet(IntPtr, IntPtr, Int32, Int32, Double, Double, Double, Double, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_HoughCircles(IntPtr, IntPtr, Int32, Double, Double, Double, Double, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_erode(IntPtr, IntPtr, IntPtr, Point, Int32, Int32, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_dilate(IntPtr, IntPtr, IntPtr, Point, Int32, Int32, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_morphologyEx(IntPtr, IntPtr, Int32, IntPtr, Point, Int32, Int32, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_resize(IntPtr, IntPtr, Size, Double, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_warpAffine(IntPtr, IntPtr, IntPtr, Size, Int32, Int32, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_warpPerspective_MisInputArray(IntPtr, IntPtr, IntPtr, Size, Int32, Int32, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KAZE_getNOctaves(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KAZE_setThreshold(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KAZE_getThreshold(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KAZE_setUpright(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KAZE_getUpright(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AKAZE_create(Int32, Int32, Int32, Single, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_AKAZE_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_AKAZE_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AKAZE_setDescriptorType(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AKAZE_getDescriptorType(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AKAZE_setDescriptorSize(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AKAZE_getDescriptorSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AKAZE_setDescriptorChannels(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AKAZE_getDescriptorChannels(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AKAZE_setThreshold(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AKAZE_getThreshold(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AKAZE_setNOctaves(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AKAZE_getNOctaves(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AKAZE_setNOctaveLayers(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AKAZE_getNOctaveLayers(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AKAZE_setDiffusivity(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AKAZE_getDiffusivity(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_getGaussianKernel(Int32, Double, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_getDerivKernels(IntPtr, IntPtr, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_getGaborKernel(Size, Double, Double, Double, Double, Double, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_getStructuringElement(Int32, Size, Point, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_medianBlur(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    imgproc_GaussianBlur(IntPtr, IntPtr, Size, Double, Double, BorderTypes): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_GFTTDetector_create(Int32, Double, Double, Int32, Int32, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_GFTTDetector_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_GFTTDetector_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_GFTTDetector_setMaxFeatures(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_GFTTDetector_getMaxFeatures(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_GFTTDetector_setQualityLevel(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_GFTTDetector_getQualityLevel(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_GFTTDetector_setMinDistance(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_GFTTDetector_getMinDistance(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_GFTTDetector_setBlockSize(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_GFTTDetector_getBlockSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_GFTTDetector_setHarrisDetector(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_GFTTDetector_getHarrisDetector(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_GFTTDetector_setK(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_GFTTDetector_getK(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_SimpleBlobDetector_create(WParams&, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_SimpleBlobDetector_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_SimpleBlobDetector_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KAZE_create(Int32, Int32, Single, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_KAZE_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_KAZE_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KAZE_setDiffusivity(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KAZE_getDiffusivity(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KAZE_setExtended(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KAZE_getExtended(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KAZE_setNOctaveLayers(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KAZE_getNOctaveLayers(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KAZE_setNOctaves(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_MSER_getDelta(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_MSER_setMinArea(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_MSER_getMinArea(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_MSER_setMaxArea(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_MSER_getMaxArea(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_MSER_setPass2Only(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_MSER_getPass2Only(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_FAST1(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_FAST2(IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_FastFeatureDetector_create(Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_FastFeatureDetector_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_FastFeatureDetector_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_FastFeatureDetector_setThreshold(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_FastFeatureDetector_getThreshold(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_FastFeatureDetector_setNonmaxSuppression(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_FastFeatureDetector_getNonmaxSuppression(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_FastFeatureDetector_setType(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_FastFeatureDetector_getType(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AGAST(IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AgastFeatureDetector_create(Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_AgastFeatureDetector_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_AgastFeatureDetector_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AgastFeatureDetector_setThreshold(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AgastFeatureDetector_getThreshold(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AgastFeatureDetector_setNonmaxSuppression(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AgastFeatureDetector_getNonmaxSuppression(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AgastFeatureDetector_setType(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_AgastFeatureDetector_getType(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_BRISK_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_BRISK_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_create(Int32, Single, Int32, Int32, Int32, Int32, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_ORB_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_ORB_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_setMaxFeatures(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_getMaxFeatures(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_setScaleFactor(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_getScaleFactor(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_setNLevels(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_getNLevels(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_setEdgeThreshold(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_getEdgeThreshold(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_setFirstLevel(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_getFirstLevel(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_setWTA_K(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_getWTA_K(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_setScoreType(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_getScoreType(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_setPatchSize(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_getPatchSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_setFastThreshold(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_ORB_getFastThreshold(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_MSER_create(Int32, Int32, Int32, Double, Double, Int32, Double, Double, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_MSER_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_MSER_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_MSER_detectRegions(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_MSER_setDelta(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_BFMatcher_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_FlannBasedMatcher_new(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_FlannBasedMatcher_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_FlannBasedMatcher_add(IntPtr, IntPtr[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_FlannBasedMatcher_clear(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_FlannBasedMatcher_train(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_FlannBasedMatcher_isMaskSupported(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_FlannBasedMatcher_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_FlannBasedMatcher_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Feature2D_detect_Mat1(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Feature2D_detect_Mat2(IntPtr, IntPtr[], Int32, IntPtr, IntPtr[]): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Feature2D_detect_InputArray(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Feature2D_compute1(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Feature2D_compute2(IntPtr, IntPtr[], Int32, IntPtr, IntPtr[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Feature2D_detectAndCompute(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Feature2D_descriptorSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Feature2D_descriptorType(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Feature2D_defaultNorm(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Feature2D_empty(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Feature2D_write(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Feature2D_read(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Feature2D_getDefaultName(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_SIFT_create(Int32, Int32, Double, Double, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_SIFT_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_SIFT_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BRISK_create1(Int32, Int32, Single, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BRISK_create2(Single[], Int32, Int32[], Int32, Single, Single, Int32[], Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BRISK_create3(Int32, Int32, Single[], Int32, Int32[], Int32, Single, Single, Int32[], Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWImgDescriptorExtractor_new2_RawPtr(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWImgDescriptorExtractor_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWImgDescriptorExtractor_setVocabulary(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWImgDescriptorExtractor_getVocabulary(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWImgDescriptorExtractor_compute11(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWImgDescriptorExtractor_compute12(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWImgDescriptorExtractor_compute2(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWImgDescriptorExtractor_descriptorSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWImgDescriptorExtractor_descriptorType(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_DescriptorMatcher_add(IntPtr, IntPtr[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_DescriptorMatcher_getTrainDescriptors(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_DescriptorMatcher_clear(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_DescriptorMatcher_empty(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_DescriptorMatcher_isMaskSupported(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_DescriptorMatcher_train(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_DescriptorMatcher_match1(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_DescriptorMatcher_knnMatch1(IntPtr, IntPtr, IntPtr, IntPtr, Int32, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_DescriptorMatcher_radiusMatch1(IntPtr, IntPtr, IntPtr, IntPtr, Single, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_DescriptorMatcher_match2(IntPtr, IntPtr, IntPtr, IntPtr[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_DescriptorMatcher_knnMatch2(IntPtr, IntPtr, IntPtr, Int32, IntPtr[], Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_DescriptorMatcher_radiusMatch2(IntPtr, IntPtr, IntPtr, Single, IntPtr[], Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_DescriptorMatcher_create(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_DescriptorMatcher_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_DescriptorMatcher_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BFMatcher_new(Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BFMatcher_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BFMatcher_isMaskSupported(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_Ptr_BFMatcher_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_LBPHFaceRecognizer_getHistograms(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_LBPHFaceRecognizer_getLabels(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_Ptr_LBPHFaceRecognizer_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_Ptr_LBPHFaceRecognizer_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_drawKeypoints(IntPtr, KeyPoint[], Int32, IntPtr, Scalar, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_drawMatches(IntPtr, KeyPoint[], Int32, IntPtr, KeyPoint[], Int32, DMatch[], Int32, IntPtr, Scalar, Scalar, Byte[], Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_drawMatchesKnn(IntPtr, KeyPoint[], Int32, IntPtr, KeyPoint[], Int32, IntPtr[], Int32, Int32[], IntPtr, Scalar, Scalar, IntPtr[], Int32, Int32[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_evaluateFeatureDetector(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Single&(Out), Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_computeRecallPrecisionCurve(IntPtr[], Int32, Int32[], IntPtr[], Int32, Int32[], IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_getRecall(Point2f[], Int32, Single, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_getNearestPoint(Point2f[], Int32, Single, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KeyPointsFilter_runByImageBorder(IntPtr, Size, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KeyPointsFilter_runByKeypointSize(IntPtr, Single, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KeyPointsFilter_runByPixelsMask(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KeyPointsFilter_removeDuplicated(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KeyPointsFilter_removeDuplicatedSorted(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_KeyPointsFilter_retainBest(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWTrainer_add(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWTrainer_getDescriptors(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWTrainer_descriptorsCount(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWTrainer_clear(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWKMeansTrainer_new(Int32, TermCriteria, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWKMeansTrainer_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWKMeansTrainer_cluster1(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWKMeansTrainer_cluster2(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWImgDescriptorExtractor_new1_Ptr(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWImgDescriptorExtractor_new2_Ptr(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    features2d_BOWImgDescriptorExtractor_new1_RawPtr(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FaceRecognizer_getThreshold(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FaceRecognizer_setThreshold(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_BasicFaceRecognizer_getNumComponents(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_BasicFaceRecognizer_setNumComponents(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_BasicFaceRecognizer_getThreshold(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_BasicFaceRecognizer_setThreshold(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_BasicFaceRecognizer_getProjections(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_BasicFaceRecognizer_getLabels(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_BasicFaceRecognizer_getEigenValues(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_BasicFaceRecognizer_getEigenVectors(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_BasicFaceRecognizer_getMean(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_EigenFaceRecognizer_create(Int32, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_Ptr_EigenFaceRecognizer_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_Ptr_EigenFaceRecognizer_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FisherFaceRecognizer_create(Int32, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_Ptr_FisherFaceRecognizer_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_Ptr_FisherFaceRecognizer_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_LBPHFaceRecognizer_create(Int32, Int32, Int32, Int32, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_LBPHFaceRecognizer_getGridX(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_LBPHFaceRecognizer_setGridX(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_LBPHFaceRecognizer_getGridY(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_LBPHFaceRecognizer_setGridY(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_LBPHFaceRecognizer_getRadius(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_LBPHFaceRecognizer_setRadius(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_LBPHFaceRecognizer_getNeighbors(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_LBPHFaceRecognizer_setNeighbors(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_LBPHFaceRecognizer_getThreshold(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_LBPHFaceRecognizer_setThreshold(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_n_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_n_iter_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_n_iter_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_verbose_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_verbose_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_save_model_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_save_model_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_max_m_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_max_m_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_max_n_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_max_n_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_texture_max_m_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_texture_max_m_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_scales_get(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_scales_set(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_read(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_write(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FaceRecognizer_train(IntPtr, IntPtr[], Int32, Int32[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FaceRecognizer_update(IntPtr, IntPtr[], Int32, Int32[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FaceRecognizer_predict1(IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FaceRecognizer_predict2(IntPtr, IntPtr, Int32&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FaceRecognizer_write1(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FaceRecognizer_read1(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FaceRecognizer_write2(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FaceRecognizer_read2(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FaceRecognizer_setLabelInfo(IntPtr, Int32, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FaceRecognizer_getLabelInfo(IntPtr, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FaceRecognizer_getLabelsByString(IntPtr, String(HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_model_filename_get(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_model_filename_set(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_save_model_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_save_model_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_seed_get(IntPtr, UInt32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_seed_set(IntPtr, UInt32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_feats_m_get(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_feats_m_set(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_radius_m_get(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_radius_m_set(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_pupils0_get(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_pupils0_set(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_pupils1_get(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_pupils1_set(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_detectROI_get(IntPtr, Rect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_detectROI_set(IntPtr, Rect): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_read(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_write(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_create(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_Ptr_FacemarkAAM_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_Ptr_FacemarkAAM_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_new(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_model_filename_get(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_model_filename_set(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_m_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_m_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkAAM_Params_n_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_getUnconnectedOutLayersNames(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_enableFusion(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_getPerfProfile(IntPtr, IntPtr, Int64&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_Facemark_loadModel(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_Facemark_fit(IntPtr, IntPtr, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_create(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_Ptr_FacemarkLBF_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_Ptr_FacemarkLBF_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_new(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_shape_offset_get(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_shape_offset_set(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_cascade_face_get(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_cascade_face_set(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_verbose_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_verbose_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_n_landmarks_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_n_landmarks_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_initShape_n_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_initShape_n_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_stages_n_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_stages_n_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_tree_n_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_tree_n_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_tree_depth_get(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_tree_depth_set(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_bagging_overlap_get(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    face_FacemarkLBF_Params_bagging_overlap_set(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_blobFromImages(IntPtr[], Int32, Double, Size, Scalar, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_shrinkCaffeModel_NotWindows(String(HasFieldMarshal), String(HasFieldMarshal), String[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_shrinkCaffeModel_Windows(String(HasFieldMarshal), String(HasFieldMarshal), String[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_shrinkCaffeModel(String, String, String[], Int32): PrivateScope, Public, Static, HideBySig
    dnn_writeTextGraph_NotWindows(String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_writeTextGraph_Windows(String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_writeTextGraph(String, String): PrivateScope, Public, Static, HideBySig
    dnn_NMSBoxes_Rect(IntPtr, IntPtr, Single, Single, IntPtr, Single, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_NMSBoxes_Rect2d(IntPtr, IntPtr, Single, Single, IntPtr, Single, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_NMSBoxes_RotatedRect(IntPtr, IntPtr, Single, Single, IntPtr, Single, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_resetMyriadDevice(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_new(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_readFromModelOptimizer(String(HasFieldMarshal), String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_empty(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_dump(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_dumpToFile(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_getLayerId(IntPtr, String(HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_getLayerNames(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_connect1(IntPtr, String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_connect2(IntPtr, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_setInputsNames(IntPtr, String[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_forward1(IntPtr, String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_forward2(IntPtr, IntPtr[], Int32, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_forward3(IntPtr, IntPtr[], Int32, String[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_setHalideScheduler(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_setPreferableBackend(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_setPreferableTarget(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_setInput(IntPtr, IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_Net_getUnconnectedOutLayers(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_sizeAt(IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_step(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_stepAt(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromDarknet_NotWindows(String(HasFieldMarshal), String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromDarknet_Windows(String(HasFieldMarshal), String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromDarknet(String, String, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig
    dnn_readNetFromDarknet(Byte*, IntPtr, Byte*, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromCaffe_NotWindows(String(HasFieldMarshal), String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromCaffe_Windows(String(HasFieldMarshal), String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromCaffe(String, String, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig
    dnn_readNetFromCaffe(Byte*, IntPtr, Byte*, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromTensorflow_NotWindows(String(HasFieldMarshal), String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromTensorflow_Windows(String(HasFieldMarshal), String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromTensorflow(String, String, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig
    dnn_readNetFromTensorflow(Byte*, IntPtr, Byte*, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromTorch_NotWindows(String(HasFieldMarshal), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromTorch_Windows(String(HasFieldMarshal), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromTorch(String, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig
    dnn_readNet_NotWindows(String(HasFieldMarshal), String(HasFieldMarshal), String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNet_Windows(String(HasFieldMarshal), String(HasFieldMarshal), String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNet(String, String, String, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig
    dnn_readTorchBlob_NotWindows(String(HasFieldMarshal), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readTorchBlob_Windows(String(HasFieldMarshal), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readTorchBlob(String, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig
    dnn_readNetFromModelOptimizer_NotWindows(String(HasFieldMarshal), String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromModelOptimizer_Windows(String(HasFieldMarshal), String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromModelOptimizer(String, String, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig
    dnn_readNetFromONNX_NotWindows(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromONNX_Windows(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readNetFromONNX(String, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig
    dnn_readNetFromONNX(Byte*, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readTensorFromONNX_NotWindows(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readTensorFromONNX_Windows(String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    dnn_readTensorFromONNX(String, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig
    dnn_blobFromImage(IntPtr, Double, Size, Scalar, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_dot(IntPtr, IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_zeros1(Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_zeros2(Int32, Int32[](In, HasFieldMarshal), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_ones1(Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_ones2(Int32, Int32[](In, HasFieldMarshal), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_eye(Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_create1(IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_create2(IntPtr, Int32, Int32[](HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_locateROI(IntPtr, Size&(Out), Point&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_adjustROI(IntPtr, Int32, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_subMat1(IntPtr, Int32, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_subMat2(IntPtr, Int32, Range[], IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_isContinuous(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_isSubmatrix(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_elemSize(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_elemSize1(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_type(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_depth(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_channels(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_step1(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_empty(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_total(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_checkVector(IntPtr, Int32, Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_flags(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_dims(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_rows(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_cols(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_size(IntPtr, Size&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_new4(Int32, Int32[](HasFieldMarshal), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_new5(Int32, Int32[](HasFieldMarshal), Int32, Scalar, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_new6(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_new7(IntPtr, Range, Range, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_new8(IntPtr, Rect, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_new9(IntPtr, Range[], IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_getMat(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_row(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_col(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_rowRange(IntPtr, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_colRange(IntPtr, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_diag(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_diag_static(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_clone(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_copyTo1(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_copyTo2(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_copyTo_toUMat1(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_copyTo_toUMat2(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_convertTo(IntPtr, IntPtr, Int32, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_assignTo(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_setTo_Scalar(IntPtr, Scalar, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_setTo_InputArray(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_reshape1(IntPtr, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_reshape2(IntPtr, Int32, Int32, Int32[](In, HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_t(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_inv(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_mul(IntPtr, IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_copyTo_Mat(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_convertTo_SparseMat(IntPtr, IntPtr, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_convertTo_Mat(IntPtr, IntPtr, Int32, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_assignTo(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_create(IntPtr, Int32, Int32[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_clear(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_addref(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_release(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_elemSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_elemSize1(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_type(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_depth(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_channels(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_size1(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_size2(IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_dims(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_nzcount(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_hash_1d(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_hash_2d(IntPtr, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_hash_3d(IntPtr, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_hash_nd(IntPtr, Int32[], IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_ptr_1d(IntPtr, Int32, Int32, UInt64*, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_ptr_2d(IntPtr, Int32, Int32, Int32, UInt64*, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_ptr_3d(IntPtr, Int32, Int32, Int32, Int32, UInt64*, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_ptr_nd(IntPtr, Int32[], Int32, UInt64*, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_new1(Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_new2(Int32, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_UMat_new3(Int32, Int32, Int32, Scalar, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorSubtract_MatExprMatExpr(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorMultiply_MatExprMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorMultiply_MatMatExpr(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorMultiply_MatExprDouble(IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorMultiply_DoubleMatExpr(Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorMultiply_MatExprMatExpr(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorDivide_MatExprMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorDivide_MatMatExpr(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorDivide_MatExprDouble(IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorDivide_DoubleMatExpr(Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorDivide_MatExprMatExpr(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_abs_MatExpr(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_OutputArray_new_byMat(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_OutputArray_new_byUMat(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_OutputArray_new_byScalar(Scalar, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_OutputArray_new_byVectorOfMat(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_OutputArray_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_OutputArray_getMat(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_OutputArray_getScalar(IntPtr, Scalar&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_OutputArray_getVectorOfMat(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_new1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_new2(Int32, Int32[], Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_new3(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_operatorAssign_SparseMat(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_operatorAssign_Mat(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_clone(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SparseMat_copyTo_SparseMat(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorNE_MatDouble(IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_new1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_new2(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_toMat(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_row(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_col(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_diag(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_submat(IntPtr, Int32, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_t(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_inv(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_mul_toMatExpr(IntPtr, IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_mul_toMat(IntPtr, IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_cross(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_dot(IntPtr, IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_size(IntPtr, Size&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_MatExpr_type(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorUnaryMinus_MatExpr(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorUnaryNot_MatExpr(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorAdd_MatExprMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorAdd_MatMatExpr(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorAdd_MatExprScalar(IntPtr, Scalar, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorAdd_ScalarMatExpr(Scalar, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorAdd_MatExprMatExpr(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorSubtract_MatExprMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorSubtract_MatMatExpr(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorSubtract_MatExprScalar(IntPtr, Scalar, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_operatorSubtract_ScalarMatExpr(Scalar, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorDivide_DoubleMat(Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorAnd_MatMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorAnd_MatDouble(IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorAnd_DoubleMat(Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorOr_MatMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorOr_MatDouble(IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorOr_DoubleMat(Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorXor_MatMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorXor_MatDouble(IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorXor_DoubleMat(Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorNot(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorLT_MatMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorLT_DoubleMat(Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorLT_MatDouble(IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorLE_MatMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorLE_DoubleMat(Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorLE_MatDouble(IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorGT_MatMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorGT_DoubleMat(Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorGT_MatDouble(IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorGE_MatMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorGE_DoubleMat(Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorGE_MatDouble(IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorEQ_MatMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorEQ_DoubleMat(Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorEQ_MatDouble(IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorNE_MatMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorNE_DoubleMat(Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_int(IntPtr, MatForeachFunctionInt32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec2i(IntPtr, MatForeachFunctionVec2i): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec3i(IntPtr, MatForeachFunctionVec3i): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec4i(IntPtr, MatForeachFunctionVec4i): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec6i(IntPtr, MatForeachFunctionVec6i): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_float(IntPtr, MatForeachFunctionFloat): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec2f(IntPtr, MatForeachFunctionVec2f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec3f(IntPtr, MatForeachFunctionVec3f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec4f(IntPtr, MatForeachFunctionVec4f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec6f(IntPtr, MatForeachFunctionVec6f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_double(IntPtr, MatForeachFunctionDouble): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec2d(IntPtr, MatForeachFunctionVec2d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec3d(IntPtr, MatForeachFunctionVec3d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec4d(IntPtr, MatForeachFunctionVec4d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec6d(IntPtr, MatForeachFunctionVec6d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorUnaryMinus(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorAdd_MatMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorAdd_MatScalar(IntPtr, Scalar, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorAdd_ScalarMat(Scalar, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorMinus_Mat(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorSubtract_MatMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorSubtract_MatScalar(IntPtr, Scalar, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorSubtract_ScalarMat(Scalar, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorMultiply_MatMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorMultiply_MatDouble(IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorMultiply_DoubleMat(Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorDivide_MatMat(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_operatorDivide_MatDouble(IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec4f(IntPtr, Vec4f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec6f(IntPtr, Vec6f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec2d(IntPtr, Vec2d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec3d(IntPtr, Vec3d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec4d(IntPtr, Vec4d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec6d(IntPtr, Vec6d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Point(IntPtr, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Point2f(IntPtr, Point2f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Point2d(IntPtr, Point2d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Point3i(IntPtr, Point3i): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Point3f(IntPtr, Point3f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Point3d(IntPtr, Point3d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Size(IntPtr, Size): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Size2f(IntPtr, Size2f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Size2d(IntPtr, Size2d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Rect(IntPtr, Rect): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Rect2f(IntPtr, Rect2f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Rect2d(IntPtr, Rect2d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_uchar(IntPtr, MatForeachFunctionByte): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec2b(IntPtr, MatForeachFunctionVec2b): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec3b(IntPtr, MatForeachFunctionVec3b): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec4b(IntPtr, MatForeachFunctionVec4b): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec6b(IntPtr, MatForeachFunctionVec6b): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_short(IntPtr, MatForeachFunctionInt16): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec2s(IntPtr, MatForeachFunctionVec2s): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec3s(IntPtr, MatForeachFunctionVec3s): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec4s(IntPtr, MatForeachFunctionVec4s): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_forEach_Vec6s(IntPtr, MatForeachFunctionVec6s): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_setMatData(IntPtr, Byte*, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_getMatData(IntPtr, Byte*, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Mat(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_char(IntPtr, SByte): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_uchar(IntPtr, Byte): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_short(IntPtr, Int16): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_ushort(IntPtr, UInt16): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_int(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_float(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_double(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec2b(IntPtr, Vec2b): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec3b(IntPtr, Vec3b): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec4b(IntPtr, Vec4b): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec6b(IntPtr, Vec6b): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec2s(IntPtr, Vec2s): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec3s(IntPtr, Vec3s): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec4s(IntPtr, Vec4s): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec6s(IntPtr, Vec6s): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec2w(IntPtr, Vec2w): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec3w(IntPtr, Vec3w): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec4w(IntPtr, Vec4w): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec6w(IntPtr, Vec6w): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec2i(IntPtr, Vec2i): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec3i(IntPtr, Vec3i): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec4i(IntPtr, Vec4i): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec6i(IntPtr, Vec6i): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec2f(IntPtr, Vec2f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_push_back_Vec3f(IntPtr, Vec3f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_isSubmatrix(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_elemSize(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_elemSize1(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_type(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_depth(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_channels(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_empty(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_total1(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_total2(IntPtr, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_checkVector(IntPtr, Int32, Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_ptr1d(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_ptr2d(IntPtr, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_ptr3d(IntPtr, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_ptrnd(IntPtr, Int32[](In, HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_flags(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_dims(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_rows(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_cols(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_data(IntPtr, Byte*&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_datastart(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_dataend(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_datalimit(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_size(IntPtr, Size&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_sizeAt(IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_step1(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_step(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_stepAt(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_abs_Mat(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_convertTo(IntPtr, IntPtr, Int32, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_assignTo(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_setTo_Scalar(IntPtr, Scalar, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_setTo_InputArray(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_reshape1(IntPtr, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_reshape2(IntPtr, Int32, Int32, Int32[](In, HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_t(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_inv(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_mul(IntPtr, IntPtr, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_cross(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_dot(IntPtr, IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_zeros1(Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_zeros2(Int32, Int32[](In, HasFieldMarshal), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_ones1(Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_ones2(Int32, Int32[](In, HasFieldMarshal), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_eye(Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_create1(IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_create2(IntPtr, Int32, Int32[](HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_reserve(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_reserveBuffer(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_resize1(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_resize2(IntPtr, IntPtr, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_pop_back(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_locateROI(IntPtr, Size&(Out), Point&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_adjustROI(IntPtr, Int32, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_subMat1(IntPtr, Int32, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_subMat2(IntPtr, Int32, Range[], IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_isContinuous(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_isGpuMatVector(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_sizeof(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_new1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_new2(Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_new3(Int32, Int32, Int32, Scalar, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_new4(IntPtr, Range, Range, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_new5(IntPtr, Range, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_new6(IntPtr, Range[](HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_new7(IntPtr, Rect, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_new8(Int32, Int32, Int32, IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_new9(Int32, Int32[](HasFieldMarshal), Int32, IntPtr, IntPtr[](HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_new9(Int32, Int32[](HasFieldMarshal), Int32, IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_new10(Int32, Int32[](HasFieldMarshal), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_new11(Int32, Int32[](HasFieldMarshal), Int32, Scalar, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_new12(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_getUMat(IntPtr, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_row(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_col(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_rowRange(IntPtr, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_colRange(IntPtr, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_diag(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_diag_static(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_clone(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_copyTo1(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_copyTo2(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_copyTo_toMat1(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mat_copyTo_toMat2(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_getMatVector(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_getFlags(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_getObj(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_getSz(IntPtr, Size&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_kind(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_dims(IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_cols(IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_rows(IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_size(IntPtr, Int32, Size&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_sizend(IntPtr, Int32[], Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_sameSize(IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_total(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_type(IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_depth(IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_channels(IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_isContinuous(IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_isSubmatrix(IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_empty(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_copyTo1(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_copyTo2(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_offset(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_step(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_isMat(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_isUMat(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_isMatVector(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_isUMatVector(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_isMatx(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_isVector(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec2b(IntPtr, Vec2b): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec3b(IntPtr, Vec3b): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec4b(IntPtr, Vec4b): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec6b(IntPtr, Vec6b): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec2s(IntPtr, Vec2s): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec3s(IntPtr, Vec3s): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec4s(IntPtr, Vec4s): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec6s(IntPtr, Vec6s): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec2w(IntPtr, Vec2w): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec3w(IntPtr, Vec3w): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec4w(IntPtr, Vec4w): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec6w(IntPtr, Vec6w): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_new_byMat(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_new_byUMat(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_new_byMatExpr(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_new_byScalar(Scalar, IntPtr&(Out), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_new_byDouble(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_new_byVectorOfMat(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_new_byVecb(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_new_byVecs(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_new_byVecw(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_new_byVeci(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_new_byVecf(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_new_byVecd(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_delete_withScalar(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_getMat(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_InputArray_getUMat(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_DMatch(IntPtr, DMatch): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_vectorOfKeyPoint(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_vectorOfDMatch(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Point2i(IntPtr, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Point2f(IntPtr, Point2f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Point2d(IntPtr, Point2d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Point3i(IntPtr, Point3i): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Point3f(IntPtr, Point3f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Point3d(IntPtr, Point3d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Size2i(IntPtr, Size): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Size2f(IntPtr, Size2f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Size2d(IntPtr, Size2d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Rect2i(IntPtr, Rect): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Rect2f(IntPtr, Rect2f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Rect2d(IntPtr, Rect2d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Scalar(IntPtr, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec2i(IntPtr, Vec2i): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec3i(IntPtr, Vec3i): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec4i(IntPtr, Vec4i): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec6i(IntPtr, Vec6i): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec2d(IntPtr, Vec2d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec3d(IntPtr, Vec3d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec4d(IntPtr, Vec4d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec6d(IntPtr, Vec6d): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec2f(IntPtr, Vec2f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec3f(IntPtr, Vec3f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec4f(IntPtr, Vec4f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Vec6f(IntPtr, Vec6f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_indexer(IntPtr, String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_writeRaw(IntPtr, String(HasFieldMarshal), IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_writeComment(IntPtr, String(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_getDefaultObjectName(String(HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_elname(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_startWriteStruct(IntPtr, String(HasFieldMarshal), Int32, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_endWriteStruct(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_state(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_write_int(IntPtr, String(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_write_float(IntPtr, String(HasFieldMarshal), Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_write_double(IntPtr, String(HasFieldMarshal), Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_write_String(IntPtr, String(HasFieldMarshal), String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_write_Mat(IntPtr, String(HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_write_SparseMat(IntPtr, String(HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_write_vectorOfKeyPoint(IntPtr, String(HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_write_vectorOfDMatch(IntPtr, String(HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_writeScalar_int(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_writeScalar_float(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_writeScalar_double(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_writeScalar_String(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_String(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_int(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_float(IntPtr, Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_double(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Mat(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_SparseMat(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_Range(IntPtr, Range): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_shift_KeyPoint(IntPtr, KeyPoint): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec3b(IntPtr, Vec3b&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec4b(IntPtr, Vec4b&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec6b(IntPtr, Vec6b&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec2s(IntPtr, Vec2s&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec3s(IntPtr, Vec3s&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec4s(IntPtr, Vec4s&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec6s(IntPtr, Vec6s&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec2w(IntPtr, Vec2w&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec3w(IntPtr, Vec3w&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec4w(IntPtr, Vec4w&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec6w(IntPtr, Vec6w&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNodeIterator_new1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNodeIterator_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNodeIterator_operatorAsterisk(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNodeIterator_operatorIncrement(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNodeIterator_operatorPlusEqual(IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNodeIterator_readRaw(IntPtr, String(HasFieldMarshal), IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNodeIterator_operatorEqual(IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNodeIterator_operatorMinus(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNodeIterator_operatorLessThan(IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_new1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_new2(String(HasFieldMarshal), Int32, String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_open(IntPtr, String(HasFieldMarshal), Int32, String(HasFieldMarshal), Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_isOpened(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_releaseAndGetString(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_getFirstTopLevelNode(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileStorage_root(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_KeyPoint(IntPtr, KeyPoint&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_DMatch(IntPtr, DMatch&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Point2i(IntPtr, Point&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Point2f(IntPtr, Point2f&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Point2d(IntPtr, Point2d&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Point3i(IntPtr, Point3i&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Point3f(IntPtr, Point3f&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Point3d(IntPtr, Point3d&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Size2i(IntPtr, Size&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Size2f(IntPtr, Size2f&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Size2d(IntPtr, Size2d&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Rect2i(IntPtr, Rect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Rect2f(IntPtr, Rect2f&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Rect2d(IntPtr, Rect2d&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Scalar(IntPtr, Scalar&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec2i(IntPtr, Vec2i&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec3i(IntPtr, Vec3i&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec4i(IntPtr, Vec4i&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec6i(IntPtr, Vec6i&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec2d(IntPtr, Vec2d&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec3d(IntPtr, Vec3d&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec4d(IntPtr, Vec4d&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec6d(IntPtr, Vec6d&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec2f(IntPtr, Vec2f&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec3f(IntPtr, Vec3f&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec4f(IntPtr, Vec4f&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec6f(IntPtr, Vec6f&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Vec2b(IntPtr, Vec2b&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_type(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_empty(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_isNone(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_isSeq(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_isMap(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_isInt(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_isReal(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_isString(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_isNamed(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_name(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_size(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_toInt(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_toFloat(IntPtr, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_toDouble(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_toString(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_toMat(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_begin(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_end(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_readRaw(IntPtr, String(HasFieldMarshal), IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_int(IntPtr, Int32&(Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_float(IntPtr, Single&(Out), Single): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_double(IntPtr, Double&(Out), Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_String(IntPtr, IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Mat(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_SparseMat(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_vectorOfKeyPoint(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_vectorOfDMatch(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_read_Range(IntPtr, Range&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SVD_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SVD_operatorThis(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SVD_backSubst(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SVD_static_compute1(IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SVD_static_compute2(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SVD_static_backSubst(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SVD_static_solveZ(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SVD_u(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SVD_w(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SVD_vt(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_LDA_new1(Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_LDA_new2(IntPtr, IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_LDA_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_LDA_save_String(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_LDA_load_String(IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_LDA_save_FileStorage(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_LDA_load_FileStorage(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_LDA_compute(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_LDA_project(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_LDA_reconstruct(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_LDA_eigenvectors(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_LDA_eigenvalues(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_LDA_subspaceProject(IntPtr, IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_LDA_subspaceReconstruct(IntPtr, IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_new1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_operatorThis_byString(IntPtr, String(HasFieldMarshal), IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_FileNode_operatorThis_byInt(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_randShuffle(IntPtr, Double, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_kmeans(IntPtr, Int32, IntPtr, TermCriteria, Int32, Int32, IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_cubeRoot(Single, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_fastAtan2(Single, Single, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Algorithm_write(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Algorithm_read(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Algorithm_empty(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Algorithm_save(IntPtr, String): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Algorithm_getDefaultName(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCA_new1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCA_new2(IntPtr, IntPtr, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCA_new3(IntPtr, IntPtr, Int32, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCA_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCA_operatorThis(IntPtr, IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCA_computeVar(IntPtr, IntPtr, IntPtr, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCA_project1(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCA_project2(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCA_backProject1(IntPtr, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCA_backProject2(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCA_eigenvectors(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCA_eigenvalues(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCA_mean(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCA_write(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCA_read(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_RNG_fill(UInt64&, IntPtr, Int32, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_RNG_gaussian(UInt64&, Double, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SVD_new1(IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SVD_new2(IntPtr, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_solveCubic(IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_solvePoly(IntPtr, IntPtr, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_eigen(IntPtr, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_eigenNonSymmetric(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_calcCovarMatrix_Mat(IntPtr[](HasFieldMarshal), Int32, IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_calcCovarMatrix_InputArray(IntPtr, IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCACompute(IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCACompute2(IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCAComputeVar(IntPtr, IntPtr, IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCAComputeVar2(IntPtr, IntPtr, IntPtr, IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCAProject(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PCABackProject(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SVDecomp(IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_SVBackSubst(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_Mahalanobis(IntPtr, IntPtr, IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_dft(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_idft(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_dct(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_idct(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_mulSpectrums(IntPtr, IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_getOptimalDFTSize(Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_theRNG_get(UInt64&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_theRNG_set(UInt64): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_randu_InputArray(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_randu_Scalar(IntPtr, Scalar, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_randn_InputArray(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_randn_Scalar(IntPtr, Scalar, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_randShuffle(IntPtr, Double, UInt64&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_pow_Mat(IntPtr, Double, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_exp_Mat(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_log_Mat(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_polarToCart(IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_cartToPolar(IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_phase(IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_magnitude_Mat(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_checkRange(IntPtr, Int32, Point&(Out), Double, Double, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_patchNaNs(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_gemm(IntPtr, IntPtr, Double, IntPtr, Double, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_mulTransposed(IntPtr, IntPtr, Int32, IntPtr, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_transpose(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_transform(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_perspectiveTransform(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_perspectiveTransform_Mat(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_perspectiveTransform_Point2f(IntPtr, Int32, IntPtr, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_perspectiveTransform_Point2d(IntPtr, Int32, IntPtr, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_perspectiveTransform_Point3f(IntPtr, Int32, IntPtr, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_perspectiveTransform_Point3d(IntPtr, Int32, IntPtr, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_completeSymm(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_setIdentity(IntPtr, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_determinant(IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_trace(IntPtr, Scalar&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_invert(IntPtr, IntPtr, Int32, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_solve(IntPtr, IntPtr, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_solveLP(IntPtr, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_sort(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_sortIdx(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_split(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_mixChannels(IntPtr[], UInt32, IntPtr[], UInt32, Int32[], UInt32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_extractChannel(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_insertChannel(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_flip(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_rotate(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_repeat1(IntPtr, Int32, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_repeat2(IntPtr, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_hconcat1(IntPtr[](HasFieldMarshal), UInt32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_hconcat2(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_vconcat1(IntPtr[](HasFieldMarshal), UInt32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_vconcat2(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_bitwise_and(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_bitwise_or(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_bitwise_xor(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_bitwise_not(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_absdiff(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_copyTo(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_inRange_InputArray(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_inRange_Scalar(IntPtr, Scalar, Scalar, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_compare(IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_min1(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_min_MatMat(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_min_MatDouble(IntPtr, Double, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_max1(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_max_MatMat(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_max_MatDouble(IntPtr, Double, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_sqrt(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_subtract_ScalarInputArray(Scalar, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_multiply(IntPtr, IntPtr, IntPtr, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_divide1(Double, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_divide2(IntPtr, IntPtr, IntPtr, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_scaleAdd(IntPtr, Double, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_addWeighted(IntPtr, Double, IntPtr, Double, Double, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_convertScaleAbs(IntPtr, IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_convertFp16(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_LUT(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_sum(IntPtr, Scalar&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_countNonZero(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_findNonZero(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_mean(IntPtr, IntPtr, Scalar&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_meanStdDev_OutputArray(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_meanStdDev_Scalar(IntPtr, Scalar&(Out), Scalar&(Out), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_norm1(IntPtr, Int32, IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_norm2(IntPtr, IntPtr, Int32, IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_PSNR(IntPtr, IntPtr, Double, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_batchDistance(IntPtr, IntPtr, IntPtr, Int32, IntPtr, Int32, Int32, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_normalize(IntPtr, IntPtr, Double, Double, Int32, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_reduceArgMax(IntPtr, IntPtr, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_reduceArgMin(IntPtr, IntPtr, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_minMaxLoc1(IntPtr, Double&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_minMaxLoc2(IntPtr, Double&(Out), Double&(Out), Point&(Out), Point&(Out), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_minMaxIdx1(IntPtr, Double&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_minMaxIdx2(IntPtr, Double&(Out), Double&(Out), Int32[](Out, HasFieldMarshal), Int32[](Out, HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_reduce(IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_merge(IntPtr[](HasFieldMarshal), UInt32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_RotatedRect_byThreeVertexPoints(Point2f, Point2f, Point2f): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_setBreakOnError(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    redirectError(CvErrorCallback, IntPtr, IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_setNumThreads(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_getNumThreads(Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_getThreadNum(Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_getBuildInformation(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_getVersionString(Byte*, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_getVersionMajor(Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_getVersionMinor(Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_getVersionRevision(Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_getTickCount(Int64&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_getTickFrequency(Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_getCPUTickCount(Int64&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_checkHardwareSupport(Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_getHardwareFeatureName(Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_getCPUFeaturesLine(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_getNumberOfCPUs(Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_setUseOptimized(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_useOptimized(Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_format(IntPtr, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_logger_setLogLevel(LogLevel, LogLevel&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_logger_getLogLevel(LogLevel&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_borderInterpolate(Int32, Int32, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_copyMakeBorder(IntPtr, IntPtr, Int32, Int32, Int32, Int32, Int32, Scalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_add(IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_subtract_InputArray2(IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    core_subtract_InputArrayScalar(IntPtr, Scalar, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_setPreFilterType(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_getPreFilterSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_setPreFilterSize(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_getPreFilterCap(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_setPreFilterCap(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_getTextureThreshold(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_setTextureThreshold(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_getUniquenessRatio(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_setUniquenessRatio(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_getSmallerBlockSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_setSmallerBlockSize(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_getROI1(IntPtr, Rect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_setROI1(IntPtr, Rect): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_getROI2(IntPtr, Rect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_setROI2(IntPtr, Rect): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_Ptr_StereoSGBM_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_Ptr_StereoSGBM_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoSGBM_create(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoSGBM_getPreFilterCap(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoSGBM_setPreFilterCap(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoSGBM_getUniquenessRatio(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoSGBM_setUniquenessRatio(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoSGBM_getP1(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoSGBM_setP1(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoSGBM_getP2(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoSGBM_setP2(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoSGBM_getMode(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoSGBM_setMode(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_findEssentialMat_InputArray1(IntPtr, IntPtr, IntPtr, Int32, Double, Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_findEssentialMat_InputArray2(IntPtr, IntPtr, Double, Point2d, Int32, Double, Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_fisheye_projectPoints2(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Double, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_fisheye_distortPoints(IntPtr, IntPtr, IntPtr, IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_fisheye_undistortPoints(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_fisheye_initUndistortRectifyMap(IntPtr, IntPtr, IntPtr, IntPtr, Size, Int32, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_fisheye_undistortImage(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Size): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_fisheye_estimateNewCameraMatrixForUndistortRectify(IntPtr, IntPtr, Size, IntPtr, IntPtr, Double, Size, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_fisheye_calibrate(IntPtr, IntPtr, Size, IntPtr, IntPtr, IntPtr, IntPtr, Int32, TermCriteria, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_fisheye_stereoRectify(IntPtr, IntPtr, IntPtr, IntPtr, Size, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Int32, Size, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_fisheye_stereoCalibrate(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Size, IntPtr, IntPtr, Int32, TermCriteria, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoMatcher_compute(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoMatcher_getMinDisparity(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoMatcher_setMinDisparity(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoMatcher_getNumDisparities(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoMatcher_setNumDisparities(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoMatcher_getBlockSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoMatcher_setBlockSize(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoMatcher_getSpeckleWindowSize(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoMatcher_setSpeckleWindowSize(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoMatcher_getSpeckleRange(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoMatcher_setSpeckleRange(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoMatcher_getDisp12MaxDiff(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoMatcher_setDisp12MaxDiff(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_Ptr_StereoBM_delete(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_Ptr_StereoBM_get(IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_create(Int32, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_StereoBM_getPreFilterType(IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_findFundamentalMat_arrayF32(Point2f[], Int32, Point2f[], Int32, Int32, Double, Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_computeCorrespondEpilines_InputArray(IntPtr, Int32, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_computeCorrespondEpilines_array2d(Point2d[](In), Int32, Int32, Double*, Point3f[](In, Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_computeCorrespondEpilines_array3d(Point3d[](In), Int32, Int32, Double*, Point3f[](In, Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_triangulatePoints_InputArray(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_triangulatePoints_array(Double*, Double*, Point2d[](In), Int32, Point2d[](In), Int32, Vec4d[](In, Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_correctMatches_InputArray(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_correctMatches_array(Double*, Point2d[], Int32, Point2d[], Int32, Point2d[], Point2d[]): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_filterSpeckles(IntPtr, Double, Int32, Double, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_getValidDisparityROI(Rect, Rect, Int32, Int32, Int32, Rect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_validateDisparity(IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_reprojectImageTo3D(IntPtr, IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_estimateAffine3D(IntPtr, IntPtr, IntPtr, IntPtr, Double, Double, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_sampsonDistance_InputArray(IntPtr, IntPtr, IntPtr, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_sampsonDistance_Point3d(Point3d, Point3d, Double*, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_estimateAffine2D(IntPtr, IntPtr, IntPtr, Int32, Double, UInt64, Double, UInt64, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_estimateAffinePartial2D(IntPtr, IntPtr, IntPtr, Int32, Double, UInt64, Double, UInt64, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_decomposeHomographyMat(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_filterHomographyDecompByVisibleRefpoints(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_undistort(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_initUndistortRectifyMap(IntPtr, IntPtr, IntPtr, IntPtr, Size, Int32, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_initWideAngleProjMap(IntPtr, IntPtr, Size, Int32, Int32, IntPtr, IntPtr, Int32, Double, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_getDefaultNewCameraMatrix(IntPtr, Size, Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_undistortPoints(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_undistortPointsIter(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, TermCriteria): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_recoverPose_InputArray1(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_recoverPose_InputArray2(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Double, Point2d, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_recoverPose_InputArray3(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Double, IntPtr, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_drawFrameAxes(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Single, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_findCirclesGrid_InputArray(IntPtr, Size, IntPtr, Int32, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_findCirclesGrid_vector(IntPtr, Size, IntPtr, Int32, IntPtr, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_calibrateCamera_InputArray(IntPtr[], Int32, IntPtr[], Int32, Size, IntPtr, IntPtr, IntPtr, IntPtr, Int32, TermCriteria, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_calibrateCamera_vector(IntPtr[], Int32, Int32[], IntPtr[], Int32, Int32[], Size, Double*, Double[](In, Out), Int32, IntPtr, IntPtr, Int32, TermCriteria, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_calibrationMatrixValues_InputArray(IntPtr, Size, Double, Double, Double&(Out), Double&(Out), Double&(Out), Point2d&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_calibrationMatrixValues_array(Double*, Size, Double, Double, Double&(Out), Double&(Out), Double&(Out), Point2d&(Out), Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_stereoCalibrate_InputArray(IntPtr[], Int32, IntPtr[], Int32, IntPtr[], Int32, IntPtr, IntPtr, IntPtr, IntPtr, Size, IntPtr, IntPtr, IntPtr, IntPtr, Int32, TermCriteria, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_stereoCalibrate_array(IntPtr[], Int32, Int32[], IntPtr[], Int32, Int32[], IntPtr[], Int32, Int32[], Double*, Double[](In, Out), Int32, Double*, Double[](In, Out), Int32, Size, IntPtr, IntPtr, IntPtr, IntPtr, Int32, TermCriteria, Double&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_stereoRectify_InputArray(IntPtr, IntPtr, IntPtr, IntPtr, Size, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Int32, Double, Size, Rect&(Out), Rect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_stereoRectify_array(Double*, Double[], Int32, Double*, Double[], Int32, Size, Double*, Double[], Double*, Double*, Double*, Double*, Double*, Int32, Double, Size, Rect&(Out), Rect&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_stereoRectifyUncalibrated_InputArray(IntPtr, IntPtr, IntPtr, Size, IntPtr, IntPtr, Double, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_stereoRectifyUncalibrated_array(Point2d[], Int32, Point2d[], Int32, Double*, Size, Double*, Double*, Double, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_rectify3Collinear_InputArray(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr[], Int32, IntPtr[], Int32, Size, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Double, Size, Rect&(Out), Rect&(Out), Int32, Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_getOptimalNewCameraMatrix_InputArray(IntPtr, IntPtr, Size, Double, Size, Rect&(Out), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_getOptimalNewCameraMatrix_array(Double*, Double[](In), Int32, Size, Double, Size, Rect&(Out), Int32, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_calibrateHandEye(IntPtr[], Int32, IntPtr[], Int32, IntPtr[], Int32, IntPtr[], Int32, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_calibrateRobotWorldHandEye_OutputArray(IntPtr[], Int32, IntPtr[], Int32, IntPtr[], Int32, IntPtr[], Int32, IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_calibrateRobotWorldHandEye_Pointer(IntPtr[], Int32, IntPtr[], Int32, IntPtr[], Int32, IntPtr[], Int32, Double[,](Out, HasFieldMarshal), Double[](Out, HasFieldMarshal), Double[,](Out, HasFieldMarshal), Double[](Out, HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_convertPointsToHomogeneous_InputArray(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_convertPointsToHomogeneous_array1(Vec2f[](In), Vec3f[](In, Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_convertPointsToHomogeneous_array2(Vec3f[](In), Vec4f[](In, Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_convertPointsFromHomogeneous_InputArray(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_convertPointsFromHomogeneous_array1(Vec3f[](In), Vec2f[](In, Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_convertPointsFromHomogeneous_array2(Vec4f[](In), Vec3f[](In, Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_convertPointsHomogeneous(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_findFundamentalMat_InputArray(IntPtr, IntPtr, Int32, Double, Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_findFundamentalMat_arrayF64(Point2d[], Int32, Point2d[], Int32, Int32, Double, Double, IntPtr, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_Rodrigues(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_findHomography_InputArray(IntPtr, IntPtr, Int32, Double, IntPtr, Int32, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_findHomography_vector(Point2d[], Int32, Point2d[], Int32, Int32, Double, IntPtr, Int32, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_findHomography_UsacParams(IntPtr, IntPtr, IntPtr, WUsacParams&, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_RQDecomp3x3_InputArray(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Vec3d&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_RQDecomp3x3_Mat(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Vec3d&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_decomposeProjectionMatrix_InputArray(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_decomposeProjectionMatrix_Mat(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_matMulDeriv(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_composeRT_InputArray(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_composeRT_Mat(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_projectPoints_InputArray(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_projectPoints_Mat(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_solvePnP_InputArray(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_solvePnP_vector(Point3f[], Int32, Point2f[], Int32, Double*, Double[], Int32, Double[](Out), Double[](Out), Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_solvePnPRansac_InputArray(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Int32, Int32, Single, Double, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_solvePnPRansac_vector(Point3f[], Int32, Point2f[], Int32, Double*, Double[], Int32, Double[](Out), Double[](Out), Int32, Int32, Single, Double, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_initCameraMatrix2D_Mat(IntPtr[], Int32, IntPtr[], Int32, Size, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_initCameraMatrix2D_array(IntPtr[], Int32, Int32[], IntPtr[], Int32, Int32[], Size, Double, IntPtr&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_findChessboardCorners_InputArray(IntPtr, Size, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_findChessboardCorners_vector(IntPtr, Size, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_checkChessboard(IntPtr, Size, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_findChessboardCornersSB_OutputArray(IntPtr, Size, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_findChessboardCornersSB_vector(IntPtr, Size, IntPtr, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_find4QuadCornerSubpix_InputArray(IntPtr, IntPtr, Size, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_find4QuadCornerSubpix_vector(IntPtr, IntPtr, Size, Int32&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_drawChessboardCorners_InputArray(IntPtr, Size, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    calib3d_drawChessboardCorners_array(IntPtr, Size, Point2f[](In), Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class OpenCvSharp.Internal.StdString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UIntPtr Size 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, HideBySig
Class OpenCvSharp.Internal.Win32Api: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    LoadLibrary(String): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class OpenCvSharp.Internal.WindowsLibraryLoader: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    OpenCvSharp.Internal.WindowsLibraryLoader Instance 'get ' : 
    System.Collections.Generic.List`1[System.String] AdditionalPaths 'get ' : 
  Methods:
    get_Instance(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AdditionalPaths(): PrivateScope, Public, HideBySig, SpecialName
    IsLibraryLoaded(String): PrivateScope, Public, HideBySig
    IsCurrentPlatformSupported(): PrivateScope, Public, Static, HideBySig
    IsDotNetCore(): PrivateScope, Public, Static, HideBySig
    LoadLibrary(String, IEnumerable`1(Optional, HasDefault)): PrivateScope, Public, HideBySig
Interface OpenCvSharp.Internal.Vectors.IStdVector`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: T,  Covariant
  Interfaces:
    System.IDisposable
  Properties:
    Int32 Size 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ToArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class OpenCvSharp.Internal.Vectors.VectorOfByte: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UIntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Byte]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[System.Byte]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfDMatch: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UIntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[OpenCvSharp.DMatch]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.DMatch]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfDouble: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UIntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Double]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[System.Double]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfDTreesNode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.ML.DTrees+Node]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfFloat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UIntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Single]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[System.Single]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfImageFeatures: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.Detail.ImageFeatures]
  Properties:
    Int32 Size 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfInt32: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UIntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Int32]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[System.Int32]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfKeyPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UIntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[OpenCvSharp.KeyPoint]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.KeyPoint]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfMat: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[OpenCvSharp.Mat]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.Mat]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, HideBySig
Class OpenCvSharp.Internal.Vectors.VectorOfPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UIntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[OpenCvSharp.Point]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.Point]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfPoint2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.Point2d]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfPoint2f: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UIntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[OpenCvSharp.Point2f]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.Point2f]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfPoint3f: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UIntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[OpenCvSharp.Point3f]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.Point3f]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfRect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UIntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[OpenCvSharp.Rect]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.Rect]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfRect2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UIntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[OpenCvSharp.Rect2d]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.Rect2d]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfRotatedRect: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UIntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[OpenCvSharp.RotatedRect]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.RotatedRect]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UIntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[System.String]
  Properties:
    Int32 Size 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfVec2f: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.Vec2f]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, HideBySig
Class OpenCvSharp.Internal.Vectors.VectorOfVec3f: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.Vec3f]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, HideBySig
Class OpenCvSharp.Internal.Vectors.VectorOfVec4f: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[OpenCvSharp.Vec4f]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.Vec4f]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, HideBySig
Class OpenCvSharp.Internal.Vectors.VectorOfVec4i: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[OpenCvSharp.Vec4i]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.Vec4i]
  Properties:
    Int32 Size 'get ' : 
    IntPtr ElemPtr 'get ' : 
  Methods:
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ElemPtr(): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, HideBySig
Class OpenCvSharp.Internal.Vectors.VectorOfVectorByte: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[System.Byte[]]
  Properties:
    Int32 Size 'get ' : 
  Methods:
    GetSize1(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSize2(): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfVectorDMatch: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.DMatch[]]
  Properties:
    Int32 Size 'get ' : 
  Methods:
    GetSize1(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSize2(): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfVectorDouble: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[System.Double[]]
  Properties:
    Int32 Size 'get ' : 
  Methods:
    GetSize1(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSize2(): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfVectorInt32: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[System.Int32[]]
  Properties:
    Int32 Size 'get ' : 
  Methods:
    GetSize1(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSize2(): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfVectorKeyPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(OpenCvSharp.KeyPoint[][]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.KeyPoint[]]
  Properties:
    Int32 Size 'get ' : 
  Methods:
    GetSize1(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSize2(): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfVectorPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UIntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.Point[]]
  Properties:
    Int32 Size 'get ' : 
  Methods:
    GetSize1(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSize2(): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Vectors.VectorOfVectorPoint2f: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    OpenCvSharp.Internal.Vectors.IStdVector`1[OpenCvSharp.Point2f[]]
  Properties:
    Int32 Size 'get ' : 
  Methods:
    GetSize1(): PrivateScope, Public, HideBySig
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSize2(): PrivateScope, Public, HideBySig
    ToArray(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class OpenCvSharp.Internal.Util.ArrayAddress1`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :OpenCvSharp.DisposableObject
    Void .ctor(T[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(T[,]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr Pointer 'get ' : 
    Int32 Length 'get ' : 
  Methods:
    get_Pointer(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.Internal.Util.ArrayAddress2`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :OpenCvSharp.DisposableObject
    Void .ctor(T[][]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IEnumerable`1[T]]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetPointer(): PrivateScope, Public, HideBySig
    GetDim1Length(): PrivateScope, Public, HideBySig
    GetDim2Lengths(): PrivateScope, Public, HideBySig
Class OpenCvSharp.Internal.Util.PInvokeHelper: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    TryPInvoke(): PrivateScope, Public, Static, HideBySig
    DllImportError(Exception): PrivateScope, Public, Static, HideBySig
    CreateException(Exception): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Internal.Util.ReadOnlyArray2D`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(T[,]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T& Item [Int32, Int32] 'get ' InAttribute : 
    Int32 Length 'get ' : 
  Methods:
    get_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    GetLength(Int32): PrivateScope, Public, HideBySig
    GetBuffer(): PrivateScope, Public, HideBySig
Class OpenCvSharp.Internal.Util.SaturateCast: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToByte(SByte): PrivateScope, Public, Static, HideBySig
    ToByte(UInt16): PrivateScope, Public, Static, HideBySig
    ToByte(Int32): PrivateScope, Public, Static, HideBySig
    ToByte(Int16): PrivateScope, Public, Static, HideBySig
    ToByte(UInt32): PrivateScope, Public, Static, HideBySig
    ToByte(Single): PrivateScope, Public, Static, HideBySig
    ToByte(Double): PrivateScope, Public, Static, HideBySig
    ToByte(Int64): PrivateScope, Public, Static, HideBySig
    ToByte(UInt64): PrivateScope, Public, Static, HideBySig
    ToSByte(Byte): PrivateScope, Public, Static, HideBySig
    ToSByte(UInt16): PrivateScope, Public, Static, HideBySig
    ToSByte(Int32): PrivateScope, Public, Static, HideBySig
    ToSByte(Int16): PrivateScope, Public, Static, HideBySig
    ToSByte(UInt32): PrivateScope, Public, Static, HideBySig
    ToSByte(Single): PrivateScope, Public, Static, HideBySig
    ToSByte(Double): PrivateScope, Public, Static, HideBySig
    ToSByte(Int64): PrivateScope, Public, Static, HideBySig
    ToSByte(UInt64): PrivateScope, Public, Static, HideBySig
    ToUInt16(SByte): PrivateScope, Public, Static, HideBySig
    ToUInt16(Int16): PrivateScope, Public, Static, HideBySig
    ToUInt16(Int32): PrivateScope, Public, Static, HideBySig
    ToUInt16(UInt32): PrivateScope, Public, Static, HideBySig
    ToUInt16(Single): PrivateScope, Public, Static, HideBySig
    ToUInt16(Double): PrivateScope, Public, Static, HideBySig
    ToUInt16(Int64): PrivateScope, Public, Static, HideBySig
    ToUInt16(UInt64): PrivateScope, Public, Static, HideBySig
    ToInt16(UInt16): PrivateScope, Public, Static, HideBySig
    ToInt16(Int32): PrivateScope, Public, Static, HideBySig
    ToInt16(UInt32): PrivateScope, Public, Static, HideBySig
    ToInt16(Single): PrivateScope, Public, Static, HideBySig
    ToInt16(Double): PrivateScope, Public, Static, HideBySig
    ToInt16(Int64): PrivateScope, Public, Static, HideBySig
    ToInt16(UInt64): PrivateScope, Public, Static, HideBySig
    ToInt32(UInt32): PrivateScope, Public, Static, HideBySig
    ToInt32(Int64): PrivateScope, Public, Static, HideBySig
    ToInt32(UInt64): PrivateScope, Public, Static, HideBySig
    ToInt32(Single): PrivateScope, Public, Static, HideBySig
    ToInt32(Double): PrivateScope, Public, Static, HideBySig
    ToUInt32(SByte): PrivateScope, Public, Static, HideBySig
    ToUInt32(Int16): PrivateScope, Public, Static, HideBySig
    ToUInt32(Int32): PrivateScope, Public, Static, HideBySig
    ToUInt32(Int64): PrivateScope, Public, Static, HideBySig
    ToUInt32(UInt64): PrivateScope, Public, Static, HideBySig
    ToUInt32(Single): PrivateScope, Public, Static, HideBySig
    ToUInt32(Double): PrivateScope, Public, Static, HideBySig
    ToUInt64(SByte): PrivateScope, Public, Static, HideBySig
    ToUInt64(Int16): PrivateScope, Public, Static, HideBySig
    ToUInt64(Int32): PrivateScope, Public, Static, HideBySig
    ToUInt64(Int64): PrivateScope, Public, Static, HideBySig
    ToInt64(UInt64): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Internal.Util.ScopedGCHandle: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Object, System.Runtime.InteropServices.GCHandleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Runtime.InteropServices.GCHandle Handle 'get ' : 
    Boolean IsAllocated 'get ' : 
    System.Object Target 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FromIntPtr(IntPtr): PrivateScope, Public, Static, HideBySig
    ToIntPtr(ScopedGCHandle): PrivateScope, Public, Static, HideBySig
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAllocated(): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    Free(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class OpenCvSharp.Cv2+FishEye: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, Sealed, BeforeFieldInit
  Methods:
    ProjectPoints(InputArray, OutputArray, InputArray, InputArray, InputArray, InputArray, Double(Optional, HasDefault), OutputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    DistortPoints(InputArray, OutputArray, InputArray, InputArray, Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    UndistortPoints(InputArray, OutputArray, InputArray, InputArray, InputArray(Optional, HasDefault), InputArray(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    InitUndistortRectifyMap(InputArray, InputArray, InputArray, InputArray, Size, Int32, OutputArray, OutputArray): PrivateScope, Public, Static, HideBySig
    UndistortImage(InputArray, OutputArray, InputArray, InputArray, InputArray(Optional, HasDefault), Size(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    EstimateNewCameraMatrixForUndistortRectify(InputArray, InputArray, Size, InputArray, OutputArray, Double(Optional, HasDefault), Size(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Calibrate(IEnumerable`1, IEnumerable`1, Size, InputOutputArray, InputOutputArray, IEnumerable`1&(Out), IEnumerable`1&(Out), FishEyeCalibrationFlags(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StereoRectify(InputArray, InputArray, InputArray, InputArray, Size, InputArray, InputArray, OutputArray, OutputArray, OutputArray, OutputArray, OutputArray, FishEyeCalibrationFlags, Size(Optional, HasDefault), Double(Optional, HasDefault), Double(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    StereoCalibrate(IEnumerable`1, IEnumerable`1, IEnumerable`1, InputOutputArray, InputOutputArray, InputOutputArray, InputOutputArray, Size, OutputArray, OutputArray, FishEyeCalibrationFlags(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.Cv2+PartitionPredicate`1[T]: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  Type parameter: T,  Contravariant
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T, T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T, T, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct OpenCvSharp.FileNode+Types: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Types None = 0 : Public, Static, Literal, HasDefault
    Types Int = 1 : Public, Static, Literal, HasDefault
    Types Real = 2 : Public, Static, Literal, HasDefault
    Types Float = 2 : Public, Static, Literal, HasDefault
    Types Str = 3 : Public, Static, Literal, HasDefault
    Types String = 3 : Public, Static, Literal, HasDefault
    Types Seq = 4 : Public, Static, Literal, HasDefault
    Types Map = 5 : Public, Static, Literal, HasDefault
    Types TypeMask = 7 : Public, Static, Literal, HasDefault
    Types Flow = 8 : Public, Static, Literal, HasDefault
    Types Uniform = 8 : Public, Static, Literal, HasDefault
    Types Empty = 16 : Public, Static, Literal, HasDefault
    Types Named = 32 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.FileStorage+States: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    States Undefined = 0 : Public, Static, Literal, HasDefault
    States ValueExpected = 1 : Public, Static, Literal, HasDefault
    States NameExpected = 2 : Public, Static, Literal, HasDefault
    States InsideMap = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.FileStorage+Modes: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Modes Read = 0 : Public, Static, Literal, HasDefault
    Modes Write = 1 : Public, Static, Literal, HasDefault
    Modes Append = 2 : Public, Static, Literal, HasDefault
    Modes Memory = 4 : Public, Static, Literal, HasDefault
    Modes FormatAuto = 0 : Public, Static, Literal, HasDefault
    Modes FormatXml = 8 : Public, Static, Literal, HasDefault
    Modes FormatYaml = 16 : Public, Static, Literal, HasDefault
    Modes Base64 = 64 : Public, Static, Literal, HasDefault
    Modes WriteBase64 = 65 : Public, Static, Literal, HasDefault
Class OpenCvSharp.Mat+Indexer`1[T]: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :OpenCvSharp.MatIndexer`1[T]
  Properties:
    T Item [Int32] 'get set' : 
    T Item [Int32, Int32] 'get set' : 
    T Item [Int32, Int32, Int32] 'get set' : 
    T Item [Int32[]] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32, T): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32, Int32, T): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32, Int32, Int32, T): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32[]): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32[], T): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class OpenCvSharp.Mat+UnsafeIndexer`1[T]: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :OpenCvSharp.MatIndexer`1[T]
  Properties:
    T Item [Int32] 'get set' : 
    T Item [Int32, Int32] 'get set' : 
    T Item [Int32, Int32, Int32] 'get set' : 
    T Item [Int32[]] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32, T): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32, Int32, T): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32, Int32, Int32, T): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32[]): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32[], T): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class OpenCvSharp.Mat`1+Indexer[TElem]: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  Type parameter: TElem, System.ValueType,  NotNullableValueType DefaultConstructor
  :OpenCvSharp.MatIndexer`1[TElem]
  Properties:
    TElem Item [Int32] 'get set' : 
    TElem Item [Int32, Int32] 'get set' : 
    TElem Item [Int32, Int32, Int32] 'get set' : 
    TElem Item [Int32[]] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32, TElem): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32, Int32, TElem): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32, Int32, Int32, TElem): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32[]): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32[], TElem): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct OpenCvSharp.PCA+Flags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Flags DataAsRow = 0 : Public, Static, Literal, HasDefault
    Flags DataAsCol = 1 : Public, Static, Literal, HasDefault
    Flags UseAvg = 2 : Public, Static, Literal, HasDefault
Class OpenCvSharp.SparseMat+Indexer`1[T]: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :OpenCvSharp.SparseMatIndexer`1[T]
  Properties:
    T Item [Int32, System.Nullable`1[System.Int64]] 'get set' : 
    T Item [Int32, Int32, System.Nullable`1[System.Int64]] 'get set' : 
    T Item [Int32, Int32, Int32, System.Nullable`1[System.Int64]] 'get set' : 
    T Item [Int32[], System.Nullable`1[System.Int64]] 'get set' : 
  Methods:
    get_Item(Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32, Nullable`1(Optional, HasDefault), T): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32, Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32, Int32, Nullable`1(Optional, HasDefault), T): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32, Int32, Int32, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32, Int32, Int32, Nullable`1(Optional, HasDefault), T): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32[], Nullable`1(Optional, HasDefault)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Item(Int32[], Nullable`1(Optional, HasDefault), T): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct OpenCvSharp.SVD+Flags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Flags None = 0 : Public, Static, Literal, HasDefault
    Flags ModifyA = 1 : Public, Static, Literal, HasDefault
    Flags NoUV = 2 : Public, Static, Literal, HasDefault
    Flags FullUV = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.AgastFeatureDetector+DetectorType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DetectorType AGAST_5_8 = 0 : Public, Static, Literal, HasDefault
    DetectorType AGAST_7_12d = 1 : Public, Static, Literal, HasDefault
    DetectorType AGAST_7_12s = 2 : Public, Static, Literal, HasDefault
    DetectorType OAST_9_16 = 3 : Public, Static, Literal, HasDefault
Class OpenCvSharp.SimpleBlobDetector+Params: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single ThresholdStep 'get set' : 
    Single MinThreshold 'get set' : 
    Single MaxThreshold 'get set' : 
    UInt32 MinRepeatability 'get set' : 
    Single MinDistBetweenBlobs 'get set' : 
    Boolean FilterByColor 'get set' : 
    Byte BlobColor 'get set' : 
    Boolean FilterByArea 'get set' : 
    Single MinArea 'get set' : 
    Single MaxArea 'get set' : 
    Boolean FilterByCircularity 'get set' : 
    Single MinCircularity 'get set' : 
    Single MaxCircularity 'get set' : 
    Boolean FilterByInertia 'get set' : 
    Single MinInertiaRatio 'get set' : 
    Single MaxInertiaRatio 'get set' : 
    Boolean FilterByConvexity 'get set' : 
    Single MinConvexity 'get set' : 
    Single MaxConvexity 'get set' : 
  Methods:
    get_ThresholdStep(): PrivateScope, Public, HideBySig, SpecialName
    set_ThresholdStep(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MinThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_MinThreshold(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MaxThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxThreshold(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MinRepeatability(): PrivateScope, Public, HideBySig, SpecialName
    set_MinRepeatability(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_MinDistBetweenBlobs(): PrivateScope, Public, HideBySig, SpecialName
    set_MinDistBetweenBlobs(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FilterByColor(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterByColor(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_BlobColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BlobColor(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_FilterByArea(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterByArea(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinArea(): PrivateScope, Public, HideBySig, SpecialName
    set_MinArea(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MaxArea(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxArea(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FilterByCircularity(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterByCircularity(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinCircularity(): PrivateScope, Public, HideBySig, SpecialName
    set_MinCircularity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MaxCircularity(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxCircularity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FilterByInertia(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterByInertia(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinInertiaRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_MinInertiaRatio(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MaxInertiaRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxInertiaRatio(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FilterByConvexity(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterByConvexity(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_MinConvexity(): PrivateScope, Public, HideBySig, SpecialName
    set_MinConvexity(Single): PrivateScope, Public, HideBySig, SpecialName
    get_MaxConvexity(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxConvexity(Single): PrivateScope, Public, HideBySig, SpecialName
Struct OpenCvSharp.SimpleBlobDetector+WParams: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single thresholdStep : Public
    Single minThreshold : Public
    Single maxThreshold : Public
    UInt32 minRepeatability : Public
    Single minDistBetweenBlobs : Public
    Int32 filterByColor : Public
    Byte blobColor : Public
    Int32 filterByArea : Public
    Single minArea : Public
    Single maxArea : Public
    Int32 filterByCircularity : Public
    Single minCircularity : Public
    Single maxCircularity : Public
    Int32 filterByInertia : Public
    Single minInertiaRatio : Public
    Single maxInertiaRatio : Public
    Int32 filterByConvexity : Public
    Single minConvexity : Public
    Single maxConvexity : Public
Class OpenCvSharp.ConnectedComponents+Blob: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Label 'get set' : 
    OpenCvSharp.Point2d Centroid 'get set' : 
    Int32 Left 'get set' : 
    Int32 Top  'get set' : 
    Int32 Width 'get set' : 
    Int32 Height 'get set' : 
    OpenCvSharp.Rect Rect 'get ' : 
    Int32 Area 'get set' : 
  Methods:
    get_Label(): PrivateScope, Public, HideBySig, SpecialName
    get_Centroid(): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_Rect(): PrivateScope, Public, HideBySig, SpecialName
    get_Area(): PrivateScope, Public, HideBySig, SpecialName
Class OpenCvSharp.LineIterator+Pixel: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Properties:
    Byte* ValuePointer 'get ' : 
    OpenCvSharp.Point Pos 'get ' : 
    IntPtr Ptr 'get ' : 
  Methods:
    get_ValuePointer(): PrivateScope, Public, HideBySig, SpecialName
    get_Pos(): PrivateScope, Public, HideBySig, SpecialName
    get_Ptr(): PrivateScope, Public, HideBySig, SpecialName
    GetValue(): PrivateScope, Public, HideBySig
    SetValue(T): PrivateScope, Public, HideBySig
Struct OpenCvSharp.Moments+NativeStruct: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double m00 : Public
    Double m10 : Public
    Double m01 : Public
    Double m20 : Public
    Double m11 : Public
    Double m02 : Public
    Double m30 : Public
    Double m21 : Public
    Double m12 : Public
    Double m03 : Public
    Double mu20 : Public
    Double mu11 : Public
    Double mu02 : Public
    Double mu30 : Public
    Double mu21 : Public
    Double mu12 : Public
    Double mu03 : Public
    Double inv_sqrt_m00 : Public
Struct OpenCvSharp.Stitcher+Status: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Status OK = 0 : Public, Static, Literal, HasDefault
    Status ErrorNeedMoreImgs = 1 : Public, Static, Literal, HasDefault
    Status ErrorHomographyEstFail = 2 : Public, Static, Literal, HasDefault
    Status ErrorCameraParamsAdjustFail = 3 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.Stitcher+Mode: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Mode Panorama = 0 : Public, Static, Literal, HasDefault
    Mode Scans = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.TrackerGOTURN+Params: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
Struct OpenCvSharp.TrackerMIL+Params: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Single SamplerInitInRadius : Public
    Int32 SamplerInitMaxNegNum : Public
    Single SamplerSearchWinSize : Public
    Single SamplerTrackInRadius : Public
    Int32 SamplerTrackMaxPosNum : Public
    Int32 SamplerTrackMaxNegNum : Public
    Int32 FeatureSetNumFeatures : Public
Class OpenCvSharp.XImgProc.CvXImgProc+Segmentation: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, Sealed, BeforeFieldInit
  Methods:
    CreateSelectiveSearchSegmentationStrategyColor(): PrivateScope, Public, Static, HideBySig
    CreateSelectiveSearchSegmentationStrategySize(): PrivateScope, Public, Static, HideBySig
    CreateSelectiveSearchSegmentationStrategyTexture(): PrivateScope, Public, Static, HideBySig
    CreateSelectiveSearchSegmentationStrategyFill(): PrivateScope, Public, Static, HideBySig
    CreateSelectiveSearchSegmentationStrategyMultiple(): PrivateScope, Public, Static, HideBySig
    CreateSelectiveSearchSegmentationStrategyMultiple(SelectiveSearchSegmentationStrategy): PrivateScope, Public, Static, HideBySig
    CreateSelectiveSearchSegmentationStrategyMultiple(SelectiveSearchSegmentationStrategy, SelectiveSearchSegmentationStrategy): PrivateScope, Public, Static, HideBySig
    CreateSelectiveSearchSegmentationStrategyMultiple(SelectiveSearchSegmentationStrategy, SelectiveSearchSegmentationStrategy, SelectiveSearchSegmentationStrategy): PrivateScope, Public, Static, HideBySig
    CreateSelectiveSearchSegmentationStrategyMultiple(SelectiveSearchSegmentationStrategy, SelectiveSearchSegmentationStrategy, SelectiveSearchSegmentationStrategy, SelectiveSearchSegmentationStrategy): PrivateScope, Public, Static, HideBySig
Class OpenCvSharp.XImgProc.CvXImgProc+RL: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, Sealed, BeforeFieldInit
  Methods:
    Threshold(InputArray, OutputArray, Double, ThresholdTypes): PrivateScope, Public, Static, HideBySig
    Dilate(InputArray, OutputArray, InputArray, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    Erode(InputArray, OutputArray, InputArray, Boolean(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    GetStructuringElement(MorphShapes, Size): PrivateScope, Public, Static, HideBySig
    Paint(InputOutputArray, InputArray, Scalar): PrivateScope, Public, Static, HideBySig
    IsRLMorphologyPossible(InputArray): PrivateScope, Public, Static, HideBySig
    CreateRLEImage(IEnumerable`1, OutputArray, Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
    MorphologyEx(InputArray, OutputArray, MorphTypes, InputArray, Boolean(Optional, HasDefault), Nullable`1(Optional, HasDefault)): PrivateScope, Public, Static, HideBySig
Struct OpenCvSharp.Tracking.TrackerCSRT+Params: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 UseHog : Public
    Int32 UseColorNames : Public
    Int32 UseGray : Public
    Int32 UseRgb : Public
    Int32 UseChannelWeights : Public
    Int32 UseSegmentation : Public
    System.String WindowFunction : Public, HasFieldMarshal
    Single KaiserAlpha : Public
    Single ChebAttenuation : Public
    Single TemplateSize : Public
    Single GslSigma : Public
    Single HogOrientations : Public
    Single HogClip : Public
    Single Padding : Public
    Single FilterLr : Public
    Single WeightsLr : Public
    Int32 NumHogChannelsUsed : Public
    Int32 AdmmIterations : Public
    Int32 HistogramBins : Public
    Single HistogramLr : Public
    Int32 BackgroundRatio : Public
    Int32 NumberOfScales : Public
    Single ScaleSigmaFactor : Public
    Single ScaleModelMaxArea : Public
    Single ScaleLr : Public
    Single ScaleStep : Public
    Single PsrThreshold : Public
Class OpenCvSharp.Tracking.TrackerKCF+Params: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Single DetectThresh : Public
    Single Sigma : Public
    Single Lambda : Public
    Single InterpFactor : Public
    Single OutputSigmaFactor : Public
    Single PcaLearningRate : Public
    Boolean Resize : Public, HasFieldMarshal
    Boolean SplitCoeff : Public, HasFieldMarshal
    Boolean WrapKernel : Public, HasFieldMarshal
    Boolean CompressFeature : Public, HasFieldMarshal
    Int32 MaxPatchSize : Public
    Int32 CompressedSize : Public
    Int32 DescPca : Public
    Int32 DescNpca : Public
Struct OpenCvSharp.ML.ANN_MLP+ActivationFunctions: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ActivationFunctions Identity = 0 : Public, Static, Literal, HasDefault
    ActivationFunctions SigmoidSym = 1 : Public, Static, Literal, HasDefault
    ActivationFunctions Gaussian = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ML.ANN_MLP+TrainFlags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TrainFlags UpdateWeights = 1 : Public, Static, Literal, HasDefault
    TrainFlags NoInputScale = 2 : Public, Static, Literal, HasDefault
    TrainFlags NoOutputScale = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ML.ANN_MLP+TrainingMethods: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TrainingMethods BackProp = 0 : Public, Static, Literal, HasDefault
    TrainingMethods RProp = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ML.Boost+Types: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Types Discrete = 0 : Public, Static, Literal, HasDefault
    Types Real = 1 : Public, Static, Literal, HasDefault
    Types Logit = 2 : Public, Static, Literal, HasDefault
    Types Gentle = 3 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ML.DTrees+Node: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double Value : Public
    Int32 ClassIdx : Public
    Int32 Parent : Public
    Int32 Left : Public
    Int32 Right : Public
    Int32 DefaultDir : Public
    Int32 Split : Public
Struct OpenCvSharp.ML.DTrees+Split: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 VarIdx : Public
    Int32 Inversed : Public
    Single Quality : Public
    Int32 Next : Public
    Single C : Public
    Int32 SubsetOfs : Public
Struct OpenCvSharp.ML.KNearest+Types: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Types BruteForce = 1 : Public, Static, Literal, HasDefault
    Types KdTree = 2 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ML.LogisticRegression+RegKinds: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RegKinds RegDisable = -1 : Public, Static, Literal, HasDefault
    RegKinds RegL1 = 0 : Public, Static, Literal, HasDefault
    RegKinds RegL2 = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ML.LogisticRegression+Methods: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Methods Batch = 0 : Public, Static, Literal, HasDefault
    Methods MiniBatch = 1 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ML.StatModel+Flags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Flags UpdateModel = 1 : Public, Static, Literal, HasDefault
    Flags RawOutput = 1 : Public, Static, Literal, HasDefault
    Flags CompressedInput = 2 : Public, Static, Literal, HasDefault
    Flags PreprocessedInput = 4 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ML.SVM+Types: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Types CSvc = 100 : Public, Static, Literal, HasDefault
    Types NuSvc = 101 : Public, Static, Literal, HasDefault
    Types OneClass = 102 : Public, Static, Literal, HasDefault
    Types EpsSvr = 103 : Public, Static, Literal, HasDefault
    Types NuSvr = 104 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ML.SVM+KernelTypes: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    KernelTypes Custom = -1 : Public, Static, Literal, HasDefault
    KernelTypes Linear = 0 : Public, Static, Literal, HasDefault
    KernelTypes Poly = 1 : Public, Static, Literal, HasDefault
    KernelTypes Rbf = 2 : Public, Static, Literal, HasDefault
    KernelTypes Sigmoid = 3 : Public, Static, Literal, HasDefault
    KernelTypes Chi2 = 4 : Public, Static, Literal, HasDefault
    KernelTypes Inter = 5 : Public, Static, Literal, HasDefault
Struct OpenCvSharp.ML.SVM+ParamTypes: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ParamTypes C = 0 : Public, Static, Literal, HasDefault
    ParamTypes Gamma = 1 : Public, Static, Literal, HasDefault
    ParamTypes P = 2 : Public, Static, Literal, HasDefault
    ParamTypes Nu = 3 : Public, Static, Literal, HasDefault
    ParamTypes Coef = 4 : Public, Static, Literal, HasDefault
    ParamTypes Degree = 5 : Public, Static, Literal, HasDefault
Class OpenCvSharp.Face.FacemarkAAM+Params: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ModelFilename 'get set' : 
    Int32 M    'get set' : 
    Int32 N    'get set' : 
    Int32 NIter 'get set' : 
    Boolean Verbose 'get set' : 
    Boolean SaveModel 'get set' : 
    System.Collections.Generic.IReadOnlyList`1[System.Single] Scales 'get set' : 
  Methods:
    get_ModelFilename(): PrivateScope, Public, HideBySig, SpecialName
    set_ModelFilename(String): PrivateScope, Public, HideBySig, SpecialName
    get_M(): PrivateScope, Public, HideBySig, SpecialName
    set_M(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_N(): PrivateScope, Public, HideBySig, SpecialName
    set_N(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_NIter(): PrivateScope, Public, HideBySig, SpecialName
    set_NIter(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Verbose(): PrivateScope, Public, HideBySig, SpecialName
    set_Verbose(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_SaveModel(): PrivateScope, Public, HideBySig, SpecialName
    set_SaveModel(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Scales(): PrivateScope, Public, HideBySig, SpecialName
    set_Scales(IReadOnlyList`1): PrivateScope, Public, HideBySig, SpecialName
    Read(FileNode): PrivateScope, Public, HideBySig
    Write(FileStorage): PrivateScope, Public, HideBySig
Class OpenCvSharp.Face.FacemarkLBF+Params: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :OpenCvSharp.DisposableCvObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double ShapeOffset 'get set' : 
    System.String CascadeFace 'get set' : 
    Boolean Verbose 'get set' : 
    Int32 NLandmarks 'get set' : 
    Int32 InitShapeN 'get set' : 
    Int32 StagesN 'get set' : 
    Int32 TreeN 'get set' : 
    Int32 TreeDepth 'get set' : 
    Double BaggingOverlap 'get set' : 
    System.String ModelFilename 'get set' : 
    Boolean SaveModel 'get set' : 
    UInt32 Seed 'get set' : 
    System.Collections.Generic.IReadOnlyList`1[System.Int32] FeatsM 'get set' : 
    System.Collections.Generic.IReadOnlyList`1[System.Double] RadiusM 'get set' : 
    System.Collections.Generic.IReadOnlyList`1[System.Int32] Pupils0 'get set' : 
    System.Collections.Generic.IReadOnlyList`1[System.Int32] Pupils1 'get set' : 
    OpenCvSharp.Rect DetectROI 'get set' : 
  Methods:
    get_ShapeOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_ShapeOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CascadeFace(): PrivateScope, Public, HideBySig, SpecialName
    set_CascadeFace(String): PrivateScope, Public, HideBySig, SpecialName
    get_Verbose(): PrivateScope, Public, HideBySig, SpecialName
    set_Verbose(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NLandmarks(): PrivateScope, Public, HideBySig, SpecialName
    set_NLandmarks(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_InitShapeN(): PrivateScope, Public, HideBySig, SpecialName
    set_InitShapeN(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StagesN(): PrivateScope, Public, HideBySig, SpecialName
    set_StagesN(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TreeN(): PrivateScope, Public, HideBySig, SpecialName
    set_TreeN(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TreeDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_TreeDepth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BaggingOverlap(): PrivateScope, Public, HideBySig, SpecialName
    set_BaggingOverlap(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ModelFilename(): PrivateScope, Public, HideBySig, SpecialName
    set_ModelFilename(String): PrivateScope, Public, HideBySig, SpecialName
    get_SaveModel(): PrivateScope, Public, HideBySig, SpecialName
    set_SaveModel(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Seed(): PrivateScope, Public, HideBySig, SpecialName
    set_Seed(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_FeatsM(): PrivateScope, Public, HideBySig, SpecialName
    set_FeatsM(IReadOnlyList`1): PrivateScope, Public, HideBySig, SpecialName
    get_RadiusM(): PrivateScope, Public, HideBySig, SpecialName
    set_RadiusM(IReadOnlyList`1): PrivateScope, Public, HideBySig, SpecialName
    get_Pupils0(): PrivateScope, Public, HideBySig, SpecialName
    set_Pupils0(IReadOnlyList`1): PrivateScope, Public, HideBySig, SpecialName
    get_Pupils1(): PrivateScope, Public, HideBySig, SpecialName
    set_Pupils1(IReadOnlyList`1): PrivateScope, Public, HideBySig, SpecialName
    get_DetectROI(): PrivateScope, Public, HideBySig, SpecialName
    set_DetectROI(Rect): PrivateScope, Public, HideBySig, SpecialName
    Read(FileNode): PrivateScope, Public, HideBySig
    Write(FileStorage): PrivateScope, Public, HideBySig
